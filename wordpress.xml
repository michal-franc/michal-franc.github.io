<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.4.1" created="2015-05-31 15:16" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Pragmatic Developer</title>
	<link>http://www.mfranc.com</link>
	<description> by Michal Franc</description>
	<pubDate>Sun, 31 May 2015 15:16:41 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://www.mfranc.com</wp:base_site_url>
	<wp:base_blog_url>http://www.mfranc.com</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>LaM</wp:author_login><wp:author_email>lam.michal.franc@gmail.com</wp:author_email><wp:author_display_name><![CDATA[Michal Franc]]></wp:author_display_name><wp:author_first_name><![CDATA[Michal]]></wp:author_first_name><wp:author_last_name><![CDATA[Franc]]></wp:author_last_name></wp:author>


	<generator>http://wordpress.org/?v=3.4.1</generator>

	<item>
		<title>Beggining</title>
		<link>http://www.mfranc.com/uncategorized/poczatek/</link>
		<pubDate>Sun, 28 Jun 2009 16:15:12 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=5</guid>
		<description></description>
		<content:encoded><![CDATA[This is my first post on this blog :D Let me start with one of the great quotes.

<em> </em>

<em> </em>

<em> </em>

<em> </em>

<em> </em>

<em> </em>

<em>
<blockquote>"A journey of a thousand miles must begin with a single step."</blockquote>
</em>

<p>&nbsp;</p>

<strong><strong>Lao Tsu</strong></strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6</wp:post_id>
		<wp:post_date>2009-06-28 18:15:12</wp:post_date>
		<wp:post_date_gmt>2009-06-28 16:15:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>poczatek</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[347991609]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>2</wp:comment_id>
			<wp:comment_author><![CDATA[magdeczka]]></wp:comment_author>
			<wp:comment_author_email>magdacichon@o2.pl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>156.17.235.16</wp:comment_author_IP>
			<wp:comment_date>2009-11-15 19:46:53</wp:comment_date>
			<wp:comment_date_gmt>2009-11-15 19:46:53</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[czekamy na więcej :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626797]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[gośka]]></wp:comment_author>
			<wp:comment_author_email>strusiek19@tlen.pl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>79.187.232.210</wp:comment_author_IP>
			<wp:comment_date>2009-11-20 19:01:39</wp:comment_date>
			<wp:comment_date_gmt>2009-11-20 19:01:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[:D:D za rok wiadomo będzie kto wygra w konkursie Blog Roku :D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626799]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Seam Carving (1) - Content aware image scaling algorithm</title>
		<link>http://www.mfranc.com/uncategorized/seam-carving-part-1/</link>
		<pubDate>Fri, 20 Nov 2009 09:55:11 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=15</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify">I m developing a great algorithm at my University ,&#160; Wroclaw University of Technology. <a href="http://www.seamcarving.com/"><strong>Seam Carving</strong></a> is a idea of Shai Avidan and Ariel Shamir.</p>  <p align="justify">This Algorithm is scaling the image by defining and erasing the least significant parts of the image. This way the main and most important content of the image is untouched. I will show you this simple idea on this example.</p>  <p align="justify"><a href="http://lammichalfranc.files.wordpress.com/2009/11/skytower.jpg"><img style="display:block;float:none;margin-left:auto;margin-right:auto;" class="alignnone size-full wp-image-20" title="skytower" alt="" src="http://lammichalfranc.files.wordpress.com/2009/11/skytower.jpg" width="450" height="544" /></a></p>  <p align="justify">Image used to the testing process (Sky Tower in Wroclaw)</p>  <p align="justify">&#160;</p>  <p align="justify"><a href="http://lammichalfranc.files.wordpress.com/2009/11/dupagradient.jpg"><img style="display:block;float:none;margin-left:auto;margin-right:auto;" class="alignnone size-full wp-image-19" title="dupaGradient" alt="" src="http://lammichalfranc.files.wordpress.com/2009/11/dupagradient.jpg" width="450" height="544" /></a></p>  <p align="justify">Energy image</p>  <p align="justify">&#160;</p>  <p align="justify">Algorithm is looking for the place with the lowest energy sum.</p>  <p align="justify">&#160;</p>  <p align="justify"><a href="http://lammichalfranc.files.wordpress.com/2009/11/skytowerseam.jpg"><img style="display:block;float:none;margin-left:auto;margin-right:auto;" class="alignnone size-full wp-image-37" title="skytowerseam" alt="" src="http://lammichalfranc.files.wordpress.com/2009/11/skytowerseam.jpg" width="450" height="544" /></a></p>  <p align="justify">One of the fragments selected to remove from the image. Those fragments are called seams.</p>  <p align="justify">&#160;</p>  <p align="justify"><a href="http://lammichalfranc.files.wordpress.com/2009/11/skytowertemp.jpg"><img style="display:block;float:none;margin-left:auto;margin-right:auto;" class="alignnone size-full wp-image-21" title="skytowerTemp" alt="" src="http://lammichalfranc.files.wordpress.com/2009/11/skytowertemp.jpg" width="396" height="600" /></a></p>  <p align="justify">Original picture after one hundreds seams removed</p>  <p align="justify">&#160;</p>  <p align="justify">Notice the weird blue car. At the moment this is a very simple implementation. But we can see that main part of the image The Towers are untouched by the algorithm.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>15</wp:post_id>
		<wp:post_date>2009-11-20 11:55:11</wp:post_date>
		<wp:post_date_gmt>2009-11-20 09:55:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>seam-carving-part-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="post_tag" nicename="seam-carving"><![CDATA[seam carving]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[347991629]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[Manipulating Bitmaps in .Net &ndash; Performance comparison, LockBits vs Get Pixel Set Pixel &laquo; The Silence Of The LaMs]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://lammichalfranc.wordpress.com/2009/11/22/operacje-na-bitmapkach-net-1/</wp:comment_author_url>
			<wp:comment_author_IP>74.200.244.76</wp:comment_author_IP>
			<wp:comment_date>2010-09-14 19:43:41</wp:comment_date>
			<wp:comment_date_gmt>2010-09-14 19:43:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] manipulation&#160; seven&#160; times.I am implementing an image scaling algorithm at my University Seam Carving . While working on this project I realized that simply accessing pixels by the GetPixel and [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>LockBits vs Get Pixel Set Pixel - Performance</title>
		<link>http://www.mfranc.com/programming/operacje-na-bitmapkach-net-1/</link>
		<pubDate>Sun, 22 Nov 2009 00:02:11 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=41</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify">When using <strong>GDI+</strong> method you can <strong>optimize</strong> the process of bitmap manipulation  seven  times.I am implementing an image scaling algorithm at my University <a href="http://lammichalfranc.wordpress.com/2009/11/20/seam-carving-part-1/"><strong>Seam Carving</strong></a> . While working on this project I realized that simply accessing pixels by the <strong>GetPixel</strong> and <strong>SetPixel</strong> methods is too slow.</p>

<h2>GetPixel , SetPixel</h2>
<p align="justify">This is a really easy solution. We have two functions <strong>GetPixel</strong> and <strong>SetPixel</strong> both  have x and y coordinate as argument. <strong>GetPixel</strong> returns a color and <strong>SetPixel</strong> sets a color on the coordinate.</p>

<pre class="lang:c# decode:true">GetPixel(int x,int y)
SetPixel(int x,int y,Color color)</pre>
<p align="justify">With the use of those functions, we can easily iterate through all the <strong>pixels</strong> in the image by simply modifying the x and y variable.</p>

<pre class="lang:c# decode:true">for (int y =0; y &lt; _bmp.Height; y++)
{
    for (int x =0; x &lt; _bmp.Width; x++)
    {
        _bmp.SetPixel(x,y,color);
        Color c = _bmp.GetPixel(x,y);
     }
}</pre>
<h3>Pros</h3>
- Code is more readable.
- Easy to implement and use.
<h3>Cons</h3>
-Low efficiency.
<p align="justify">This method is really great for simple graphical operations when speed isn't important. In my scenario with the <strong>Seam Carving</strong> algorithm, I had an <strong>efficiency</strong> problem using this method. <strong>Seam Carving</strong> algorithm is making a lot of calculations in order to find seams. The time is growing exponentially with the size of the image.</p>
<p align="justify"></p>

<h2>GDI+ and LockBits.</h2>
<p align="justify">Bitmap class contains two methods <strong>LockBits</strong> and <strong>UnlockBits</strong> , with them, we can get access and work directly on the memory. <strong>LockBits</strong> method returns <strong>BitmapData</strong> object, which is used to describe the memory sector. In this method, we have to use the pointers. That's why our class should have an unsafe keyword.</p>

<pre class="lang:c# decode:true">BitmapData _bmd = _bmp.LockBits(new Rectangle(0, 0, _bmp.Width,_bmp.Height) , ImageLockMode ReadWrite, _bmp.PixelFormat);</pre>
<p align="justify"></p>
<p align="justify">With BitmapData object we need to define some variables.</p>

<pre class="lang:c# decode:true">int _pixelSize =3;
byte* _current =(byte*)(void*)_bmd.Scan0;
int _nWidth = _bmp.Width * _pixelSize;
int _nHeight = _bmp.Height;</pre>
- ScanO memory address which defines the beginning of our Bitmap
- _nWidth how many bots in one row
With this we can iterate through the image.
<pre class="lang:c# decode:true">for (int y =0; y &lt; _nHeight; y++)
{
    for (int x =0; x &lt; _nWidth;x++ )
    {
         if (x % _pixelSize ==0|| x ==0)
        {
             SetColor(new Color.Black);
         }
      _current++;
     }
}</pre>
<p align="justify">We have to remember that current variable is only a pointer  to a memory address</p>

<pre class="lang:c# decode:true"> if (x % _pixelSize ==0|| x ==0)</pre>
<p align="justify">This condition ensures that the current will always point to the beginning of the next pixel. In my example pixel is represented by  three bytes, this value is stored in the _pixelSize variable.</p>
With _current pointer we can access pixel values by using the indexer.
<pre class="lang:c# decode:true">void SetColor(,Color color)
{
     _current[0]= color.R;
     _current [1] = color.G;
     _current [2] = color.B;
}</pre>
<h3>Pros:</h3>
- Speed
<h3>Cons:</h3>
<p align="justify">-Code is confusing but we can wrap the logic in readable functions</p>
- Implementation is complicated in the beginning
<p align="justify">- unmanaged code</p>

<h2>Comparision between Gdi+ Lockbits and GetPixel SetPixel</h2>
<table border="0" frame="VOID" rules="NONE" cellspacing="0"><colgroup><col width="86" /><col width="136" /><col width="149" /></colgroup>
<tbody>
<tr>
<td align="LEFT" width="86" height="18"></td>
<td align="LEFT" bgcolor="#CCCCCC" width="136">GDI+ LockBits (ms)</td>
<td align="LEFT" bgcolor="#CCCCCC" width="149">GetPixel SetPixel (ms)</td>
</tr>
<tr>
<td align="LEFT" bgcolor="#CCCCCC" height="18">Read Pixel</td>
<td align="RIGHT" bgcolor="#33CC66">21</td>
<td align="RIGHT">157</td>
</tr>
<tr>
<td align="LEFT" bgcolor="#CCCCCC" height="18">Write Pixel</td>
<td align="RIGHT" bgcolor="#33CC66">15</td>
<td align="RIGHT">153</td>
</tr>
<tr>
<td align="LEFT" bgcolor="#CCCCCC" height="18">Iterate Image</td>
<td align="RIGHT" bgcolor="#33CC66">226</td>
<td align="RIGHT">1496</td>
</tr>
</tbody>
</table>
<p align="justify"><a href="http://lammichalfranc.files.wordpress.com/2009/11/wykresikbmp1.jpg"><img class="alignnone size-full wp-image-55" title="wykresikBmp1" src="http://lammichalfranc.files.wordpress.com/2009/11/wykresikbmp1.jpg" alt="" width="450" height="278" /></a></p>
<p align="justify">As you can see the <strong>GDI</strong>+ <strong>Lockbits</strong> are almost seven times faster than <strong>GetPixel</strong> <strong>SetPixel</strong> method</p>
<p align="justify"><a href="https://www.assembla.com/code/projektyLM/subversion/nodes/SeamCarv"><strong>Link to the project.</strong></a></p>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>41</wp:post_id>
		<wp:post_date>2009-11-22 00:02:11</wp:post_date>
		<wp:post_date_gmt>2009-11-22 00:02:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>operacje-na-bitmapkach-net-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="post_tag" nicename="lockbits"><![CDATA[lockbits]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[347991630]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[Pimpirimpi]]></wp:comment_author>
			<wp:comment_author_email>dup@zbi.ta</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>90.156.85.74</wp:comment_author_IP>
			<wp:comment_date>2009-12-13 17:48:41</wp:comment_date>
			<wp:comment_date_gmt>2009-12-13 17:48:41</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Bogdanie, korzystając z sytuacji chciałbym nadmienić tudzież zauważyć, iż onegdaj przemierzając mroczną otchłań internetowego nieładu natknąłem się na stronę http://msdn.microsoft.com/en-us/library/ms229672.aspx . Która jasno precyzuje, że nie jest koniecznością używanie znienawidzonych przez ogół wskaźników, a co za tym idzie używanie trybu unsafe przy LockBits'ie. Pozdro Zio0Oo0m :P

p.s. IntPtr]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626809]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[LaM]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>79.190.248.82</wp:comment_author_IP>
			<wp:comment_date>2009-12-13 19:25:37</wp:comment_date>
			<wp:comment_date_gmt>2009-12-13 19:25:37</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow
Jak znajdę trochę więcej czasu to poczytam o plusach i minusach obu metod i wrzucę na bloga :] Dzięki za info.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>5</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626809]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626810]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[tic]]></wp:comment_author>
			<wp:comment_author_email>noemail@noemail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>195.27.20.34</wp:comment_author_IP>
			<wp:comment_date>2010-10-05 16:18:02</wp:comment_date>
			<wp:comment_date_gmt>2010-10-05 16:18:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The code here is wrong :P]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>6</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626810]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626811]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Modifying Templates in Visual Studio</title>
		<link>http://www.mfranc.com/uncategorized/modyfikowanie-templatow-vs-2008/</link>
		<pubDate>Sun, 22 Nov 2009 10:12:58 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=67</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I am making a lot of regions while creating classes. It helps me with the management of fields methods. </p>  <p><a href="http://lammichalfranc.files.wordpress.com/2009/11/klasa.jpg"><font color="#555555"></font><img class="aligncenter size-full wp-image-69" title="klasa" alt="" src="http://lammichalfranc.files.wordpress.com/2009/11/klasa.jpg" width="304" height="387" /></a></p>  <p>I am always creating regions. So why no to automate this process ?</p>  <p>We can make our own Visual Studio template which will be used when creating new VS item like class.</p>  <p>&#160;</p>  <h3>How to ?</h3>  <p>&#160;</p>  <p><strong><em></em></strong><strong><em>Go to the folder :       <br />&quot;~InstallDirMicrosoft Visual Studio 9.0Common7IDE&quot;</em></strong></p>  <p>There you will find two catalogs : ItemTemplates and ItemTemplatesCache.</p>  <p>Those catalogs store all the default templates of Visual Studio. In ItemTemplates everything is stored in zip files. </p>  <p>In order to change the template just get the file from the zip package , modify it and put it in the zip. Modified file should be also moved to the ItemTemplatesCache.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>67</wp:post_id>
		<wp:post_date>2009-11-22 12:12:58</wp:post_date>
		<wp:post_date_gmt>2009-11-22 10:12:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>modyfikowanie-templatow-vs-2008</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="visual-studio"><![CDATA[visual studio]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[407252250]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>My online World</title>
		<link>http://www.mfranc.com/uncategorized/moj-blogowy-swiat/</link>
		<pubDate>Sun, 22 Nov 2009 19:00:09 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=75</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Everyday in the morning I m browsing sites blogs and lots of forums. I m using the <a href="http://www.newsgator.com/individuals/feeddemon/default.aspx"><strong>FeedDaemon</strong></a> organize blogs. This is a great program which also syncs itself with <a href="http://www.google.com/reader"><strong>Google Reader</strong></a>.</p>  <p>&#160;</p>  <p>I am starting with:</p>  <p><a href="http://www.maciejaniserowicz.com/"><strong><em>1. Jak .Net by Maciej Aniserowicz </em></strong></a>    <br /><a href="http://www.codinghorror.com/blog/"><strong><em>2. Coding Horror by Jeff Atwood </em></strong></a>    <br /><a href="http://codebetter.com/blogs/"><strong><em>3. Code Better</em></strong></a>    <br /><a href="http://ayende.com/Blog/Default.aspx"><strong><em>4. Ayende @ Rahien</em></strong></a>    <br /><a href="http://haacked.com/Default.aspx"><strong><em>5.haacked</em></strong></a>    <br /><a href="http://alexba.eu/"><strong><em>6.Blog Alexa</em></strong></a></p>  <p>Forums that I am watching:</p>  <p><a href="http://stackoverflow.com/"><strong><em>StackOverflow</em></strong></a>    <br /><a href="http://www.codeproject.com/"><strong><em>Code Project</em></strong></a>    <br /><a href="http://www.codeguru.pl/"><strong><em>Code Guru</em></strong></a>    <br /><a href="http://4programmers.net/"><strong><em>4programmers</em></strong></a>    <br /><a href="http://www.csharp.pl/"><strong><em>http://www.csharp.pl/</em></strong></a>    <br /><a href="http://www.coderscity.net/"><strong><em>Coders City</em></strong></a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>75</wp:post_id>
		<wp:post_date>2009-11-22 21:00:09</wp:post_date>
		<wp:post_date_gmt>2009-11-22 19:00:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>moj-blogowy-swiat</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="it"><![CDATA[IT]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[347991635]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[s]]></wp:comment_author>
			<wp:comment_author_email>s@s.pl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>90.156.18.51</wp:comment_author_IP>
			<wp:comment_date>2009-11-23 17:23:32</wp:comment_date>
			<wp:comment_date_gmt>2009-11-23 17:23:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Zapomniałeś o jeszcze jednym forum;p Może nie ta tematyka, ale skoro już się przyznajesz do nałogowego czytania... ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626817]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[LaM]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>193.239.59.78</wp:comment_author_IP>
			<wp:comment_date>2009-11-23 17:27:01</wp:comment_date>
			<wp:comment_date_gmt>2009-11-23 17:27:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Rzeczywiście. Jest takie Forum nad Forami ale tam ma dostęp tylko garstka wariatów która postanowiła męczyć się z kierunkiem Elektroniki i Telekomunikacji ;d]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>8</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626817]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626820]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>SlickRun – Command line tool for Windows</title>
		<link>http://www.mfranc.com/uncategorized/slickrun/</link>
		<pubDate>Mon, 23 Nov 2009 19:03:42 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=92</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://www.bayden.com/Slickrun/"><strong>SlickRun</strong></a> is a great command line tool which enables you to create a set of commands providing productivity boost.     <br /><a href="http://lammichalfranc.files.wordpress.com/2010/09/image6.png"><img style="display:block;float:none;margin-left:auto;margin-right:auto;border-width:0;" title="image" border="0" alt="image" src="http://lammichalfranc.files.wordpress.com/2010/09/image_thumb6.png" width="403" height="220" /></a> </p>  <p>The best thing about it is the ability to create custom commands called “Magic Words”. For example you can make a command “google &lt;parameter&gt;” which open browser and look for a provided word as a parameter.</p>  <p>&#160;</p>  <p align="center"><a href="http://lammichalfranc.files.wordpress.com/2010/09/image7.png"><img style="border-bottom:0;border-left:0;display:block;float:none;margin-left:auto;border-top:0;margin-right:auto;border-right:0;" title="image" border="0" alt="image" src="http://lammichalfranc.files.wordpress.com/2010/09/image_thumb7.png" width="220" height="29" /></a><a href="http://lammichalfranc.files.wordpress.com/2010/09/image8.png"><img style="border-bottom:0;border-left:0;display:inline;border-top:0;border-right:0;" title="image" border="0" alt="image" src="http://lammichalfranc.files.wordpress.com/2010/09/image_thumb8.png" width="213" height="37" /></a></p>  <p align="center"><strong>SlickRun</strong> is really slick.</p>  <p align="center">&#160;</p>  <p>I have created one great magic word. It opens every forum and news site I am watching. You can launch multiple functions at once by using the @MULTI@ keyword</p>  <p><strong>MagicWord: forums</strong></p>  <p><strong>Filename: @MULTI@</strong><strong>      <br />Parameters: eit@4programmers@coderscity …..</strong></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>92</wp:post_id>
		<wp:post_date>2009-11-23 21:03:42</wp:post_date>
		<wp:post_date_gmt>2009-11-23 19:03:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>slickrun</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="slickrun"><![CDATA[slickrun]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[347991641]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[kamil]]></wp:comment_author>
			<wp:comment_author_email>moojadres@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>90.156.24.146</wp:comment_author_IP>
			<wp:comment_date>2009-11-24 13:04:26</wp:comment_date>
			<wp:comment_date_gmt>2009-11-24 13:04:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[lamik, lamik, widze ze piszesz notki regularnie, w dodtaku ciekawie, tylko chwalic :D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626821]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[LaM]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>193.239.59.78</wp:comment_author_IP>
			<wp:comment_date>2009-11-24 21:37:20</wp:comment_date>
			<wp:comment_date_gmt>2009-11-24 21:37:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[No zobaczymy co z tej regularności wyjdzie :D Wkrótce napiszę relacje z IT Academic Day i relacje z rajdu Elektronika [ocenzurowaną] :] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>10</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626821]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626825]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[Total Commander Tips n Tricks &laquo; LaMowy Blog]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://lammichalfranc.wordpress.com/2010/07/29/total-commander-tips-n-tricks/</wp:comment_author_url>
			<wp:comment_author_IP>74.200.247.247</wp:comment_author_IP>
			<wp:comment_date>2010-07-29 17:28:50</wp:comment_date>
			<wp:comment_date_gmt>2010-07-29 17:28:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] have made a post abotu  SlickRun  [it&#039;s right now in polish]. This is a great program. You can define various macros and run multiple [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Optymalizacja Grafu</title>
		<link>http://www.mfranc.com/uncategorized/optymalizacja-grafu/</link>
		<pubDate>Tue, 24 Nov 2009 17:33:03 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=107</guid>
		<description></description>
		<content:encoded><![CDATA[Na mojej kochanej PWR realizowałem prostą implementację grafu z wyszukiwaniem najkrótszych ścieżek w grafie. Trochę się zirytowałem gdy mój cudowny kod chodził 20 razy wolniej ;] od kodu kolegi. Niestety moja chorobliwa ambicja nie odpuściła i postanowiłem zoptymalizować kod ..... 

Zabawę zacząłem z programikiem <a href="http://www.jetbrains.com/profiler/index.html"><strong>dotTrace</strong></a> który jest świetnym profilerem badającym wydajność programów. Fajną sprawą jest wyświetlanie ilości wywołań poszczególnych metod i czas ich trwania. Dzięki temu z łatwością możemy wydzielić bloki kodu w których najprawdopodobniej powinniśmy optymalizować. Zgodnie z zasadą 20/80 zmiana 20% najbardziej czasochłonnych  linii kodu da 80% wzrost wydajności.
<a href="http://lammichalfranc.files.wordpress.com/2009/11/profiler1.jpg"><img src="http://lammichalfranc.files.wordpress.com/2009/11/profiler1.jpg" alt="" title="profiler" width="450" height="207" class="aligncenter size-full wp-image-112" /></a>

Po analizie i paru zmianach okazało się że źle przeprowadzałem testy. Zamiast ciągle operować na tym samym elemencie za każdym razem tworzyłem nową instancję klasy odpowiedzialnej za algorytm. Przy 1 Milionie wywołań algorytmu dawało to długi czas działania aplikacji po lekkiej modyfikacji czas wykonania spadł z 60 s do 320ms.
<a href="http://lammichalfranc.files.wordpress.com/2009/11/djikstractr.jpg"><img src="http://lammichalfranc.files.wordpress.com/2009/11/djikstractr.jpg" alt="" title="DjikstraCtr" width="450" height="16" class="aligncenter size-full wp-image-120" /></a>

Conclusion:
Pamiętajmy o odpowiednim konstruowaniu testów :P


Ciekawy jest także fakt że tak naprawdę czas wykonania mojego programu zajmuje tylko 56% czasu działania aplikacji. 44% pożerają procedury .netowe
<a href="http://lammichalfranc.files.wordpress.com/2009/11/main.jpg"><img src="http://lammichalfranc.files.wordpress.com/2009/11/main.jpg" alt="" title="main" width="450" height="158" class="aligncenter size-full wp-image-124" /></a>


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>107</wp:post_id>
		<wp:post_date>2009-11-24 19:33:03</wp:post_date>
		<wp:post_date_gmt>2009-11-24 17:33:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>optymalizacja-grafu</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[418247546]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IT Academic Day</title>
		<link>http://www.mfranc.com/uncategorized/it-academic-day/</link>
		<pubDate>Wed, 25 Nov 2009 20:33:58 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=131</guid>
		<description></description>
		<content:encoded><![CDATA[Minął prawie tydzień wypadałoby coś napisać o IT Academic Day. W weekend miałem fajną wyprawę ze znajomym z uczelni do Głuchołaz [ oczywiście stosowny wpis na blogu będzie wkrótce] , stąd takie "małe" opóźnienie.

Ano wracając do tematu. Cóż ja mogę powiedzieć. Z punktu widzenia słuchacza konferencji  i "organizatora" imprezka się udała. Przez wykłady przewinęło się ponad 500 osób.Gadżety rozchodziły się jak świeże bułeczki. Smycze zniknęły chyba po 30 minutach. Szkoda że kubki tak późno dotarły bo część osób przegapiła ten jakże cudowny "item".

 Spodziewałem się że wykłady ludzi z Microsoftu będą jedną wielką kampanią marketingową ale mile się zaskoczyłem bo wykłady były naprawdę ciekawe. Wykład o nowym Visualki 2010 zebrał najwięcej "publiczności". Wykłady kończyły się dreszczykiem emocji podczas rozdawania nagród. A można było wygrać całkiem fajne rzeczy. Pomijając już koszulki do wygrania były m.in myszki , książki i office 2007 :] Gratulacje dla kolegi Troyana z naszej grupy który wygrał książeczkę do XNA [ oj grupa będzie miała co czytać ^^].
 
<a href="http://lammichalfranc.files.wordpress.com/2009/11/itad.jpg"><img class="aligncenter size-full wp-image-135" title="itad" src="http://lammichalfranc.files.wordpress.com/2009/11/itad.jpg" alt="" width="450" height="326" /></a>

Jestem na tym zdjęciu ^ ^<p>&nbsp;</p>

Było parę problemów niedociągnięć , no ale tak zawsze jest . Tego się nie da uniknąć. Zawsze coś  będzie nie tak ... zawsze ktoś zapomni za laminować identyfikator [plakaty kierujące na imprezę były genialne po prostu cud techniki]. Ciekawe co spowodowało że mikrofon na samym starcie konferencji wydawał "dziwne" dźwięki. Podziękowania dla panów obsługujących sale za szybką interwencję i dla pani z szatni za pożyczenie pewnej rzeczy :P.

Słowa uznania dla Kamila Mindy za świetne przygotowanie imprezy. Było to pierwsze tak duże przedsięwzięcie naszego "prezesa". Spotkamy się za rok na jeszcze większej i lepszej Imprezce [z lepszymi gadżetami ;] ]

Pozdrawiam wszystkich "słuchaczy". Część osób już nie mogła się doczekać kolejnego  wpisu :D

Bartłomieju wiem że to przeczytasz bo właśnie dałem ci linka ... więc my chcemy więcej fot z imprezki ;] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>131</wp:post_id>
		<wp:post_date>2009-11-25 22:33:58</wp:post_date>
		<wp:post_date_gmt>2009-11-25 20:33:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>it-academic-day</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[347991648]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA["prezes"]]></wp:comment_author>
			<wp:comment_author_email>kamil600@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>156.17.45.81</wp:comment_author_IP>
			<wp:comment_date>2009-12-01 17:23:10</wp:comment_date>
			<wp:comment_date_gmt>2009-12-01 17:23:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hehe, dzięki za miłe słowa ;]. Jednak trzeba zaznaczyć, że bez Was, grupy organizatorów impreza napewno nie wypaliłaby na takim poziomie. Dlatego słowa uznania należą się też i Wam.

Poza tym blog, jak widzę, prężnie się rozwija. 

keep it goin' :) 
pozdro800 ;] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626829]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Seam Carving (2)</title>
		<link>http://www.mfranc.com/uncategorized/seam-carving-2/</link>
		<pubDate>Tue, 01 Dec 2009 19:05:52 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=143</guid>
		<description></description>
		<content:encoded><![CDATA[Po dłuższej przerwie postanowiłem ostro wziąć się do roboty za algorytm skalowania obrazków. Jest już ładna formatka [szczyt ui designu] i parę opcji. Skalowanie statycznym seamem tzn po lini prostej i skalowanie dynamicznym seamem tzn wyszukiwanie najlepszej drogi. Wszystko jak na razie działa przy pionowym skalowaniu ale wkrótce zmontuje skalowanie poziome. Pierw muszę troszeczkę przeprojektować aplikację bo wdarł się lekki chaos do kodu i kod jest "be" a ja nie na widzę brzydkiego kodu :P

Przeprojektowałem znacznie aplikację , zrefaktoryzowałem kod dla lepszej czytelności i dorzuciłem interfejsy w celu zmniejszenia zależności pomiędzy klasami i wyeliminowania z duplikowanego kodu zgodnie z zasadą DRY = "Don't repeat Yourself" ;]. Jeszcze jeden interfejs nie jest do końca dorobiony i przemyślany bo nie wiem jak pogodzić zabawę na wskaźnikach w klasie z modyfikatorem "unsafe" ... coś wymyślę ;]

Aplikacja opiera się teraz na 2 interfejsach.

<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;&nbsp;9</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#ee6f11;">public</span> <span style="color:#ee6f11;">interface</span> <span style="color:#2b91af;">IImageProcessing</span></p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;10</span>&nbsp;&nbsp;&nbsp;&nbsp; {</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;11</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color:#ee6f11;">void</span> Open();</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;12</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color:#ee6f11;">void</span> Close();</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;13</span>&nbsp;</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;14</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color:#ee6f11;">void</span> SetBmp(<span style="color:#2b91af;">Bitmap</span> bmp);</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;15</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color:#2b91af;">Bitmap</span> GetBmp();</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;16</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color:#ee6f11;">void</span> SaveBmp(<span style="color:#ee6f11;">string</span> fileLocation);</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;17</span>&nbsp;</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;18</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color:#ee6f11;">void</span> RemoveStaticRow(<span style="color:#ee6f11;">int</span> x);</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;19</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color:#ee6f11;">void</span> RemoveDynamicRow(<span style="color:#ee6f11;">int</span>[] inTab);</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;20</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color:#ee6f11;">void</span> MarkDynamicRow(<span style="color:#ee6f11;">int</span>[] inTab);</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;21</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color:#ee6f11;">void</span> MarkStaticRow(<span style="color:#ee6f11;">int</span> x);</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;22</span>&nbsp;</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;23</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color:#ee6f11;">int</span>[,] Gradient(<span style="color:#ee6f11;">bool</span> saveBmp);</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;24</span>&nbsp;&nbsp;&nbsp;&nbsp; }</p>

<strong>IImageProcessing</strong> definiuje nasz silnik graficzny na którym będziemy operować i jego metody do obróbki obrazu.
W tym momencie mam jedną klasę implementująca ten interfejs GDIImageProces. Dzięki takiemu rozdzieleniu interfejsów od implementacji Klasa SeamCarving nie zastanawia się nad tym co się dzieje przy obróbce obrazu i mogę łatwo podmienić silnik graficzni np na wolniejszy korzystający z metod GetPixel SetPixel. Wystarczy ze stworzę nową klasę i zaimplementuje odpowiednie metody interfejsu IImageProcessing. Jest to bodajże pewna implementacja wzorca <a href="http://en.wikipedia.org/wiki/Strategy_pattern"><strong>Strategia "Policy".</strong></a>

<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;10</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#ee6f11;">public</span> <span style="color:#ee6f11;">interface</span> <span style="color:#2b91af;">IManipulator</span></p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;11</span>&nbsp;&nbsp;&nbsp;&nbsp; {</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;12</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color:#ee6f11;">void</span> ManipulateSeam(<span style="color:#2b91af;">IImageProcessing</span> imgProcessor);</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;13</span>&nbsp;&nbsp;&nbsp;&nbsp; }</p>




<strong>IManipulator</strong> definiuje algorytmy przetwarzania Seamow wyszcególniam 4 rodzaje tych algorytmów:
- Statyczne usuwanie Seama bez zaznaczania czerwoną kreską
- Statyczne usuwanie Seama z zaznaczaniem
- Dynamicznie usuwanie bez zaznaczania
- Dynamicznie usuwanie z zaznaczaniem

W tym momencie rozdzielone mam 2 metody wyjściowe jedną przyjmująca obiekt implementujący IManipulatora z zaznaczaniem i drugą bez zaznazczania. Wkrótce postaram się znaleźć jakieś lepsze rozwiązanie by była jedna metoda. A nie 2 przyjmujące podobny obiekt. Wprowadza to pewne "confusion" dla usera który nie do końca wie jak z tych metod skorzystać. Jest to spowodowane tym że musiałem zastosować śmieszne obejście błedu w GDI+ poprzez dwukrotne clonowanie bitmap.

<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;82</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color:#2b91af;">Bitmap</span> tmp = (<span style="color:#2b91af;">Bitmap</span>)_imgProcessor.GetBmp().Clone();</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;83</span>&nbsp;</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;84</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; SeamManipulation(seamManipulator, numberOfOper);</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;85</span>&nbsp;</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;86</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color:#2b91af;">Bitmap</span> tmp1 = (<span style="color:#2b91af;">Bitmap</span>)_imgProcessor.GetBmp().Clone();</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;87</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; _imgProcessor.SetBmp(tmp);</p>

Znalazłem na razie zastępczą metodę dla kolorowania składni. Add-in do visuala <strong><a href="http://copysourceashtml.codeplex.com">Copy Source As Html</strong></a>

<a href="http://lammichalfranc.files.wordpress.com/2009/12/dynamicseam.jpg"><img src="http://lammichalfranc.files.wordpress.com/2009/12/dynamicseam.jpg" alt="" title="dynamicSeam" width="450" height="539" class="aligncenter size-full wp-image-148" /></a>
Dynamiczny Seam

<a href="http://lammichalfranc.files.wordpress.com/2009/12/seamcarvingdynamic100.jpg"><img class="aligncenter size-full wp-image-147" title="seamcarvingdynamic100" src="http://lammichalfranc.files.wordpress.com/2009/12/seamcarvingdynamic100.jpg" alt="" width="343" height="583" /></a>

Rysunek po obróbce 150+ seamów.

Wrzuciłem kod źródłowy wersji "alpha" do działu <a href="http://lammichalfranc.wordpress.com/pliki/"><strong> Projekciki </strong></a>. Podaje tam także linka do mojego repozytorium Svn-owego. Proszę się nie śmiać z komentarzy :] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>143</wp:post_id>
		<wp:post_date>2009-12-01 21:05:52</wp:post_date>
		<wp:post_date_gmt>2009-12-01 19:05:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>seam-carving-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="post_tag" nicename="seam-carving"><![CDATA[seam carving]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[360168850]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Region AddIn</title>
		<link>http://www.mfranc.com/uncategorized/region-addin/</link>
		<pubDate>Wed, 02 Dec 2009 14:20:53 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=168</guid>
		<description></description>
		<content:encoded><![CDATA[Jako że jestem maniakiem "regionów" w Visualku [pozdrowienia dla  Robo-Nogi :] ] bardzo się ucieszyłem gdy znalazłem fajny add-in pod vs-a dający nowe możliwości związane własnie z regionami .

<a href="http://janyou.itpub.net/resource/8897/27551"><strong>Region AddIn</strong></a>

Najważniejszym dodatkiem jest możliwość wrzucania zaznaczonego tekstu w Nowy region lub w już istniejący Region. Jako że moja struktura kodu w klasie podzielona jest na regiony takie jak Pola prywatne publiczne , metody prywatne publiczne , konstruktory itp. często kończę z metodami porozrzucanymi po całym kodzie. W momencie tworzenia po porostu nie mam czasu na badanie czy to odpowiedni region. Dzięki temu Add inowi w łatwy i szybki sposób mogę sobie uporządkować kod.

<a href="http://lammichalfranc.files.wordpress.com/2009/12/regiony.jpg"><img src="http://lammichalfranc.files.wordpress.com/2009/12/regiony.jpg" alt="" title="regiony" width="450" height="217" class="aligncenter size-full wp-image-177" /></a>

fajne by było jakby ten add in mógł automatycznie sprawdzać czy wszystko jest w odpowiednich regionach... może jak obadam jak się robi wtyczki to sam zrobię taki bajer.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>168</wp:post_id>
		<wp:post_date>2009-12-02 14:20:53</wp:post_date>
		<wp:post_date_gmt>2009-12-02 14:20:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>region-addin</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="visual-studio"><![CDATA[visual studio]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[431917750]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Svn + VisualStudio</title>
		<link>http://www.mfranc.com/uncategorized/svn-visualstudio/</link>
		<pubDate>Thu, 03 Dec 2009 05:39:38 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=199</guid>
		<description></description>
		<content:encoded><![CDATA[Ostatnio pisząc coś w Javie pod NetBeansem odkryłem , że IDE można fajnie i przyjemnie zintegrować z Svnem.

W VisualStudio nie było takiej opcji. Wiedziałem że przy Visual Team System można korzystać z microsoftowego systemu kontroli plików ale kiedyś się tym bawiłem z kolegą i hmm no jednak Svn jest przyjemniejszy. Poszperałem w necie i znalazłem 2 add iny integrujące Svna z IDE Visuala.

<a href="http://www.visualsvn.com/">Visual Svn</a> - płatny
<a href="http://ankhsvn.open.collab.net/">Ankh Svn</a> - darmowy

Wiadomo co wybrałem zainstalowałem i przetestowałem :P

Ankh Svn potrzebuje działającego Tortoise ponieważ korzysta z niego podczas komunikacji  z serwerem. Mile się zaskoczyłem gdy Ankh bez problemowo zintegrował się z Tortoisem i wykrył aktualne repozytorium. Nawet nie musiałem nic ustawiać po prostu odpaliłem visuala i mogłem już commitować [ Oj nacommitowałem dużo bo jaka to jest frajda móc commitować z visuala :D]. Super że IDE wyświetla które pliki są aktualnie lockowane pisząc w teamie można łatwo zauważyć który plik ktoś aktualnie modyfikuje.

<a href="http://lammichalfranc.files.wordpress.com/2009/12/ankh-svn.jpg"><img src="http://lammichalfranc.files.wordpress.com/2009/12/ankh-svn.jpg" alt="" title="ankh Svn" width="248" height="552" class="aligncenter size-full wp-image-201" /></a>

<a href="http://ankhsvn.open.collab.net/servlets/ProjectProcess;jsessionid=597BF90C0731F37F417DA0552AA9C5B9?pageID=PpvZJl">Więcej screenow prezentujących ankha</a>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>199</wp:post_id>
		<wp:post_date>2009-12-03 07:39:38</wp:post_date>
		<wp:post_date_gmt>2009-12-03 05:39:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>svn-visualstudio</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="post_tag" nicename="svn"><![CDATA[svn]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="visual-studio"><![CDATA[visual studio]]></category>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1293224016";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[365356357]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Wykład - &quot;Wprowadzenie do OOP&quot;</title>
		<link>http://www.mfranc.com/uncategorized/wyklad-wprowadzenie-do-oop/</link>
		<pubDate>Sat, 12 Dec 2009 18:39:33 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=210</guid>
		<description></description>
		<content:encoded><![CDATA[Ho ho ho .... ;]

Od ostatniego wpisu minęło trochę czasu. Miałem bardzo pracowity tydzień. Projekty uczelniane , sporo nauki , wyjazd do Warszawy [o którym napiszę wkrótce] no i mini prelekcja na spotkaniu Wrocławskiej Studenckiej Grupy .net.

Temat prelekcji "Wprowadzenie do Programowania Zorientowanego Obiektowo.

Był to mój pierwszy wykład. Nie poszło najlepiej ale też nie było najgorzej. W sam raz na pierwszy raz. 

<a href="http://www.datafilehost.com/download-50dd8de9.html">Slajdy</a> 
<a href="http://www.datafilehost.com/download-6a109be1.html">Kod Źródłowy</a> 

Jeszcze kilka takich wykładów i na pewno się wyrobię ^^. 

"You don't face your fears, you stand up to them."]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>210</wp:post_id>
		<wp:post_date>2009-12-12 20:39:33</wp:post_date>
		<wp:post_date_gmt>2009-12-12 18:39:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wyklad-wprowadzenie-do-oop</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[456945785]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SQL Academic Day 2009</title>
		<link>http://www.mfranc.com/uncategorized/sql-academic-day-2009/</link>
		<pubDate>Sun, 20 Dec 2009 12:28:57 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=214</guid>
		<description></description>
		<content:encoded><![CDATA[Konferencja odbyła się 10 Grudnia. "Od studenta do specjalisty Business Inteligence" [ Bardziej nieoficjalnie "SQL Academic Day 2009"]

Organizator imprezy <a href="http://www.wwsi.edu.pl/">Warszawska Wyższa Szkoła Informatyki</a>

Wystartowaliśmy pociągiem o 23:25 w śr [konferencja odbywała się w czw]. Tego samego dnia spotkanie naszej Grupy .net skończyło się o 21:30 więc nawet nie zdążyłem się porządnie spakować .... no i oczywiście czegoś zapomniałem ... wydrukowanych mapek. Dojechaliśmy do Warszawy o 6 rano. Jako że jakoś tam się orientowałem gdzie niby jest lokalizacja konferencji szybko ruszyliśmy w "miasto". Jak się okazało dotarcie do miejsca przeznaczenia zajęło nam 2.5h [ ale ile pozwiedzaliśmy : D].


Prelekcje:

<strong>1. "Model procesu dydaktycznego w zakresie Business Intelligence"</strong>
- Dr hab. inż. prof. Zenon Gniazdowski
- Mgr inż. Andrzej Ptasznik

Dwu Częściowa prezentacja była na temat problemów kształcenia przyszłych specjalistów Business Intelligence. Krótka reklama uczelni , na której odbywała się konferencja.

<strong>2. "Planowanie procesów ET&amp;L (Extract , Transform &amp; Load) z Wykorzystaniem MS SQL 2008 Integration Services"</strong>
-Mgr inż. Paweł Potasiński

Prelegent omówił problemy związane z przetwarzaniem danych i pokazał jak można je rozwiązać przy pomocy Microsoftowych narzędzi. Świetny wykład ;]

<strong>3. "Realizacja zadań analitycznych z wykorzystaniem MS SQL Server 2008 Analysis Services"</strong>
-Mgr inż. Łukasz Kieloch

Podczas całej prezentacji Laptop Dell-a powodował niemałe problemy techniczne . Prezentacja pokazała od strony praktycznej jak można wykorzystać MS-owe narzędzie do wykonywania analiz danych.

<strong>4. "Zanim utoniesz w danych - wprowadzenie do data mining"</strong>
-Mgr Grzegorz Stołecki

Po tej prezentacji już wiem co to data mining o/ z czym to się je , po co to jest.
Świetny prelegent. Świetny wykład.

<strong>5. "Przedstawienie wybranych metod wielowymiarowej statystycznej analizy danych , które są najczęściej wykorzystywanie w marketingu"</strong>
-Dr Natalia Nehrebecka

Bardzo naukowe podejście do problematyki analizy danych. Było troszeczkę nużąco.

<strong>6. "Potrzeby i oczekiwania pracodawców - architektura technologii Oracle w zakresie BI"</strong>
-Mgr inż. Michał Grochowski

Jedna wielka reklama Oracla. Widać było że prelegent jest świetny w tym co robi tzn w reklamowaniu produktów Oracla.


Podsumowanie:

Było super. Świetne wykłady. Dużo cennych informacji. Naprawdę warto było pomęczyć się te 12 h w pociągu by posłuchać specjalistów w branży. Niestety musieliśmy wracać tego samego dnia [przez naszą kochaną uczelnie ].  Podróż powrotna intercity ^ ^ w promocji była interesująca.

Cały wyjazd odespałem dopiero w weekend.
Pozdrowienia dla mojego towarzysza podróży Kamila "prezesa" Mindy :D]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>214</wp:post_id>
		<wp:post_date>2009-12-20 14:28:57</wp:post_date>
		<wp:post_date_gmt>2009-12-20 12:28:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sql-academic-day-2009</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="it"><![CDATA[IT]]></category>
		<category domain="post_tag" nicename="sql"><![CDATA[sql]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1292789249";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[391644074]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>String Interning</title>
		<link>http://www.mfranc.com/uncategorized/string-interning/</link>
		<pubDate>Mon, 28 Dec 2009 13:22:42 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=234</guid>
		<description></description>
		<content:encoded><![CDATA[Czytając blog <a href="http://ayende.com/Blog/default.aspx">Ayende Rahien-a</a> natknąłem się na dość ciekawą technikę przetrzymywania stringów w pamięci. "String Interning".

Stringi wrzuca się do tablicy. Jeżeli dany string znajduje się już w tablicy przekazujemy tylko wskaźnik do istniejącego stringa jeżeli nie istnieje wrzucamy go do pamięci i przekazujemy wskaźnik.

Technika ta pozwala zaoszczędzić pamięć i przyspiesza porównywanie stringów [Sprowadza porównywanie  do porownywania zwyklych referencji a nie obiektów. Jak wiemy porownywanie stringów to operacja o zlozonosci obliczeniowej O(n) natomiast porównywanie  wskaźników to O(1).
				
Java i .Net stosuje ten mechanizm automatycznie w momencie tworzenia literałów.Python składuje tak małe stringi.

<div style="font-family:Fixedsys;font-size:10pt;color:#bfbf00;background:black;">
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;12</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color:#ee6f11;">int</span> <span style="color:white;">i</span> = 1;</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;13</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color:#ee6f11;">int</span> <span style="color:white;">j</span> = 1;</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;14</span>&nbsp;</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;15</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color:#2b91af;">String</span> <span style="color:white;">s</span> = <span style="color:#eb6565;">&quot;jakis string&quot;</span>;</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;16</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color:#2b91af;">String</span> <span style="color:white;">a</span> = <span style="color:#eb6565;">&quot;jakis string&quot;</span>;</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;17</span>&nbsp;</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;18</span>&nbsp;</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;19</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color:#2b91af;">Console</span>.<span style="color:white;">WriteLine</span>((<span style="color:#2b91af;">Object</span>)<span style="color:white;">s</span> == (<span style="color:#2b91af;">Object</span>)<span style="color:white;">a</span>);</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;20</span>&nbsp;</p>
<p style="margin:0;"><span style="color:yellow;">&nbsp;&nbsp;&nbsp;21</span>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <span style="color:#2b91af;">Console</span>.<span style="color:white;">WriteLine</span>((<span style="color:#2b91af;">Object</span>)<span style="color:white;">i</span> == (<span style="color:#2b91af;">Object</span>)<span style="color:white;">j</span>);</p>
</div>

W przykładzie tym 1 porównanie zwróci wartość true. Oznacza to że oba obiekty wskazują w to samo miejsce. 
W momencie tworzenia <strong>stringa s</strong> została przeszukana tablica stringów. Jako że nie było w niej stringu "jakiś string" została ona wrzucona do tej tablicy i został przekazany wskaźnik. <strong>Stringowi a</strong> natomiast został przypisany wskaźnik do miejsca na stercie na które wskazuje s ponieważ ta wartość już jest w tablicy. [Tak to działa w znacznym uproszczeniu].

Rzutowanie na <strong>Object</strong> jest wykonane po to by odwołać się do przeciążenia operatora w klasie bazowej (==) który porównuje referencję.

2 porównanie zwraca wartość false. Przykład ten jest tylko po to by ukazać że interning nie jest stosowane dla np intów. A to dlatego że są one w przeciwieństwie do literałów obiektami <a href="http://en.wikipedia.org/wiki/Immutable_object">immutable</a> [zmiennymi] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>234</wp:post_id>
		<wp:post_date>2009-12-28 13:22:42</wp:post_date>
		<wp:post_date_gmt>2009-12-28 13:22:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>string-interning</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="post_tag" nicename="interning"><![CDATA[interning]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1293217781";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[347991676]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[Gutek]]></wp:comment_author>
			<wp:comment_author_email>kuba@gutek.pl</wp:comment_author_email>
			<wp:comment_author_url>http://blog.gutek.pl</wp:comment_author_url>
			<wp:comment_author_IP>95.160.100.217</wp:comment_author_IP>
			<wp:comment_date>2010-02-04 01:33:07</wp:comment_date>
			<wp:comment_date_gmt>2010-02-04 01:33:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[trzymaj: http://blogs.msdn.com/ericlippert/archive/2009/09/28/string-interning-and-string-empty.aspx

dlugie i dobre tlumaczenie :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626854]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Testowanie jednostkowe metody prywatnej</title>
		<link>http://www.mfranc.com/uncategorized/testowanie-jednostkowe-metody-prywatnej/</link>
		<pubDate>Wed, 30 Dec 2009 18:04:07 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=251</guid>
		<description></description>
		<content:encoded><![CDATA[Natknąłem się ostatnio na pewien problem.

Jak przeprowadzić test funkcji zadeklarowanej jako <strong>private</strong> wewnątrz pewnej klasy.

Rozwiązania:

1. Najbardziej oczywiste zmienić dostęp do metody na publiczny.

2. Zadeklarować metodę jako <strong>protected</strong> i dziedziczyć w innej klasie która obuduje metodę prywatną metodą publiczną [wrapper].

3.Zadeklarować funkcje jako <strong>internal</strong> i użyć Attrybutu <a href="http://devlicio.us/blogs/derik_whittaker/archive/2007/04/09/internalsvisibleto-testing-internal-methods-in-net-2-0.aspx">InternalsVisibleTo</a>. Oczywiście jeżeli kod testów trzymamy w tym samym projekcie co nasza metoda to <strong>internal</strong> już zapewnia nam dostęp do niej. Dobrą praktyką jednak jest trzymanie kodu testującego w oddzielnym Assembly.

Wszystkie te sposoby psują naszą koncepcje która z jakiegoś ważnego powodu zakładała że nasza  funkcja powinna być prywatna.

Pozostają jeszcze :

4.Użyć mechanizmu refleksji.

5. Zastanowić się czy aby na pewno powinniśmy testować metodę prywatną .Z zalożenia testy jednostkowe powinny testować interfejs naszej klasy.Testując metody prywatne narażamy sie na testowanie implementacji co przy zmianie kodu może wymusić zmianę testów.

<a href="http://www.codeproject.com/KB/cs/testnonpublicmembers.aspx">Więcej Info</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>251</wp:post_id>
		<wp:post_date>2009-12-30 20:04:07</wp:post_date>
		<wp:post_date_gmt>2009-12-30 18:04:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>testowanie-jednostkowe-metody-prywatnej</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="nunit"><![CDATA[NUnit]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="unit-test"><![CDATA[unit test]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[431490729]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Reklama Allegro - Viral Marketing</title>
		<link>http://www.mfranc.com/uncategorized/reklama-allegro/</link>
		<pubDate>Mon, 01 Feb 2010 19:38:11 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=270</guid>
		<description></description>
		<content:encoded><![CDATA[Dotarł dzisiaj do mnie zabawny link.

<a href="http://allegro.pl/item897049350_okazja_skrzypiacy_snieg_sprzed_garazu_bcm.html">Okazja Skrzypiący śnieg sprzed garażu</a>

Można się pośmiać przez chwilę ale po co ktoś tworzy takie aukcje ? 
Pierwsza myśl , zabawa. Ot jakiś znudzony student po ciężkiej sesji postanowił w czysto altruistycznym zamyśle rozbawić wszystkich.

<a href="http://lammichalfranc.files.wordpress.com/2010/02/viral_marketing.jpg"><img src="http://lammichalfranc.files.wordpress.com/2010/02/viral_marketing.jpg" alt="" title="viral_marketing" width="307" height="218" class="aligncenter size-full wp-image-273" /></a>

Po głebszym jednak zastanowiemu na myśl przychodzi inne wytłumaczenie.
Kto zyskuje najwięcej na generowanym trafficu ?

<a href="http://www.allegro.pl/">ALLEGRO</a>

Pomyślmy hmm.
Tworzymy aukcję z zabawnym przedmiotem. Dodajemy śmieszny opis, dodajemy śmieszną sejsę pytań i odpowiedzi (Schemat ten ciągle się powtarza w tego typu akcjach). I Voila mamy lawinowy przyrost ruchu na naszej stronie. Wszyscy przesyłają link znajomym , no bo przecież to jest zabawne rozśmiesza ludzi a my lubimy rozśmieszać ludzi. Świetny przykład marketingu wirusowego (Viral Marketing).


Więcej ciekawego info:
<a href="http://andrewchenblog.com/2008/03/05/facebook-viral-marketing-when-and-why-do-apps-jump-the-shark/">Link 1</a>
<a href="http://www.forentrepreneurs.com/lessons-learnt-viral-marketing/">Link 2</a>



]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>270</wp:post_id>
		<wp:post_date>2010-02-01 21:38:11</wp:post_date>
		<wp:post_date_gmt>2010-02-01 19:38:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>reklama-allegro</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[347991685]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[netsh.pl]]></wp:comment_author>
			<wp:comment_author_email>netma@netma.pl</wp:comment_author_email>
			<wp:comment_author_url>http://www.netsh.pl</wp:comment_author_url>
			<wp:comment_author_IP>84.10.123.115</wp:comment_author_IP>
			<wp:comment_date>2010-07-22 22:09:20</wp:comment_date>
			<wp:comment_date_gmt>2010-07-22 22:09:20</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[jeszcze lepszy pomysl na marketing widzialem tutaj <a href="netsh.pl" rel="nofollow">netsh.pl</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626859]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>JIT-er</title>
		<link>http://www.mfranc.com/uncategorized/jit-er/</link>
		<pubDate>Wed, 03 Feb 2010 20:41:34 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=281</guid>
		<description></description>
		<content:encoded><![CDATA[Jak działa .Netowy mechanizm kompilacji:
1. Mamy kod napisany w wysoko abstrakcyjnym języku który jest zgodny ze standardem CLS(<a href="http://msdn.microsoft.com/en-us/library/12a7a7h3(VS.71).aspx">Common Language Specification</a>)

2. Kompilator kompiluje kod źródłowy do kodu CIL(<a href="http://en.wikipedia.org/wiki/Common_Intermediate_Language">Common Intermediate Language</a>).

3. W momencie uruchomienia aplikacji JIT-er pobiera kod w CIL-u i na wyjściu generuje natywny kod zoptymalizowany pod architekturę naszego systemu , procka itp [ fragmenty kodu są często cachowane zwiększając wydajność  procesu]. Kompilator nie przetwarza całego kodu. Wyciąga tylko te fragmenty , które są aktualnie używane. Proces ten różni się od mechanizmu  C++ - owego  , jeden proces kompilacji ,przetworzenie całego piku źródłowego , linkowanie i na wyjsciu plik wykonywalny. W sumie "Just in Time compialtion" jest czymś pośrednim między Kompilatorem standardowym a Interpreterem.


<a href="http://lammichalfranc.files.wordpress.com/2010/02/jit.jpg"><img src="http://lammichalfranc.files.wordpress.com/2010/02/jit.jpg" alt="" title="JIT" width="209" height="295" class="aligncenter size-full wp-image-282" /></a>


Za każdym razem kompilator działający  w trybie normalnym optymalizuje proces kompilacji , dostosowywuje
go do naszego sprzętu.

Mechanizmy optymalizacyjne:

-<a href="//en.wikipedia.org/wiki/Constant_folding">constant folding</a>
Proces upraszczania stałych w czasie kompilacji. Np kompilator wyrażenie <strong>20*20*20 </strong>zamieni na liczbe całkowita <strong>8000</strong>

-<a href="http://en.wikipedia.org/wiki/Copy_propagation">copy propagation</a>
Wyszukiwanie przypisań bezpośrednich (np x=y) i zastępowanie ich jedną zmienną.

-<a href="http://8086.blogcu.com/range-check-elimination-in-c/1595627">elimination of range checking</a>
Wyłączenie sprawdzania przekroczenia zakresu np w tablicy  w miejscach gdzie to sprawdzenie jest niepotrzebne.

-<a href="http://en.wikipedia.org/wiki/Common_subexpression_elimination">elimination of common subexpressions</a>
Wyszukiwanie podobnych wyrażeń i zastępowanie ich jedną zmienną.

-<a href="http://en.wikipedia.org/wiki/Inline_function">method inlining</a>
Zastępowanie wywołania metody kodem zawartym w funkcji.

Do dyspozycji prócz standardowego JIT-era mamy jeszcze.
EconoJIT -er , który nie przeprowadza optymalizacji i tym samym proces kompilacji jest znacznie szybszy. Dodatkowo można wyłączyć opcję cachowania fragmentów kodu. Jest to szczególnie ważne w sytuacji gdy mamy dostępny niewielki obszar pamięci.

Ciekawym narzędziem dostępnym w ramach platformy .Net jest <a href="http://msdn.microsoft.com/en-us/library/6t9t5wcf.aspx">Ngen (Native Image Generator)</a>. Ngen kompiluje <a href="http://en.wikipedia.org/wiki/Bytecode"> kod natywny</a> i trzyma go w plikach zwanych "native images" , które wrzuca do cachu.  Dzięki temu przy uruchomeniu konkretnego programu nie musimy przeprowadzać kompilacji JIT-owej ponieważ korzystamy z tego prekompilowanego kodu.

Jeżeli kogoś interesowałoby deployowanie aplikacji skompilowanej do natywnego kodu bez uzywania Jitera i bez konieczności instalowania .Net Frameworka .Istnieją narzędzia które pozwalają to zrobić np. <a href="http://www.remotesoft.com/linker/intro.html">Salamander</a>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>281</wp:post_id>
		<wp:post_date>2010-02-03 20:41:34</wp:post_date>
		<wp:post_date_gmt>2010-02-03 20:41:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jit-er</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[360551293]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Make noise - pro active developer</title>
		<link>http://www.mfranc.com/?p=2144</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=2144</guid>
		<description></description>
		<content:encoded><![CDATA[Most developers don’t make noise. Those who make noise, get promoted]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2144</wp:post_id>
		<wp:post_date>2014-05-30 01:38:58</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>make-noise-pro-active-developer</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>FAQ from Junior Developers - Is University degree really that important for future career in IT</title>
		<link>http://www.mfranc.com/?p=2611</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=2611</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Q: Is University degree really that important for future career in IT. Wouldn't it be better to start working as soon as possible and even sacrifice studying for more work related experience. I am a student now and I do feel now that studying is limiting my potential and growth.</h3>
&nbsp;

Time for laying the foundation for later learning.
Studying is a great catalyst for the future growth.
It's a time to build your network.

A: University time is a beautiful time. Its a moment when you have the opportunity to learn many different things, try different technologies and gain a lot of theoretical knowdledge. It is really important to try and experiment with everything as much as possible. I am not talking here about languages or frameworks but also different areas of computer science. I was doing ASM programming, C Programming, OOP programming, database programming, Image recognition algorithms implementations, bird flocks simulation etc plus i spent some time soldering and programming micro controllers. When I joined the work market it also felt like a knowledge that is not needed at all. My first job I was developing web parts for Salesforce. It was really hard for me to find a correlation beetwen things that I learned at Unit and things that I did in the workplace. Time has passed and now i think completely differnet. Stuyding is important as it lets you build a base for future growth. You cant build a house without laying fundaments first. You have to start fromt the bottom. By learning and trying many different concepts you are training your brain to learn faster and you are creating connection in your brain that will make enchance your learning capabilities. Learning is something that you need to train. Also learning about new concepts is a lot easier if you already know many difrferent concepts. Thats why I encourage everyone to try as much as possibgle on UNI. Dont focus on one platform and dont focus on gaining marketable skills. The time will come for that later. Try to reach out your professors and discuss some technologies, frameworks concepts that you would want to try out. All of this will start reapying after 4-5 years in the market when you will realize that developer job is not to create a code but find solutions and new ways to generate value for your users or your client users. In a summary, focus ons studyin :) Sure you can do some work and work for some companies, just try to not stress out about it and dont let it become the main focus of your Uni time.

&nbsp;

&nbsp;

- Psychological aspect as it meaks your stronger and you tend to belevei more in yourself with deegre and a form of accomplishements

- study is a great time to grow up and try to find a way in your life

- when it comes to companies i have heard that some of them do require deegres + there is a barrier of HR departments]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2611</wp:post_id>
		<wp:post_date>2015-05-11 21:40:57</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>faq-from-junior-developers-software-dev-career</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>I want to be programmer where to start ?</title>
		<link>http://www.mfranc.com/career/i-want-to-be-programmer-where-to-start/</link>
		<pubDate>Mon, 01 Jun 2015 08:00:47 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=2707</guid>
		<description></description>
		<content:encoded><![CDATA[I have received an email from a 15th year old student from US asking the question on where to start the coding / programming adventure. I want to share with you questions and my answers.

<em><strong>Q: "I am currently 15 years old and a freshman at University City High School. I have an interest in becoming a software developer. I was curious to know if I should wait until I am older to start learning different programming languages. I am good with a computer, and have a B in geometry right now so I would say I have different strengths and weaknesses in math. Just to add, school is stressful for me so there are nights where I wouldn't have time to practice coding and I play travel hockey from August to February, and that can make me stay up late at night. If you have any suggestions on software developing that can be user friendly for a high schooler please tell me! And let me know if 15 sounds right to start, or if I should wait."</strong></em>

A: It is awesome that in age of 15th you are considering career in tech. When I was your age, I was only interested in playing football and video games :). I had however started playing around with a Pascal language ( something really old ) and this is how it started. It was my father that gave me this first spark.

You don't have to wait to start learning languages, you can do it now, but don't stress over it, think about it more as a fun activity, not as work. You still have a lot of time to learn and in your teenage years you need to have fun. I would suggest you to start your adventure with JavaScript. It is a fairly simple yet powerful language that you can quickly do really fun things. The most important thing in learning at this stage is to quickly see some useful results. That's how you will build your own internal motivation to learn more. This is very important for programmers.

When learning programming you have to remember that at start it might be hard plus you will not see the results immediately, but after some investment awesome things will come. Software dev is one of those rare career paths that you can have fun in your work place. I love comming to my work every day plus I am getting paid a decent amount of money. It is really great.
Don't worry about time, you are still 15th, treat coding practices as something you can do but it shouldn't be a priority for you now. I started programming for real when I was 22, I know people that started this path in their 30's. So it is not like you have to start now and work hard when you are 15th to have an awesome career. There is still time.

When it comes to learning resources.
You could start with:
<a href="https://codecombat.com/ ">https://codecombat.com/</a> - this one will teach you the programming basics + it is fun :)
<a href="http://www.jsdares.com/">http://www.jsdares.com/</a> - quite nice course also with games
<a href="http://www.codecademy.com/en/tracks/javascript">http://www.codecademy.com/en/tracks/javascript</a> - examples not related with games

<strong><em>Q: "I saw a video about a software developer saying how in his opinion, the good coders are the ones that love doing it and want to make really good code."</em></strong>

A: Yes it is cool to be a great coder / programmer but the reality is that most of the positions require average programmers and it is fine to be average. Sure being a great coder / developer gives you huge advantage but don't stress over it now. With time you will know if you are good at it or not, then you can decide to try something else.

<em style="line-height: 1.5;"><strong>Q: "According to the U.S. Bureau of Labor Statistics, software developers who work on systems software will have an employment growth of 20% from 2012-2022. For developers working on applications will have a 23% growth during the same time period.</strong></em>

A: Yes the demand for developers is huge. It is a huge gap and it looks like it will be like that for the foreseeable future. This demand is driving the salary up, plus you are treated nicely by employees. It is really a nice market. This profession is also safe from all the robotics advancement that might replace a lot of other crafts. There is a risk that advancements in AI might make this profession obsolete  in the future but then all creative work will become obsolete.

<em><strong>Q: "Are there any books you can recommend that can help me with coding or just about software developing in general?"</strong></em>

A: There are two book that I will recommend for starter. <a href="http://shop.oreilly.com/product/9780596802387.do?CMP=ILC-hf1st">Head First Programming</a> - yes this book looks silly but it is serious. It has a nice approach to learning, suitable for everyone and then you can also try<a href=" http://www.amazon.com/Head-First-JavaScript-Programming-Freeman/dp/144934013X"> Head First JavaScript Programming</a>

<em><strong>Q: "From your experience working as a software developer, how much of your day is just coding and the other part of your day attending meetings and such?"</strong></em>

A: When it comes to how my work day looks like. It depends. You have to know that software developers are doing many different things, yes when you are junior developer you spend most of the time coding. That's how everyone started. With time and experience this changes and you are getting more diverse tasks. Some of us are going into more technical roles, some are getting into management, some are leaving the field to pursue completely different career. When you are Junior you are doing simple tasks and you are dependent on your colleagues. In Mid Role you are not dependent on your colleagues and you are also mostly coding. In Senior roles you have to support your colleagues by mentoring them, helping them plus you are also responsible for various decisions and you take a lot of responsibility for the product. Then you can go to Leading roles which require more soft skills.

When it comes to my day, I spend 70% of time doing technical things and 30% of time doing other things like - task management, helping team, helping other teams, doing presentations, attending meetings etc. Btw, meetings are not bad if those are handled nicely.

<em><strong>Q: "Do you have to be a very creative person?"</strong></em>

A: Yes you have to be fairly creative in this field but creativity is a skill that you can train and acquire.

<em><strong>Q: "You said in your blog that teamwork is key. I play hockey so the only way you can get the job done is by teamwork, no solo work will get your team to the top. I am very good with working with others because of this. So could it happen that the co workers that developers work with can try to do solo work, and not much teamwork? If this were to happen, should a person in a higher position be notified?"</strong></em>

<a href="http://www.mfranc.com/career/software-developer-career-hard-truths/">http://www.mfranc.com/career/software-developer-career-hard-truths/</a>

A: As for the teamwork. Team Sports are a great way to learn on how to act as a team. Keep on it. When I was your age I was playing football and basketball. There are a lot of programmers that do like solo work but this is limiting them. Software development is not a solo work you need a team and good teams can do much more. You will of course meet solo players that do like to work alone, sure you might go to superiors but your duty as a colleague and good team player is trying to involve those solo players to play with the team :) It is possible with help of your team leader, he should be notified that there are some problems, but politely without aggressiveness.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2707</wp:post_id>
		<wp:post_date>2015-06-01 09:00:47</wp:post_date>
		<wp:post_date_gmt>2015-06-01 08:00:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>i-want-to-be-programmer-where-to-start</wp:post_name>
		<wp:status>future</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="career"><![CDATA[Career]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3807919980]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Seam Carving (3)</title>
		<link>http://www.mfranc.com/uncategorized/seam-carving-3/</link>
		<pubDate>Sat, 06 Feb 2010 22:52:54 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=230</guid>
		<description></description>
		<content:encoded><![CDATA[Zupdatowałem źródło projekciku Seam Carving.

Troszeczkę przesadziłem z designem aplikacji. No ale od czegoś trzeba zacząć. Już wiem z czym to się je.

Aplikacja Rozdzielona jest na trzy moduły.

<strong>-UI w Formsach
-Silnik Algorytmu
-Silnik Graficzny</strong>

<strong>Silnik Graficzny:</strong>

<strong> </strong>
IEnergyCalculator: - interfejs klasy liczącej energię
EnergyCalGradient - liczenie gradientu
IImageProcessor - interfejs klasy przetwarzającej obraz
GdiImageProcess - przetwarzanie przy pomocy GDI+ i LockBitów
IPixelManipulator - interfejs klasy modyfikującej pixele
PixelColor  -kolorowanie pixeli
PixelRemove - usuwanie pixeli

<strong>Silnik Algorytmu</strong>

<strong> </strong>
ISeamManipulator : - interfejs klasy operującej na Seamach
DynamicSeamManipulator - dynamiczne usuwanie seama
DynamicSeamManipulatorWithMark - to samo ale z zaznaczaniem seama
StaticSeamManipulator - statyczne seamy [nie obsługiwane]
StaticSeamManipulatorWithMark

<!--more-->

<a href="http://lammichalfranc.files.wordpress.com/2009/12/seamcarv.jpg"><img class="aligncenter size-full wp-image-312" title="SeamCarv" src="http://lammichalfranc.files.wordpress.com/2009/12/seamcarv.jpg" alt="" width="383" height="339" /></a>

<strong>Psuedo kod aplikacji:</strong>

<strong> </strong>
for 1 to n do
{
1. Wczytanie Obrazka
2. Wybranie Parametrów przetwarzania bitmapy
3. Wywołanie algorytmu SeamCarving
4. Wywołanie metody ManipulateSeam ISeamManipulatora
5. Wyliczenie Energi Obrazka wywołanie metody Energy silnika graficznego ktora jako jeden parametr przyjmuje interfejs  IEnergyCalculator
6. Wyznaczenie Seama
7. Wywołanie silnika graficznego i metody przetwarzającej obrazek na podstawie seama.
}
<div id="_mcePaste">Zastosowanie interfejsów pozwoliło mi stworzyć mniej powiązane klasy. Teraz np jak chcę policzyć Energię inną funkcją wystarczy , że stworzę klasę i odpowiednio zaimplementuje interfejs.W paru miejscach oczywiście przesadziłem m.in łamiąc regułę  <a href="http://en.wikipedia.org/wiki/You_ain't_gonna_need_it"> YAGNI ( You Aren't Gonna Need It)</a></div>
<strong>Testy</strong>

<a href="http://lammichalfranc.files.wordpress.com/2010/02/skytower.jpg"><img class="aligncenter size-full wp-image-323" title="skytower" src="http://lammichalfranc.files.wordpress.com/2010/02/skytower.jpg" alt="" width="450" height="544" /></a>

<strong>Energia</strong>

<a href="http://lammichalfranc.files.wordpress.com/2010/02/energia.jpg"><img class="aligncenter size-full wp-image-324" title="energia" src="http://lammichalfranc.files.wordpress.com/2010/02/energia.jpg" alt="" width="450" height="566" /></a>

<strong>Obrazek Po Skalowaniu</strong>
<a href="http://lammichalfranc.files.wordpress.com/2010/02/lobrazek.jpg"><img class="aligncenter size-full wp-image-366" title="lobrazek" src="http://lammichalfranc.files.wordpress.com/2010/02/lobrazek.jpg" alt="" width="238" height="408" /></a>

Na razie projekcik jest na wstrzymaniu. Jak ktoś ma jakieś uwagi , pytania to proszę pisać.
<a href="http://www.datafilehost.com/download-71284d0b.html">Projekt "SeamCarving"</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>230</wp:post_id>
		<wp:post_date>2010-02-07 00:52:54</wp:post_date>
		<wp:post_date_gmt>2010-02-06 22:52:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>seam-carving-3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="post_tag" nicename="seam-carving"><![CDATA[seam carving]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[347991666]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[Piotrek]]></wp:comment_author>
			<wp:comment_author_email>przykry@kaczan.pl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>195.206.115.164</wp:comment_author_IP>
			<wp:comment_date>2010-02-09 19:40:47</wp:comment_date>
			<wp:comment_date_gmt>2010-02-09 19:40:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[czy aby troszke na tym obrazku lewa czesc nie zostala na chama ucieta :)?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626845]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[LaM]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>79.190.248.82</wp:comment_author_IP>
			<wp:comment_date>2010-02-10 12:00:08</wp:comment_date>
			<wp:comment_date_gmt>2010-02-10 12:00:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ano rzeczywiście takie można odnieść wrażenie :D Przyjadę do Wrocławia to pozmieniam przykłady ;] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>16</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626845]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626847]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Edytowalny ListBox</title>
		<link>http://www.mfranc.com/uncategorized/edytowalny-listbox/</link>
		<pubDate>Sat, 20 Feb 2010 17:07:29 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=331</guid>
		<description></description>
		<content:encoded><![CDATA[Dużo czasu spędzam ostatnio przy mini projekcicku [więcej info wkrótce]. Potrzebowałem kontrolki listboxa ale z edytowalnymi polami.
Jako że w .necie taka kontrolka nie jest dostępna standardowo to postanowiłem "wyciosać" własną. .Net daje nam spore pole do popisu jeżeli chodzi o tworzenie własnych "customowych" kontrolek.

By tego dokonać będziemy potrzebować dwóch nowych kontrolek.
<ul>
	<li><span style="color: #ffff00;">TextBoxa  który będzie komunikował się z danymi ListBoxa</span></li>
	<li><span style="color: #ffff00;"> ListBoxa wykorzystującego tego TextBoxa</span></li>
</ul>
<!--more-->
<h2 style="text-align: left;"><span style="color: #ffff00;">Opis Działania.</span></h2>
ListBox normalnie wyświetli Itemy. W momencie wybrania któregoś pola w miejscu Itema wygeneruje odpowiednią kontrolkę TextBoxa. Po wprowadzeniu textu do TextBoxa będzie on znikał i tracił "focus" przesyłając zmiany do ListBoxa , [ skupienie :D jak to dziwnie brzmi ostatnio zauważyłem że niektóre wydawnictwa tłumaczą "singleton" jako "samotnik" ].

<a href="http://lammichalfranc.files.wordpress.com/2010/02/edytowalny-listbox-test.jpg"><img class="aligncenter size-full wp-image-332" title="Edytowalny ListBox Test" src="http://lammichalfranc.files.wordpress.com/2010/02/edytowalny-listbox-test.jpg" alt="" width="450" height="158" /></a>
<h2><span style="color: #ffff00;">TextBox</span></h2>
Zaczniemy od TextBoxa bo zawiera on mniej modyfikacji.
<pre class="lang:default decode:true ">class EdditableTextBox : TextBox
{
   private int _index = -1;

   public int Index
   {
    set { _index = value; }
   }
...</pre>
&nbsp;

Dziedziczymy po standardowum TextBoxie i definiujemy pole Index , które będzie zawierać numer naszego obiektu , itemu , w listBoxie.
<pre class="lang:default decode:true ">protected override void OnLeave(EventArgs e)
{
   ((ListBox)this.Parent).Items[_index] = this.Text;
   base.OnLeave(e);
}</pre>
&nbsp;

Przeciążamy metodę wywoływaną w momencie wychodzenia z textBoxa tak by wszelkie wprowadzone zmiany zmieniały także obiekt w naszym ListBoxie do tego jest nam potrzebny parametr <strong>Index</strong> , który określa do którego konkretnie elementu się odnosimy.Odwołanie do ListBoxa realizujemy poprzez propercje Parent.

Na wszelki wypadek wywołujemy bazową metodę.

Można oczywiście zrobić inny mechanizm. Np akceptowanie zmian w momencie wciśnięcia odpowiegniego klawisza.
<pre class="lang:default decode:true ">protected override void OnKeyPress(KeyPressEventArgs e)
{
   if (e.KeyChar == (char)Keys.Enter)
   {
      ((ListBox)this.Parent).Items[_index] = this.Text;
   }
   base.OnKeyPress(e);
}</pre>
&nbsp;

W tym przypadku <strong>Enter</strong>
<h2><span style="color: #ffff00;">ListBox</span></h2>
Przejdzmy teraz do ListBoxa. Tutaj już będzie troszeczkę więcej zmian.
<pre class="lang:default decode:true ">class EdditableListBox : ListBox
{
      private static int MarginBeetwenItems = 5;
      private EdditableTextBox tbox;</pre>
&nbsp;

Dziedziczymy po ListBoxie tworzymy propercje oznaczającą odstęp pomiędzy wyświetlanymi itemamy i tworzymy lokalna kopię naszego zmodyfikowanego TextBoxa
<pre class="lang:default decode:true ">public EdditableListBox()
{
   tbox = new EdditableTextBox();
   tbox.Hide();
   tbox.Parent = this;
   Controls.Add(tbox);
}</pre>
&nbsp;

Tworzymy Text Boxa ustawiamy jego "rodzica" . Propercja <strong>Parent</strong> będzie nam służyła do komunikacji pomiędzy TextBoxem i ListBoxem.
<pre class="lang:default decode:true ">protected override void OnDrawItem(DrawItemEventArgs e)
{
   if (e.Index &gt; -1)
   {
        string s = Items[e.Index].ToString();

        Rectangle rect = new Rectangle(
        e.Bounds.X, e.Bounds.Y + (e.Index * MarginBeetwenItems),
        e.Bounds.Width, e.Bounds.Height);

        e.Graphics.DrawString(s, Font, new SolidBrush(SystemColors.WindowText), rect);
    }
}</pre>
&nbsp;

Musimy przeciążyć metodę odrysowywującą. Na wszelki wypadek badamy index Obiektu w ListBoxie , wyznaczamy prostokąt na podstawie jego parametrów , uwzględniając
<strong>MarginBeetwenItems</strong>. Rysujemy napis w odpowiednim miejscu.
<pre class="lang:default decode:true ">protected override void OnMouseUp(MouseEventArgs e)
{
     int index = IndexFromPoint(e.X, e.Y);

     if (index != ListBox.NoMatches &amp;&amp; index != 65535)
     {
          if (e.Button == MouseButtons.Left)
          {
               string s = Items[index].ToString();
               Rectangle rect = GetItemRectangle(index);

               tbox.Location = new Point(rect.X, rect.Y + (index * MarginBeetwenItems));
               tbox.Size = new Size(rect.Width, rect.Height);
               tbox.Text = s;
               tbox.Index = index;
               tbox.SelectAll();
               tbox.Show();
               tbox.Focus();
          }
     }

     base.OnMouseUp(e);
}</pre>
&nbsp;

Główna metoda tworząca [chociaż bardziej pasuje słowo modyfikująca] odpowiednio kontrolke TextBoxa , przy kliknięciu Lewym Przyciskiem myszki. Parametry TextBoxa modyfikujemy tak aby wyświetlał się w miejscu klikniętego obiektu na ListBoxie.
<pre class="lang:default decode:true ">protected override void OnSelectedIndexChanged(EventArgs e)
{
      tbox.Hide();
      base.OnSelectedIndexChanged(e);
}

protected override void OnLeave(EventArgs e)
{
      tbox.Hide();
      base.OnLeave(e);
}</pre>
&nbsp;

Odpowiednie funkcje powodujące zniknięcie naszego TextBoxa przy wyjściu z kontrolki i przy zmianie obiektu.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>331</wp:post_id>
		<wp:post_date>2010-02-20 19:07:29</wp:post_date>
		<wp:post_date_gmt>2010-02-20 17:07:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>edytowalny-listbox</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="visual-studio"><![CDATA[visual studio]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[359139983]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Tworzenie Pdf -a w .Necie </title>
		<link>http://www.mfranc.com/uncategorized/tworzenie-pdf-a-w-necie/</link>
		<pubDate>Tue, 23 Feb 2010 18:27:55 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=369</guid>
		<description></description>
		<content:encoded><![CDATA[Do dyspozycji mamy <a href="http://stackoverflow.com/questions/177/how-do-i-programmatically-create-a-pdf-in-my-net-application"> wiele bibliotek</a> tworzących , konwertujących do formatu PDF-a.Postanowiłem przetestować <a href="http://pdfsharp.com/">PDF-Sharpa</a>

Biblioteka jest łatwa i przyjemna. Po przeczytaniu <a href="http://pdfsharp.com/PDFsharp/index.php?option=com_content&amp;task=view&amp;id=15&amp;Itemid=35">kilku tutorialu i przglądnieciu sampli kodu</a> od razu można zacząć tworzyć nasze własne "Pedefki".

Potrzebowałem przekonwertować obrazek na PDF-ka.

Z PDF-Sharpikiem to żadna filozofia.
<pre class="lang:default decode:true ">PdfDocument document = new PdfDocument();

PdfPage page = document.AddPage();

XGraphics gfx = XGraphics.FromPdfPage(page);

Graphics g = Graphics.FromImage(pictureBoxHuman.Image);

g.DrawImage(pictureBoxHead.Image,new Point(0,0));

gfx.DrawImage(XImage.FromGdiPlusImage(pictureBoxHuman.Image),new Point(0,0));

string filename = "lobrazkowy.pdf";
document.Save(filename);</pre>
&nbsp;

Podstawą pdfka jest klasa <strong>PdfDocument</strong> która jest kolekcją obiektów np stron.Podobnie jest z <strong>PdfPagem</strong> , który jest kolekcją obiektów znajdujących się na stronie. Zresztą co ja tu będe opisywał. Nazwy metod i klas ładnie opisują proces i mechanizm działania biblioteki. Biblioteka jest fajnie przemyślana.

Polecam PDF-sharpika.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>369</wp:post_id>
		<wp:post_date>2010-02-23 18:27:55</wp:post_date>
		<wp:post_date_gmt>2010-02-23 18:27:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tworzenie-pdf-a-w-necie</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="post_tag" nicename="pdf"><![CDATA[pdf]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[484740707]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>BlogEngine .Net + Database</title>
		<link>http://www.mfranc.com/uncategorized/blog-engine-database/</link>
		<pubDate>Sat, 06 Mar 2010 14:11:26 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=379</guid>
		<description></description>
		<content:encoded><![CDATA[<div>

In the future i m planning to redeploy my blog on BlogEngine.Net and because in my <a href="http://www.grupaeka.pl">.Net Group</a> we are making a site also on this engine i m going to explain / write about this great platform. I think that this post could lead to a thematic series about mechanism in BlogEngine .Net

The engine has a nice architecture and you can learn a lot from it. There are lot of design patterns in practical use.
<h2>Let'sStart with BlogEngine DataSource.</h2>
Databases are one of the typical choices when we want to store all kinds of data. Comments , Posts , UserData etc.  nowadays almost everything is stored in Databases. Smae goes for BlogEngine .Net. There is also a different DataStore available , XML stored data , this aproach uses XML files. :et'sleave this interesting approach for a later post.

There are a lot of DataBase Engines available. We can use MSSql , MySql , OracleDb etc. They are based on official <a href="http://en.wikipedia.org/wiki/SQL">SQL specification</a>. Of course when there is a big competition on the market there are different ideas and implementations. Every Engine has its own unique featuers and solutions almost their own original language.
<blockquote><address>Detailed Comparision :  <a href="http://troels.arvin.dk/db/rdbms/">Comparison of different SQL implementations</a> <a href="http://www.postgresonline.com/journal/index.php?/archives/51-Cross-Compare-of-SQL-Server,-MySQL,-and-PostgreSQL.html">CROSS COMPARE OF SQL SERVER, MYSQL, AND POSTGRESQL</a></address></blockquote>
<address> </address><address> </address><address><a href="http://lammichalfranc.files.wordpress.com/2010/03/strona-ze-zrodlem-danych.jpg"><img class="aligncenter" title="Strona ze zrodlem danych" src="http://lammichalfranc.files.wordpress.com/2010/03/strona-ze-zrodlem-danych.jpg" alt="" width="450" height="206" /></a></address>Fortunately core of the SQL standard is solid. It is a basis upon which concrete technologies are built. We can create universal "code" based on the standard which will run on every technology. This is very important , we can create independet code.  Remember ......
<blockquote>"<em>Program to an 'interface</em>', <em>not an 'implementation</em>'." (Gang of Four 1995:18)</blockquote>
If you are programming to concrete implementation you are asking yourself for problems in the near future.

BlogEngine's database code is based on the Abstract Factory pattern. The Factory creates specific implementation by analyzing parameters in Connection String. The implementation contains concrete methods to specific DataBase implementation. Everything is nicely "wrapped" in Provider Factory. The Provider class defines the interface , common methods for every provider. This creates an abstraction layer between our program logic and Data Source.

<a href="http://en.wikipedia.org/wiki/Abstract_factory_pattern">Abstract Factory</a> is a design pattern , which conceals the "creation" logic of the object. Factory returns wrapped object based on the parameters. In our case we are getting generic object used to comunicate with every Database. We doesn't have to worry about its implementation. It is hidden and should be. We should be interested only on the interface which is the same for every class.

The Provider Factory is creating DBProviderFactory Object which is used to create  Connection and Command. Those are abstract objects. Their role is to delegate our task to objects which are inheriting from them.

The Concrete implementation of MSSQL logic , in the SQLCommand , inherits from DBCommand. By using the Down Cast it changes our "general" DBCommand class to more concrete and specific Object SQLCommand. By changing the Provider we are just changing the inherited class which is hidden behind the DBCommand
<pre>string connString=ConfigurationManager.ConnectionStrings[connStringName].ConnectionString; 

string providerName = ConfigurationManager.ConnectionStrings[connStringName].ProviderName; 

DbProviderFactory provider = DbProviderFactories.GetFactory(providerName); 
using (DbConnection conn = provider.CreateConnection())
   {
     conn.ConnectionString = connString; 
         using (DbCommand cmd = conn.CreateCommand()) 
           {   
             using (DbDataReader rdr = cmd.ExecuteReader()) 
              {        
               // Reading Logic        
              }        
             cmd.ExecuteNonQuery();         
             //itd     
           } 
    }</pre>
GetFactory methods decides on which provider to return back based on the parameter in Connection String. Provider creates his specific Connection and Command.

We are not using concrete classes like SQLConnection or SQLcommand everything is wrapped on more  general objects  DBConnection and DBCommand .

<a href="http://lammichalfranc.files.wordpress.com/2010/03/provider-factory.jpg"><img class="aligncenter" title="provider factory" src="http://lammichalfranc.files.wordpress.com/2010/03/provider-factory.jpg" alt="" width="450" height="385" /></a>

After brief presentation i would like to to show you how to connect to DB engine. I want to create DB logic for "pools".

Let's Do It !:

In this case. I have implemented only Database logic . BlogEngine also supports XML files as a data source . To attach DB logic for our objects i have created 2 partial classes. One of them extends DbBlogProvider  class ,which contains communication logic. The BlogProvider ,class is defines common interface for both the xml and db data storing concept . This is the another abstraction layer by which we can attach differetn db data storing procedures without significant change in the existing code .

<a href="http://lammichalfranc.files.wordpress.com/2010/03/roznci-dbproviderzy1.jpg"><img class="aligncenter" title="Roznci DbProviderzy" src="http://lammichalfranc.files.wordpress.com/2010/03/roznci-dbproviderzy1.jpg" alt="" width="450" height="326" /></a>

I just had to extend the partial class with my own methods.
<pre>namespace BlogEngine.Core.Providers 
{
 public partial class DbBlogProvider: BlogProvider 
    { 
      public override bool CheckPoll(Poll poll) 
        { 
          //concrete logic
         } 
      ... 
    } 
}</pre>
After this step we  just have to use the provider mechanism in BlogEngine.
<pre>_provider = BlogEngine.Core.Providers.BlogService.Provider;

_provider.CheckPoll(poll);</pre>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>379</wp:post_id>
		<wp:post_date>2010-03-06 16:11:26</wp:post_date>
		<wp:post_date_gmt>2010-03-06 14:11:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>blog-engine-database</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="post_tag" nicename="sql"><![CDATA[sql]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[350543944]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cursors in T-SQL</title>
		<link>http://www.mfranc.com/uncategorized/cursory-w-t-sql/</link>
		<pubDate>Sat, 13 Mar 2010 18:39:34 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=412</guid>
		<description></description>
		<content:encoded><![CDATA[Lately, I have started an internship in one of the IT Companies located in Wroclaw. I am really happy because this is a great opportunity to catch "real job" experience. Academic projects are a different kind of story.

I had a task to implement some MsSql queries and some operations on retrieved results. My first thought was to implement a simple for loop, iterate thought the result collection, do something on each result, „voila” .

Sure, Easier said than done.

Simple loop thought the results of SQL Query is great if we want to do something with a bunch of the data, but what should we do when with every iteration we want to do a specific operation on exactly one record. There is a problem because We would have to track the index of the current record. This would take a lot of effort to write test, etc. If you don't want to waste a lot of time try the "Cursors". They are ideal for this kind of a situation. They are similar to iterator in collections. You can fetch records, one by one and do some operations on them.
<h3>Cursors</h3>
Let's assume that we have some Table called „UserData” with typical Columns:
<ul>
	<li>ID</li>
	<li>Name</li>
	<li>Date</li>
	<li>isActive</li>
</ul>
The simplest sql query ....
<pre class="lang:default decode:true">SELECT * FROM UserData</pre>
will return :
<ul>
	<li>1 , Michał Franc , 2008-10-10 , 1</li>
	<li>2 , Stefan Romański , 2006-01-01 , 1</li>
	<li>3 , Maria Kozłowska , 2005-04-04 , 1</li>
</ul>
This is my test Data [Those are my secret personalities on the Net ].

Let's ask for the name of the users with Date value before year 2007. This is another query falling to the „simple” category.

SELECT Name FROM USerData Where DATEDIFF(day,'2007-01-01',Date) &lt; 0

Result:
<ul>
	<li>Stefan Romański</li>
	<li>Maria Kozłowska</li>
</ul>
Let's create a procedure to take an ID as a parameter and set the isActive column to 0. This procedure is used to set all users with Date before year 2007 to isActive status 0.

Lets Create Query for ID's .

SELECT ID FROM DaneUzytkownikow Where DATEDIFF(day,'2007-01-01',Data) &lt; 0

Result:
<ul>
	<li>2</li>
	<li>3</li>
</ul>
We have ID's of inactive users. We will use the cursors now to run a procedure for every ID.

Before going further let me describe you how to use Cursors:
<ol>
	<li><em>Create temporary variables for data fetched from result row</em></li>
	<li><em>Create Cursor and assing a Select Query to it</em></li>
	<li><em>Open Cursor , this commands fils Cursor with data returned from assigned Query</em></li>
	<li><em>Iteration on records with Fetch function , assign data to temporary  variables</em></li>
	<li><em>Run procedure with temporary variables as a parameters</em></li>
	<li><em>repeat step 4 and 5</em></li>
	<li><em>Close Cursor , disposing resources</em></li>
	<li><em>Cursor Deallocation</em></li>
</ol>
<div id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:8db1bc4e-6c66-4a6a-a698-763e4a1def35">
<pre class="lang:default decode:true  crayon-selected">DECLARE@UserIdint 
Declare@CursorCursor 
Set@Cursor=CursorFORSELECT ID FROM UserData Where DATEDIFF(day,'2007-01-01',Data) &lt;0
Open@Cursor  Fetch Next From @CursorInto @UserId  
While (@@FETCH_STATUS=0)
Begin
        EXEC SetInactive @Id=@UserID Fetch Next From @CursorInto @UserID
End
Close @Cursor
Deallocate @Cursor</pre>
</div>
<h3>1.Declaring Temporary Variable @UserId</h3>
DECLARE @UserId int - This variable on each iteration will
<h3>2.Create Cursor</h3>
Declare @Cursor Cursor

Set @Cursor = Cursor

For SELECT ID FROM UserData Where DATEDIFF(day,'2007-01-01',Data) &lt; 0

- We have to assign sql query.
<h3>3.Open Cursor.</h3>
Open @Cursor - Assigned Query is executed.
<h3>4.Iterating through records.</h3>
We have to store data from row in temporary variable

<em>Fetch Next From @Cursor Into @UserId</em>

While (@@FETCH_STATUS = 0) - The while loop will iterate till last row returned from the query.
<h3>5.Executing Procedure with temporary variable as a parameter</h3>
<em>Begin EXEC SetInactive @Id = @UserID</em>

After executing the procedure we need to fetch next data.

<em>Fetch Next From @Cursor Into @UserID End</em>
<h3>7 i 8.Closing and Deallocating Cursor</h3>
Close @Cursor Deallocate @Cursor

And that would be all its quite simple and easy. Cursors are very useful in lot of scenarios.

Cursors are also available in  <a href="http://dev.mysql.com/doc/refman/5.0/en/cursors.html">MySql</a> and <a href="http://www.oracle-base.com/articles/misc/UsingRefCursorsToReturnRecordsets.php">Oracle</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>412</wp:post_id>
		<wp:post_date>2010-03-13 20:39:34</wp:post_date>
		<wp:post_date_gmt>2010-03-13 18:39:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cursory-w-t-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="post_tag" nicename="sql"><![CDATA[sql]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[347991690]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[Ratio]]></wp:comment_author>
			<wp:comment_author_email>ventus12@interia.pl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>81.190.214.152</wp:comment_author_IP>
			<wp:comment_date>2010-06-07 17:34:50</wp:comment_date>
			<wp:comment_date_gmt>2010-06-07 17:34:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Dlaczego podrywasz młode dziewoje na serwisie zts moodle ? :p]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626864]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Migrating from Wordpress to Blog Engine .Net</title>
		<link>http://www.mfranc.com/uncategorized/migrating-from-wordpress-to-blog-engine-net/</link>
		<pubDate>Tue, 27 Jul 2010 14:02:52 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=431</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align:justify;">Thank God that there is such a tool like BlogML. Without it migrating from Wordpress to BlogEngine Net would be a difficult and  time-consuming task.</p>
<p style="text-align:justify;">If you are hosting your Wordpress Blog by yourself. There are tools to import database. <a href="http://www.aghausman.net/blog-engine/Migrate_from_WordPress_to_BlogEnginenet.html">AghaUsmanAhmed</a></p>
<p style="text-align:justify;">If your Blog was on a official Wordpress site , you don't have access to database , follow those steps.</p>

<h3>Simple Steps:</h3>
<strong>
</strong>

<strong>
<h4>1. Export your Wordpress to XML.</h4>
</strong>

Just go to Wordpress Tools and there is an option to export all to XML.

<strong> </strong>

<strong>
<h4>2. Convert XML to BlogML format</h4>
</strong>

There is a tool made by Goran. <a href="http://www.visualsoftware.net/Blog/post/2009/10/27/WordPress-eXtended-RSS-to-BlogMl-converter-WXR-2-BlogML.aspx"> .Net Lorem Ipsum</a>

Use it to Convert XML.

If there is a runtime error or somekind of an Exception. Download VS 2008 solution and  change
<pre class="brush:csharp;">          static DateTime ParseWPDate(string value)
        {
             return DateTime.ParseExact(value, "ddd, dd MMM yyyy HH:mm:ss zz00", ci.DateTimeFormat);
        }</pre>
<strong>To</strong>
<pre class="brush:csharp;">			static DateTime ParseWPDate(string value)
            try
            {
                return DateTime.ParseExact(value, "ddd, dd MMM yyyy HH:mm:ss zz00", ci.DateTimeFormat);
            }
            catch
            {
                return DateTime.Now;
            }</pre>
There can also be a problem with xml and some "atom" tag just delete it.

<strong> </strong>

<strong>
<h4>3. Import BlogML xml in BlogEngine .Net Settings.</h4>
</strong>
<p style="text-align:justify;">Open BlogEngine .Net site in IE <strong><em>(Its Important beacuase import toll wont work on other browsers)</em></strong>.  Run Import Toll select converted xml and Thats All :P</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>431</wp:post_id>
		<wp:post_date>2010-07-27 16:02:52</wp:post_date>
		<wp:post_date_gmt>2010-07-27 14:02:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>migrating-from-wordpress-to-blog-engine-net</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1280246572]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[351924679]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>61</wp:comment_id>
			<wp:comment_author><![CDATA[Ilias Ahmed]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.facebook.com/people/Ilias-Ahmed/100001929793453</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-11 13:17:00</wp:comment_date>
			<wp:comment_date_gmt>2012-02-11 13:17:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes, the import seems done and after reload the page, as I was writing in the other post, just displays the title: Import BlogML. I guess this is a tweaking issue after all, but haven’t found so far the needed trick. I’m still waiting for some news. Thanks for the reply.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[436066007]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>62</wp:comment_id>
			<wp:comment_author><![CDATA[Ilias Ahmed]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.facebook.com/people/Ilias-Ahmed/100001929793453</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-11 13:46:00</wp:comment_date>
			<wp:comment_date_gmt>2012-02-11 13:46:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hi this not me]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[436079301]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>73</wp:comment_id>
			<wp:comment_author><![CDATA[Anushka Singh]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.facebook.com/people/Anushka-Singh/100002447137590</wp:comment_author_url>
			<wp:comment_author_IP>111.118.247.86</wp:comment_author_IP>
			<wp:comment_date>2012-06-04 04:02:00</wp:comment_date>
			<wp:comment_date_gmt>2012-06-04 04:02:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice post thanks from <a href="http://www.capitalheight.com" rel="nofollow">Mcx Tips</a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[546680865]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80</wp:comment_id>
			<wp:comment_author><![CDATA[Commodity Tips]]></wp:comment_author>
			<wp:comment_author_email>commoditytipsch789@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>111.118.246.30</wp:comment_author_IP>
			<wp:comment_date>2012-12-21 12:05:00</wp:comment_date>
			<wp:comment_date_gmt>2012-12-21 12:05:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice info. I am searching about it from last some days, and found exactly at here.

<a href="http://www.capitalheight.com/commodity-tips.php" title="Commodity Tips" rel="nofollow">Commodity Tips </a>]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[744714786]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>128</wp:comment_id>
			<wp:comment_author><![CDATA[Guest]]></wp:comment_author>
			<wp:comment_author_email>anonymized-922048181@disqus.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>183.182.84.132</wp:comment_author_IP>
			<wp:comment_date>2013-06-07 10:35:00</wp:comment_date>
			<wp:comment_date_gmt>2013-06-07 09:35:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice information has been provide here for the blogging . Some nice 
information has been provided on blogspot that why people are moving 
from wordpress to blogspot . Thanks for the posting.Equity Tips]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[922048181]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>158</wp:comment_id>
			<wp:comment_author><![CDATA[peacelover]]></wp:comment_author>
			<wp:comment_author_email>supervigilant2@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>175.110.216.242</wp:comment_author_IP>
			<wp:comment_date>2013-12-26 15:51:00</wp:comment_date>
			<wp:comment_date_gmt>2013-12-26 14:51:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks .One of my site's member was curious about it.I will mention this post]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1177240996]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title></title>
		<link>http://www.mfranc.com/uncategorized/3-jquery/</link>
		<pubDate>Tue, 27 Jul 2010 14:03:33 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=433</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: justify;">What can i say ? I m lovin it !</p>
<p style="text-align: justify;">Today i ve used  <a href="http://jquery.com/">JQuery </a>for the first time  and wow i m really amazed. It's soo great. You can acomplish a lot of usefull things soo easily.</p>
<p style="text-align: justify;"></p>

<h3><strong><span style="font-family: mceinline;">Some Examples.</span></strong></h3>
You want to find a table and mark a row with an empty  column ? No worries.

It's Easy.
<pre class="lang:default decode:true">$("table[summary='Some Table'] tr:has(td:empty)").css("background-color", "FF8855")   });</pre>
In this example. JQuery first finds table with parameter summary with value Some Table. Then in look for tr's (table rows) with empty column. After selection it uses css function to apply new style , here its just simple background color.

JQuery works on <a href="http://www.w3.org/DOM/">DOM - Document Object Model</a>. so you have to be sure that document is ready. Every piece of code should be inside special fucntion
<pre class="lang:default decode:true">$(document).ready(function() {

// Code

});</pre>
Expression like $(....) is a selector. Selectors let's you query DOM for objects (div , p , a ,table etc.). <a href="http://api.jquery.com/category/selectors/">More info on Selectors ...</a>

When you have the object you can change , manipulate it in various ways ....
<pre class="lang:default decode:true  crayon-selected">$(....).hide() - hides object 

$(....)css(...) -  let's you add some css style to object.</pre>
There are tons of useful functions. Check <a href="http://api.jquery.com/">Documentation</a> , <a href="http://docs.jquery.com/Tutorials">Tutorials</a> and here is a nice <a href="http://woork.blogspot.com/2009/09/jquery-visual-cheat-sheet.html">"Cheat Sheet"</a>

It's so simple and easy. It's so much fun playing around with JQeury.

If you want to taste it a bit , run your favourite Browser open Developer Console and try it.

April's Fools day was yesterday but  here is a nice "trick" in javascript ^^.

Open your favourite website and paste this to your navigation bar.

javascript:document.body.contentEditable='false'; document.designMode='on'; void 0

Have Fun]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>433</wp:post_id>
		<wp:post_date>2010-07-27 16:03:33</wp:post_date>
		<wp:post_date_gmt>2010-07-27 14:03:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>3-jquery</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1280246614]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[347991700]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>23</wp:comment_id>
			<wp:comment_author><![CDATA[&lt;3 JQuery « LaMowy Blog &raquo; WB Tips]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://code.khmer855.com/2010/07/27/3-jquery-%c2%ab-lamowy-blog/</wp:comment_author_url>
			<wp:comment_author_IP>66.147.240.150</wp:comment_author_IP>
			<wp:comment_date>2010-07-27 19:25:56</wp:comment_date>
			<wp:comment_date_gmt>2010-07-27 19:25:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] See the article here: &lt;3 JQuery « LaMowy Blog [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Calling Python from .Net</title>
		<link>http://www.mfranc.com/uncategorized/calling-python-from-net/</link>
		<pubDate>Tue, 27 Jul 2010 16:04:19 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=435</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align:justify;">In one of the projects i want to use scripting language featuers to easily change the behaviour of my application on the runtime. I choosed Python and its .Net implementation IronPython beacuase it is a solid and popular language.</p>
<strong>Before we can start we need :</strong>

- <a href="http://ironpython.net/">IronPython Site</a>.

There is also a nice Visual Studio 2010 integration tool which adds new project templates and interactive command prompt to Visual Studio <span style="white-space:pre;"> </span>IDE.

<strong>In our code we have to add assembly references :</strong>

- IronPython

- IronPython.Modules

- Microsoft.Dynamic

- Microsoft.Scripting

- Microsoft.Scripting.Debbuging

You can find these files in the IronPython installation folder.

<strong>Create simple testing script with just one function declaration</strong>
<pre>def Simple():

	print "Hello from Python Interpreter"

test.py - filename</pre>
This script will print a "marvellous" Hello World style text :D

<strong>In .Net code we have to:</strong>

1. Initialize Python Runtime

2. Load File with the script to dynamic object

3. Use dynamic [this keyword is a new addition to the .Net 4.0] object as class , referencing method in script file.
<pre class="brush: c-sharp;">var ipy = Python.CreateRuntime();

dynamic test = ipy.UseFile("Test.py");

test.Sample();</pre>
<p style="text-align:justify;">This code will execute function Simple which is defined in the python script file.Test is a dynamic object , we dont know on the compile time what kind of object it is. The dynamic object will be defined on the runtime. Dynamic keyword is a new addition in the .Net 4.0 Framework. It is simmilar to the var keyword but , it has a different behaviour. Var is defined on the compile time [while the dynamic on the runtime] . Compilator while creating byte code  gueses object from the application cntext.DLR [Dynamic Language Runtime] is a link beetwen CLR and dynamicly typed languages like Python (IronPython) or Ruby (IronRuby). It is build on top of the CLR.</p>
<strong>Where could we use a scripting language integration ?</strong>
<p style="text-align:justify;">The game called "Civilization 4" is a great example of a architecture with core engine created in c++ and almost everything else , from the ai logic , scenarios , map generatior to the ui mechanics is created based on the python code. This architecture creates a great enviroment for end users. By using Python gamers created lot of great mods for the game.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>435</wp:post_id>
		<wp:post_date>2010-07-27 16:04:19</wp:post_date>
		<wp:post_date_gmt>2010-07-27 16:04:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>calling-python-from-net</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1280246659]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[349060578]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TimeIsMoney</title>
		<link>http://www.mfranc.com/uncategorized/timeismoney/</link>
		<pubDate>Tue, 27 Jul 2010 14:04:52 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/?p=437</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span style="font-family:helvetica, arial, freesans, clean, sans-serif;font-size:13px;line-height:18px;"> </span></p>
<p style="line-height:1.5em!important;margin:1em 0!important;padding:0;">There is one thing we are losing constantly in our lives , Time. it is our most precious assests and we can not do a thing to stop this process. If we can&rsquo;t stop it let's do something else , let's use is effectively. Time management should be our most important skill. This assumption gave me a motivation to learn about this process and to start this project.&nbsp;</p>
<p style="line-height:1.5em!important;margin:1em 0!important;padding:0;">Time is money is a tool used to integrate popular open source Applications.<br style="line-height:1.4em;margin:0;padding:0;" />-<span class="caps" style="line-height:1.4em;margin:0;padding:0;"><a href="http://www.codeproject.com/KB/applications/todolist2.aspx">TODO</a></span><a href="http://www.codeproject.com/KB/applications/todolist2.aspx">&nbsp;List</a><br style="line-height:1.4em;margin:0;padding:0;" />-<a href="http://desknotes.codeplex.com/">Desk Notes</a></p>
<p style="line-height:1.5em!important;margin:1em 0!important;padding:0;">In the future im planning to create my own tools but right now it is used as a &ldquo;bridge&rdquo;.It will use python extensively in order to develop new solutions and time management systems . Anyone with a little python knowledge will be able to script his own application-features ,ideally suited to his life style.</p>
<p style="line-height:1.5em!important;margin:1em 0!important;padding:0;">&nbsp;</p>
<p style="line-height:1.5em!important;margin:1em 0!important;padding:0;">On this early stage of developement it is only a xml parser.You can add new items to the xml files used by the<span class="caps" style="line-height:1.4em;margin:0;padding:0;">TODO</span>&nbsp;lists. Global key hook catches the event of the key press and displays simple dialog with one text box. After ading the task it appears on the waiting list.Then on specified time you are reminded that there are items still waiting to be sorted. By clicking on the item you can select another&nbsp;<span class="caps" style="line-height:1.4em;margin:0;padding:0;">TODO</span>&nbsp;List to cut &amp; paste the item.</p>
<p style="line-height:1.5em!important;margin:1em 0!important;padding:0;">&nbsp;</p>
<p style="line-height:1.5em!important;margin:1em 0!important;padding:0;">The idea is to collect all the tasks. It doesn&rsquo;t matter if they are simple or complex. Then at specified time you should review tasks and sort the beetwen different lists like a :</p>
<p style="line-height:1.5em!important;margin:1em 0!important;padding:0;">-What to do tommorow<br style="line-height:1.4em;margin:0;padding:0;" />-In the next week<br style="line-height:1.4em;margin:0;padding:0;" />-Project Ideas<br style="line-height:1.4em;margin:0;padding:0;" />-Quotes<br style="line-height:1.4em;margin:0;padding:0;" />-Jokes<br style="line-height:1.4em;margin:0;padding:0;" />etc.</p>
<p style="line-height:1.5em!important;margin:1em 0!important;padding:0;">&nbsp;</p>
<p style="line-height:1.5em!important;margin:1em 0!important;padding:0;">You can get the code here :</p>
<p>&nbsp;</p>
<p><a href="http://github.com/LaMik/TimeIsMoney">http://github.com/LaMik/TimeIsMoney</a></p>
<p>&nbsp;</p>
<p>I have started using GIT and it is really great. &nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>437</wp:post_id>
		<wp:post_date>2010-07-27 16:04:52</wp:post_date>
		<wp:post_date_gmt>2010-07-27 14:04:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>timeismoney</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="post_tag" nicename="time-management"><![CDATA[time management]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1280246692]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[568668778]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>I came back to Wordpress. Brief adventur...</title>
		<link>http://www.mfranc.com/uncategorized/i-came-back-to-wordpress-brief-adventur/</link>
		<pubDate>Tue, 27 Jul 2010 19:23:56 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/2010/07/27/i-came-back-to-wordpress-brief-adventur/</guid>
		<description></description>
		<content:encoded><![CDATA[I came back to Wordpress. Brief adventure with BlogEngine .Net is over.
<p style="text-align:justify;">It is not that BlogEngine is bad or something. It's really a great software but ... I just want to write blog posts and Wordpress gives everything you need in a nice easy to use package. BlogEngine is different. You have to do a lot of things by yourself. No no no i just want to write :D.</p>
<p style="text-align:justify;">I migrated to BlogEngine beacuase i wanted to learn more about developing sites. With BlogEngine i had a code in .Net so i was playing around [at least for a while]. Right now i have a job  with a lot of web developement and i don't have a time to "code here , code there" on blog , so there was no point to stick with the old Enigne.</p>
<p style="text-align:justify;">Of course there was also a great problem with spam bots attacking my site. There are great anti-spam tools for BlogEngine [Akismet filter is already in 1.6.0 version package] but well i had a problem with configuration :D</p>
<p style="text-align:justify;">So i m back here. I'm planning to stick with the Wordpress right now. Maybe in the future i will try something different , something new ... who knows.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>453</wp:post_id>
		<wp:post_date>2010-07-27 21:23:56</wp:post_date>
		<wp:post_date_gmt>2010-07-27 19:23:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>i-came-back-to-wordpress-brief-adventur</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1280265836]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[418628934]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Remote deployment - Sharepoint</title>
		<link>http://www.mfranc.com/uncategorized/remote-deployment-sharepoint/</link>
		<pubDate>Wed, 28 Jul 2010 17:10:26 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/2010/07/28/remote-deployment-sharepoint/</guid>
		<description></description>
		<content:encoded><![CDATA[In software development job we are doing lots of repetitive tasks. Like recycling iis , copying files , connecting to remote server etc etc. On Sharepoint there are lots of „boring” things to do. One of those "things " is deploying dll to a remote server. I hate this . You have to log in to a server,  copy the file , open the gac and manually drag n drop it to a folder. You can't just copy it by  „Total Commander”.
Ok i aggree it is not a problem with 1 - 2 deploys in an hour but if you are testing something it can get to 10 - 20 times per hour.

I was looking for a tool to do the deploy phase faster and remotely without alt-tabing and Yey  there is such a tool <a href="//remotegacutil.codeplex.com/”">RemoteGcUtil</a>. You can insert server address . Load the gac , explrore it and with just 2 simple clicks install new file to Gac.

<a href="http://lammichalfranc.files.wordpress.com/2010/07/rg1.png"><img class="aligncenter size-full wp-image-456" title="rg" src="http://lammichalfranc.files.wordpress.com/2010/07/rg1.png" alt="" width="632" height="396" /></a>

Its gets better , if you want to reload the assembly file you don’t have to browse again to find the file the path to recent file is and you just need to click open again .It's really great and it's working flawless . I was using it today multiple times and it worked great.

After deploying the assembly we have to recycle the application pool. At the beginning i was using mouse clicking through the menus of iis manager. Later i discovered the  command<em><span style="color:#ff0000;"> </span></em><strong><em><span style="color:#ff0000;">iisapp /a Poll Name  /r</span></em></strong>. I created a bat file and this process became faster , but If I am remotely deploying files to gac there have to be a possibility to run this command remotely. This would cut the time to do the “boring” stuff significantly.

There is a Power Shell script to do this.
http://gallery.technet.microsoft.com/ScriptCenter/en-us/56962f03-0243-4c83-8cdd-88c37898ccc4

It looks promising, I have to test it soon.

Power Shell definitely next thing to learn.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>457</wp:post_id>
		<wp:post_date>2010-07-28 19:10:26</wp:post_date>
		<wp:post_date_gmt>2010-07-28 17:10:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>remote-deployment-sharepoint</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="powershell"><![CDATA[PowerShell]]></category>
		<category domain="post_tag" nicename="sharepoint"><![CDATA[Sharepoint]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1280344226]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_505ff56de2071f5be8193913e5c237aa</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_b312fc284e3240c4777f1b7b2aea111f</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[350011452]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_b94f96b9915c3fa9d09c93d518823a35</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_737466a628df1e30dfaab9801b7f8e04</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Total Commander Tips n Tricks</title>
		<link>http://www.mfranc.com/uncategorized/total-commander-tips-n-tricks/</link>
		<pubDate>Thu, 29 Jul 2010 15:28:36 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/2010/07/29/total-commander-tips-n-tricks/</guid>
		<description></description>
		<content:encoded><![CDATA[Total Commander is a great file management tool. You can download shareware version which you can use for 1 month <a href="http://www.ghisler.com/">here</a>. 

<strong>1. Global Ignore List </strong>
In Sharepoint i am always versioning all the files. When copying files to sharepoint 12 Hive there is always a problem with .svn directories. They are making a nice mess and I was wasting a lot of time deleting them. Total Commander has a nice feature which can with this. Ignore List. You can add files , directories  and they wont be copied. Unfortunately there is a minor problem , those files are also filtered from views ;[


<a href="http://lammichalfranc.files.wordpress.com/2010/07/ignore-list.png"><img src="http://lammichalfranc.files.wordpress.com/2010/07/ignore-list.png" alt="" title="ignore list" width="564" height="456" class="aligncenter size-full wp-image-466" /></a>


<strong>2. SlickRun + TotalCommander</strong>

I have made a post abotu  <a href="http://lammichalfranc.wordpress.com/2009/11/23/slickrun/"> SlickRun </a> [it's right now in polish]. This is a great program. You can define various macros and run multiple different commands , applications really fast. For example one of mine commands is the “Forums” which opens 10+ www pages in chrome. I have integrated the SlickRun with a Total Commander command line parameters and for one of the projects created a great shortcut to run TC with the bin folder on the left and debug folder on the right.

<a href="http://lammichalfranc.files.wordpress.com/2010/07/totalcommander.png"><img src="http://lammichalfranc.files.wordpress.com/2010/07/totalcommander.png" alt="" title="TotalCommander" width="583" height="327" class="aligncenter size-full wp-image-467" /></a>



There are more useful commands. More info in the TC help.

<strong>3. Num + ,- and  Num *<strong>

By clicking Num +  you can write a regular expression which will select all the files in the current directory , Num – deselects the files and Num * Inverts the selection. The plus option is really great especially when you are cleaning your Desktop :D

If you have more interesting and useful tips for TC. Please let us now in the comments.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>468</wp:post_id>
		<wp:post_date>2010-07-29 17:28:36</wp:post_date>
		<wp:post_date_gmt>2010-07-29 15:28:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>total-commander-tips-n-tricks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="slickrun"><![CDATA[slickrun]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1280424519]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[348062160]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>101</wp:comment_id>
			<wp:comment_author><![CDATA[ramu]]></wp:comment_author>
			<wp:comment_author_email>vdramu@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>217.165.74.108</wp:comment_author_IP>
			<wp:comment_date>2013-02-25 05:34:00</wp:comment_date>
			<wp:comment_date_gmt>2013-02-25 04:34:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent and very useful shortcut commands. Thanks a lot.
with regards
ramu]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[811308553]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Sharepoint - Exceptions</title>
		<link>http://www.mfranc.com/uncategorized/you-just-have-to-love-em-special-exceptions/</link>
		<pubDate>Thu, 29 Jul 2010 16:12:36 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/2010/07/29/you-just-have-to-love-em-special-exceptions/</guid>
		<description></description>
		<content:encoded><![CDATA[Today I was doing the “boring” stuff. Yeah , creating list definitions , field definitions and installing features it is … boooring. You have to “click click click”.

By the way a co-worker told me about a nice addin to Visual Studio <a href="http://blog.mikeobrien.net/2007/06/insertguid-visual-studio-2005-addin.html"> InsertGuid </a> it's quite useful.

&nbsp;

Ok so while developing I encountered an exception <strong>“cannot complete this action please try again”</strong> when <strong>SPField.Update()</strong> was called. So, I started to check recent modifications. Nothing. Checked the Iist. Nothing. Restarted the Iist. Nothing . Recreated whole site on the sharepoint. Nothing. Then while inspecting schema I realized that my ContentType Definition had a typo in its ID parameter.

It was
<strong>0x01CBC435A1D27A418DA9AB503224F75CDA</strong>
but should be
<strong>0x0100CBC435A1D27A418DA9AB503224F75CDA</strong>
4 hours wasted ...

Definitely the best one of those special Exceptions is <strong> “Unspecified Error” </strong> when calling Unmanaged classes. Very informative , elegant just cool. This one happened when I was calling Active Directory and performed a Check if a user exists which used the <strong>DirectorySearcher.FindAll()</strong> method .... couple hours wasted and solution ?? Application pool or user with permission to AD had too low security access.

Doh , You just have to love those “special” exceptions . I hope that this short post will be helpful to some poor soul trying to figure out "What the hell happened?" :D]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>471</wp:post_id>
		<wp:post_date>2010-07-29 18:12:36</wp:post_date>
		<wp:post_date_gmt>2010-07-29 16:12:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>you-just-have-to-love-em-special-exceptions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="exception"><![CDATA[exception]]></category>
		<category domain="post_tag" nicename="insertguid"><![CDATA[insertguid]]></category>
		<category domain="post_tag" nicename="sharepoint"><![CDATA[Sharepoint]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1280427160]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[393700698]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Reloading ListBox DataSource</title>
		<link>http://www.mfranc.com/uncategorized/reloading-listbox-datasource/</link>
		<pubDate>Thu, 29 Jul 2010 20:58:52 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/2010/07/29/its-time-to-make-%e2%80%a6-money/</guid>
		<description></description>
		<content:encoded><![CDATA[My Little project TimeIsMoney is participating in a contest by <a href="http://www.maciejaniserowicz.com/">Maciej Aniserowicz.</a>

At the moment it's really simple tool used to help me with collecting and sorting various tasks.

<a href="http://lammichalfranc.files.wordpress.com/2010/07/timeismoney.png"><img class="aligncenter size-full wp-image-480" title="TimeIsMoney" src="http://lammichalfranc.files.wordpress.com/2010/07/timeismoney.png" alt="" width="417" height="295" /></a>

I'm doing this just for fun. This contest will be a great motivation and good way to promote this blog :P

So what's interesting in the code right now ?

<strong>1. ListBox DataSource Reloading</strong>
<pre class="lang:default decode:true">public static class Extension
{
    public static void eReloadDataSource(this ListBox listbox)
    {
    string s = listbox.DisplayMember;
    Object obj = listbox.DataSource;
    listbox.DataSource = null;
    listbox.DataSource = obj;
    listbox.DisplayMember=s;
    }
}</pre>
This Extension method reloads the Data source of a ListBox. I know it looks stupid but it works :D.
Let's take a look in Reflector …. hmm
<pre class="lang:default decode:true ">public object DataSource
{
     [TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]
     get
     {
          return this.dataSource;
     }
     set
     {
          if (((value != null) &amp;&amp; !(value is IList)) &amp;&amp; !(value is IListSource))
     {
     throw new ArgumentException(SR.GetString("BadDataSourceForComplexBinding"));
     }
     if (this.dataSource != value)
     {
          try
          {
               this.SetDataConnection(value, this.displayMember, false);
          }
          catch
          {
               this.DisplayMember = "";
          }
          if (value == null)
          {
               this.DisplayMember = "";
          }
     }
}</pre>
&nbsp;

So by assigning null value i m calling the SetDataConnection(,,,) which reloads the data. Also you can easily see that we have to reasssign DisplayMember value beacuase it is set to an Empty String at the end.

<strong>2. GlobalKeyHook</strong>

To catch the key press events i am using slightly modified code from <a href="http://www.codeproject.com/KB/cs/CSLLKeyboardHook.aspx">link</a> . I made a little tweak to enable the special keys combinations , so you can catch the alt+ctrl+b sequention.

That's all for now ;] If you want to check the code it is on the <a href="http://github.com/LaMik/TimeIsMoney">GitHub.</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>481</wp:post_id>
		<wp:post_date>2010-07-29 22:58:52</wp:post_date>
		<wp:post_date_gmt>2010-07-29 20:58:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>reloading-listbox-datasource</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1280444336]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[979346892]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[its-time-to-make-%e2%80%a6-money]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Custom ListBox - using Attributes to create dynamic Controls</title>
		<link>http://www.mfranc.com/uncategorized/timeismoney-complexlistbox/</link>
		<pubDate>Sat, 31 Jul 2010 21:42:17 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://lammichalfranc.wordpress.com/2010/07/31/timeismoney-complexlistbox/</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: justify; padding-left: 30px;">This is the Control I created for my mini project <strong>TimeIsMoney</strong>. It is a simple ListBox with a <strong>"complex item</strong>" creation logic . <strong>NewItemBox </strong>which is used to create new Item is modifying itself based on the Object type. The Control is used to create “TaskBins” which are containers of Tasks. The main <strong>TaskBin </strong>is our “UnsortedBin”. Here we have items waiting to be sorted. Then we can add multiple Bins which are used to store the sorted Items</p>
<p style="text-align: justify;"></p>

<h2><span style="color: #000000;"><strong><span style="color: #ff6600;">What is it ?</span></strong></span></h2>
<span style="color: #000000;"><strong>
</strong></span>
<p style="padding-left: 30px;">The control contains 1 ListBox and 2 Buttons.</p>
<p style="padding-left: 30px;"><a href="http://lammichalfranc.files.wordpress.com/2010/07/timeismoney1.png"><img class="aligncenter size-full wp-image-487" title="TimeIsMoney1" src="http://lammichalfranc.files.wordpress.com/2010/07/timeismoney1.png" alt="" width="294" height="266" /></a></p>
<p style="padding-left: 30px;">By clicking the add button a new <strong>NewItemBox</strong> Appears with dynamically created controls.</p>
<p style="padding-left: 30px;"><a href="http://lammichalfranc.files.wordpress.com/2010/07/timeismoney2.png"><img class="aligncenter size-full wp-image-488" title="TimeIsMoney2" src="http://lammichalfranc.files.wordpress.com/2010/07/timeismoney2.png" alt="" width="339" height="285" /></a></p>
<p style="padding-left: 30px;"><strong>NewItemBox</strong> It analyzes the properties of the class and creates new controls. By creating a new property in <strong>TaskBin</strong> the Control will create a new control. By this behavior I don't have to worry about changes.</p>

<h2><span style="color: #ff6600;">How Does it Work ?</span></h2>
<p style="padding-left: 30px;">Everything is based on properties decorated by the attributes. Let's take a look at <strong>TaskBin</strong> class</p>

<pre class="lang:default decode:true">[Serializable]
public class TaskBin : IEditable;TaskBin;
{
     [EditableDialogBox]
     public string Address { get; set; }
     [EditableTextBox]
     public string Name { get; set; }

     public string DisplayMember
     {
          get
          {
               return "Name";
          }
     }

#region IEditable&lt;TaskBin&gt; Members

     public TaskBin CreateFromString(string stringObject)
     {
          string[] datas = stringObject.Split(';');
          return new TaskBin() { Address = datas[1], Name = datas[3] };
     }

#endregion
}</pre>
&nbsp;

As you can see Address and Name property are decorated by <strong>EditableDialogBox </strong>and <strong>EditableTextBox </strong>Attribute [This is a simple class inheriting from the Attribute class]
<pre class="lang:default decode:true">public class EditableTextBox : Attribute
{
}

public class EditableDialogBox : Attribute
{
}</pre>
<p style="padding-left: 30px; text-align: justify;">Those are empty classes. You can add some logic and behaviors to them.I m just using them to mark the properties which will be represented as a TextBox in the NewItemBox. Every property with an [Editable.....] attribute will have a textbox and user will be able to edit it .The displayMember proeprty doesn't have an Attribute so it wont available for the user. It is used for DataBinding to set the displayed property name on the ListBox].</p>
<p style="padding-left: 30px;">To check if the property has a specific attribute you need to use the Reflection mechanism.</p>
&nbsp;
<pre class="lang:default decode:true">foreach (PropertyInfo prop in type.GetProperties())
{
     //Checking if property is decorated with EditableProperty Attribute
     if (prop.IsDefined(typeof(EditableTextBox), false))
     {
          newBox.CreateTextBox(prop.Name);
     }
     else if(prop.IsDefined(typeof(EditableDialogBox),false))
     {
          newBox.CreateFileDialogButton(prop.Name,string.Empty);
     }
}</pre>
<p style="padding-left: 30px; text-align: justify;">Using reflection we are iterating through the properties of the Object and checking if they are decorated by an Attribute. To perform this check i m using the IsDefined method. There are only two attributes right now. Each of them generates different logic in the NewItemBox.</p>

<pre class="lang:default decode:true">public void CreateTextBox(string name)
{
    this.Controls.Add(new Label() { Text = name, Location = new Point(0, y) });
    this.Controls.Add(new TextBox() { Location = new Point(0, y + 20) });
    y += 40;
}

public void CreateFileDialogButton(string name, string filter)
{
    this.Controls.Add(new Label() { Text = name, Location = new Point(0, y) });
    TextBox dialogText = new TextBox();
    dialogText.Click += new EventHandler(dialog_Click);
    dialogText.Location = Location = new Point(0, y + 20);
    this.Controls.Add(dialogText);
    y += 40;
}</pre>
<p style="padding-left: 30px; text-align: justify;">Property with EditableTextBox attribute generates a simple Label with its name and TextBox. EditableDialogBox generates label, textbox and creates an Event Handler handled by the click Event. „dialog_Click” event summons the FileDialogBox which is used to set The TaskBin physical path.</p>
<p style="padding-left: 30px; text-align: justify;">We have a code to create a dynamic edit box but how to pass this data further to our main lists. To do this I created I mechanism which converts all the data from the controls to the string.</p>

<pre class="lang:default decode:true  crayon-selected">public string GenerateStringObject()
{
    string returnString = String.Empty;

    foreach (Control c in Controls)
    {
          returnString += String.Format(&amp;quot;{0};&amp;quot;, c.Text);
     }

     return returnString;
}</pre>
Class which is on the list, implements an IEditable Interface.

&nbsp;
<pre class="lang:default decode:true">#region IEditable&lt;TaskBin&gt; Members

public TaskBin CreateFromString(string stringObject)
{
    string[] datas = stringObject.Split(';');
    return new TaskBin() { Address = datas[1], Name = datas[3] };
}

#endregion</pre>
<h2><span style="color: #ff6600;">How can I use it ?</span></h2>
<p style="padding-left: 30px;"><span style="color: #ff6600;">
</span></p>
<p style="padding-left: 30px;">In MainForm initialize the control with DataSource and Object type. Control saves changes directly to the specified DataSource</p>

<pre class="lang:default decode:true">this.complexListBox.SetData(set.Lists,typeof(TaskBin));</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>489</wp:post_id>
		<wp:post_date>2010-07-31 23:42:17</wp:post_date>
		<wp:post_date_gmt>2010-07-31 21:42:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>timeismoney-complexlistbox</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1280619739]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[347991715]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>24</wp:comment_id>
			<wp:comment_author><![CDATA[Lauralee Mailliard]]></wp:comment_author>
			<wp:comment_author_email>Mcmikle7521@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://lfkeier374.com</wp:comment_author_url>
			<wp:comment_author_IP>174.139.4.10</wp:comment_author_IP>
			<wp:comment_date>2011-02-17 10:19:00</wp:comment_date>
			<wp:comment_date_gmt>2011-02-17 10:19:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I  respect  your work , thanks  for all the  interesting   blog posts.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626875]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Time Management tips for Software Developers</title>
		<link>http://www.mfranc.com/career/time-management-for-software-developers/</link>
		<pubDate>Wed, 04 Aug 2010 22:08:26 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2010/08/04/time-management-for-software-developers/</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://lammichalfranc.files.wordpress.com/2010/08/image.png"><img style="border-width: 0; margin: 0 30px 0 5px;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb.png" alt="image" width="262" height="186" align="left" border="0" /></a>

&nbsp;

&nbsp;

<p align="justify">I have an obsession about time management. I think that it is one of the most important skills we ought to have in the 21st century. Our life is speeding up exponentially, relatively because time flow is constant [ at least physics thinks so]. We have to do more in a shorter period of time. That's why it is really important for us to use the time efficiently.</p>

<h2>Why Time Management is Important</h2>
<p style="text-align: justify;">I am almost sure that you have a lot of things that you would like to do.  There are books you want to read,  films you want to watch,  friends you want to meet,  programs to write,  blogs and more. What is preventing you from doing this things ?  The Time. <strong>You even don't know how much time you are wasting</strong>, which could be spent on those activities. With a proper mind shift and time management skill, <strong>you can squeeze the day and get every wasted second to work with you not against you</strong>. Of course this doesn't apply only for you „life” this is also very important skill in your workplace. As Software developers we are always chasing the deadlines. Client is waiting, the manager is coming around  asking the one and only question „When?”, you could say like 3D Realms Studio <a href="http://duke.a-13.net/">“When its done”</a> but thats not the option. <strong>With great time management,  can optimize your work and do a lot more things in a shorter time</strong>. That's why it is a very important skill for managers.<strong> </strong>“But I m not a manager?” Yeah that's right  but developers should also learn this. Prioritizing tasks,  knowing always what to do next, making estimations about time needed to get it done. It really helps. It helps you get better and efficient.</p>
<h2>How to manage time</h2>
<p style="text-align: justify;">There are many books that you can read to learn. I can recommend <a href="http://www.amazon.com/Getting-Things-Done-Stress-Free-Productivity/dp/0142000280">„Getting things Done”</a> that’s a really awesome book about this topic. Simple, easy to follow and great to read. There is also the <a href="http://gettingresults.com/wiki/Main_Page">“Getting Results Agile Way”</a>. I found this site recently and the idea sounds uncomplicated and easy. Read these books and implement demonstrated concepts in your life, You will get a lot of time to "waste" but in a more organized manner.</p>
<h2>List of Tips</h2>
<p style="text-align: justify;">A number of simple things that you can do to enhance your life right away!</p>

<h3>1. Wasting time while waiting</h3>
<p style="text-align: justify;">You have to get to work, and that's a horrible time waste. You can do different things to use lost time wisely. When I m going to work, by public transportation, I  have my "Htc" with me, so I m always ready to write something useful. If you are moving by your own well there are audio books which you can  listen to while driving.</p>

<h3>2. Getting unconcentrated by the overwhelming information flow.</h3>
<p style="text-align: justify;">We are living in the information age. The multitude of things that want to get attention of our brain is overwhelming. We have problems with a focus. If you're  focused you're working faster and efficient. <strong>Software engineer needs at least five minutes to get back to work after a short break</strong>. So what you should do?  Turn everything that is making attention off. You want to focus on one precise assignment. If you have to program something turn off the browser with useless things and tell your friend on the communicator that you have a job to do You can do this stuff on your free time. That is rewarding in two ways. You will enjoy free time more because you don't have to think about work, and you will work faster.</p>
<h3>3. Multi Tasking</h3>
<p style="text-align: justify;">You are working on two,  three projects and then a boss walks in with another one?  Nowadays,  We are bombarded by the massive information flow. You may think that “Hey, I m making multiple things at once this have to be efficient” , Well my friend you are wrong. <strong>Multitasking is not efficient</strong>. You shouldn't do multiple different things at one time. We are most efficient when we are focused and concentrated on one task. We have to concentrate on one task, finish it and then move on to the another. Of course there are times that we have to multi-task but keep this at a minimum.</p>

<h3>4. Automating Tasks</h3>
<p style="text-align: justify;">In this job, we are making a lot repetitive tasks. Everyone who developed something in <strong>“Sharepoint”</strong> knows what I m talking about. You should try to automate these tasks. <strong>Find a tool</strong>. There are many open source programs, which can help you in your everyday job.. <a href="http://www.github.com">www.github.com</a> , <a href="http://www.codeplex.com">www.codeplex.com</a> , <a href="http://sourceforge.net/">http://sourceforge.net/</a> .<strong> Or write a new tool</strong>. There are many areas where you can improve your job. Some of the great commercially available software tools started this way,  just because someone wanted to do things faster,</p>
<p style="text-align: justify;"><strong>Check the great list of </strong><a href="http://www.hanselman.com/blog/ScottHanselmans2009UltimateDeveloperAndPowerUsersToolListForWindows.aspx"><strong>Tools by Scott Hanselman</strong></a><strong> and this site for more life changing tips </strong><a href="http://zenhabits.net/25-painless-ways-to-free-up-an-hour-a-day-for-your-goals/"><strong>zenhabits</strong></a><strong>.</strong></p>
<p style="text-align: justify;">Good Luck. And don’t give up time management will change your life.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>510</wp:post_id>
		<wp:post_date>2010-08-04 22:08:26</wp:post_date>
		<wp:post_date_gmt>2010-08-04 22:08:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>time-management-for-software-developers</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="career-2"><![CDATA[career]]></category>
		<category domain="category" nicename="career"><![CDATA[Career]]></category>
		<category domain="post_tag" nicename="time-management"><![CDATA[time management]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1280959706]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[347991726]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[76]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[time management]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>25</wp:comment_id>
			<wp:comment_author><![CDATA[trn]]></wp:comment_author>
			<wp:comment_author_email>troyanek@o2.pl</wp:comment_author_email>
			<wp:comment_author_url>http://trn.studentlive.pl</wp:comment_author_url>
			<wp:comment_author_IP>89.79.244.64</wp:comment_author_IP>
			<wp:comment_date>2010-08-05 11:11:55</wp:comment_date>
			<wp:comment_date_gmt>2010-08-05 11:11:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice post. but... does it mean that I cant chat with you by gg between 8:00 - 19:00 ? :D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626881]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>147</wp:comment_id>
			<wp:comment_author><![CDATA[Bodyaka]]></wp:comment_author>
			<wp:comment_author_email>zubrolet@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>188.230.110.21</wp:comment_author_IP>
			<wp:comment_date>2013-10-29 13:10:00</wp:comment_date>
			<wp:comment_date_gmt>2013-10-29 12:10:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice, but very short list of tips for Developers. And the first one tip is little bit excessive and doesn't concern developer's work.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1100671462]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>149</wp:comment_id>
			<wp:comment_author><![CDATA[Amisha Ekaant]]></wp:comment_author>
			<wp:comment_author_email>amisha.ekaant@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>14.141.84.194</wp:comment_author_IP>
			<wp:comment_date>2013-11-26 19:47:00</wp:comment_date>
			<wp:comment_date_gmt>2013-11-26 18:47:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Interesting post! There are a lot of software developers out there and the competition is high in the current job market. Developing essential skills helps tl achieve more in the developing field. Time management is one of the most essential skill should require for developers. A developer who has good time management skills can consistently deliver projects on time.

Effective time management requires the ability to multi-task and delegate. Multi-tasking allows the developer to complete multiple task at one time. To develop effective time management skills, I would suggest to use Replicon time recording software - http://www.replicon.com/olp/online-time-recording-software.aspx]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1139927635]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>152</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>213.199.218.2</wp:comment_author_IP>
			<wp:comment_date>2013-12-08 12:27:00</wp:comment_date>
			<wp:comment_date_gmt>2013-12-08 11:27:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad you like it and yes first advice is very general ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>147</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1100671462]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1154787096]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>242</wp:comment_id>
			<wp:comment_author><![CDATA[Celine Arave]]></wp:comment_author>
			<wp:comment_author_email>celinearave0987@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>95.130.15.251</wp:comment_author_IP>
			<wp:comment_date>2014-09-15 10:55:00</wp:comment_date>
			<wp:comment_date_gmt>2014-09-15 09:55:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<!--td {border: 1px solid #ccc;}br {mso-data-placement:same-cell;}-->Good tips for developers. Proofhub.com is another tool that developers can try to manage their team and work effectively. This tool is embedded with awesome features like time tracking, gantt chart, group chat and lots more. I'd recommend you to give it a spin.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1589634018]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>TimeIsMoney 0.2.1 and future development</title>
		<link>http://www.mfranc.com/uncategorized/timeismoney-0-2-1-and-future-development/</link>
		<pubDate>Sun, 08 Aug 2010 09:07:49 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2010/08/08/timeismoney-0-2-1-and-future-development/</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-size:xx-small;"><strong> </strong></span>

<span style="font-size:xx-small;"><strong>What’s New</strong></span>
<ul>
	<li><span style="font-size:small;"><strong>0.2.1</strong> </span>
<ul>
	<li><span style="font-size:small;">More advanced <strong>AddItemBox</strong> with option “more”.</span>
<ul>
	<li><span style="font-size:small;">three additional properties : </span>
<ul>
	<li><span style="font-size:small;">priority </span></li>
	<li><span style="font-size:small;">due date </span></li>
	<li><span style="font-size:small;">estimated time </span></li>
</ul>
</li>
</ul>
</li>
	<li><span style="font-size:small;">Changed the way settings panel is displayed </span></li>
	<li><span style="font-size:small;">Lots of stability fixes …. </span>
<ul>
	<li><span style="font-size:small;">fixed the problem with <strong>GlobalKeyHook </strong>and garbage collected element crash</span></li>
	<li><span style="font-size:small;">various problems with list</span></li>
</ul>
</li>
</ul>
</li>
</ul>
<a href="http://lammichalfranc.files.wordpress.com/2010/08/additemadv.jpg"><img class="aligncenter size-full wp-image-528" title="additemadv" src="http://lammichalfranc.files.wordpress.com/2010/08/additemadv.jpg" alt="" width="212" height="165" /></a>

This week i am starting <strong>unit testing</strong>. Small standalone project based on the <strong><a href="http://www.nunit.org/">NUnit</a> </strong>platform with various unit tests. Idea of unit test is really simple:
<ol>
	<li>
<div>Make assumption about how your code should behave.</div></li>
	<li>
<div>Write a test to check if you are right or wrong.</div></li>
</ol>
<span style="font-size:small;">I know that for some of you it looks like a waste of time but this process accelerates the development time and what’s also important it promotes good coding practices.</span>

<span style="font-size:small;">The next big Things which I want to start is Report Module this will be a  standalone application communicating with main software. It is responsible for various analyses of  the TODO lists. Right now I m planning to write UI inn WPF. In the beginning, I want to create simple engine.  Unit testing will be heavily used in this module. </span>

<span style="font-size:small;">Some major re-factorization will be necessary in the future. Isolation of the UI from the logic is really important, it's commonly used pattern.
</span>

<span style="font-size:small;">
</span>

<strong><span style="font-size:small;">Next Week</span></strong>
<ul>
	<li><span style="font-size:small;"><strong>0.2.2</strong> </span>
<ul>
	<li><span style="font-size:small;">Ability to set up notification lists </span></li>
	<li><span style="font-size:small;">Fix  priority display </span></li>
	<li><span style="font-size:small;">Display estimated time and priority on the unsorted tasks lists view </span></li>
	<li><span style="font-size:small;">Create <strong>NUnit</strong> testing project</span></li>
</ul>
</li>
</ul>
<span style="font-size:xx-small;"> </span>
<ul>
	<li><span style="font-size:small;"><strong>0.2.3</strong> </span>
<ul>
	<li><span style="font-size:small;"><span style="font-size:xx-small;">Ability </span>to set up <strong>next learning</strong> and <strong>next action </strong>lists with notifications options </span></li>
</ul>
</li>
</ul>
<span style="font-size:small;"> </span>
<ul>
	<li><span style="font-size:small;"><strong>0.2.4</strong> </span>
<ul>
	<li><span style="font-size:small;"><strong>Report</strong> Module Engine</span></li>
</ul>
</li>
</ul>
<span style="font-size:small;"> </span>

<span style="font-size:small;"> </span>

<span style="font-size:small;"> <span style="font-size:small;"> </span></span>

<strong><span style="font-size:small;">What’s Planned?</span></strong>
<ul>
	<li><span style="font-size:small;"><strong>0.3.0</strong> </span>
<ul>
	<li><span style="font-size:small;">Notification mechanism based on the “<strong>IronPython”</strong> </span></li>
</ul>
</li>
</ul>
<span style="font-size:small;">.</span><a href="http://lammichalfranc.files.wordpress.com/2010/08/image1.png"><span style="color:#555555;font-size:xx-small;"><img style="display:block;float:none;margin-left:auto;margin-right:auto;border-width:0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb1.png" border="0" alt="image" width="409" height="285" /></span></a>
<ul>
	<li><span style="font-size:small;"><strong>0.3.5</strong> </span>
<ul>
	<li><span style="font-size:small;">More advanced report module. , statistics , daily weekly reports .</span></li>
	<li><span style="font-size:small;">Progress and efficiency of time management</span></li>
</ul>
</li>
	<li><span style="font-size:small;"><strong>0.5.0</strong> </span>
<ul>
	<li><span style="font-size:small;">Task trees.</span></li>
	<li><span style="font-size:small;"><span style="font-size:xx-small;">Adding item to specific tree node</span></span></li>
</ul>
</li>
</ul>
<span style="font-size:xx-small;"> </span>
<ul>
	<li><span style="font-size:small;"><strong>0.6.0</strong> </span>
<ul>
	<li><span style="font-size:small;">Activity Tracker</span>
<ul>
	<li><span style="font-size:small;">Created from scratch or integrated with Activity Tracker Gadget</span></li>
</ul>
</li>
</ul>
</li>
	<li><span style="font-size:small;"><strong>0.7.0</strong> </span>
<ul>
	<li><span style="font-size:small;">Desk Notes</span></li>
</ul>
</li>
	<li><span style="font-size:small;"><strong>0.8.0</strong> </span>
<ul>
	<li><span style="font-size:small;">Calendar</span></li>
</ul>
</li>
</ul>
Far Far Away …… web application.

<strong>What i have learned this week !</strong>

The biggest enemy of the open source projects is … <strong>TIME.</strong>

Don’t love your code and be ready to throw away a good idea just because it is too complicated . Remember ….. <strong>KiSS – Keep It Simple Stupid</strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>524</wp:post_id>
		<wp:post_date>2010-08-08 09:07:49</wp:post_date>
		<wp:post_date_gmt>2010-08-08 09:07:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>timeismoney-0-2-1-and-future-development</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="nunit"><![CDATA[NUnit]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1281258470]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1305397346";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[347991731]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>26</wp:comment_id>
			<wp:comment_author><![CDATA[Michał Aniserowicz]]></wp:comment_author>
			<wp:comment_author_email>michalaniserowicz@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://michalaniserowicz.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP>78.88.55.136</wp:comment_author_IP>
			<wp:comment_date>2010-08-08 10:42:14</wp:comment_date>
			<wp:comment_date_gmt>2010-08-08 10:42:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA["Idea of unit test is really simple:
1. Make assumption about how your code should behave.
2. Write a test to check if YOU ARE right or wrong."

I'm afraid that's not the exact point of unit testing. This is not the tester what is the subject of the test - that's the code :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626883]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27</wp:comment_id>
			<wp:comment_author><![CDATA[LaM]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>193.239.59.101</wp:comment_author_IP>
			<wp:comment_date>2010-08-16 20:13:40</wp:comment_date>
			<wp:comment_date_gmt>2010-08-16 20:13:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yeah , you are right my mistake.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>26</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626883]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[240626885]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Visual Studio 2010 – 	 Productivity Power Tools </title>
		<link>http://www.mfranc.com/uncategorized/visual-studio-2010-power-commands/</link>
		<pubDate>Sun, 08 Aug 2010 16:25:42 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2010/08/08/visual-studio-2010-power-commands/</guid>
		<description></description>
		<content:encoded><![CDATA[I have recently found a great add-in <strong>Visual studio 2010 - Productivity Power Tools</strong>. It adds new options. It’s not that good like the commercial versions of <strong>CodeRush</strong> or <strong>R#.</strong> It’s for free and that’s a great thing.

Power Commands add many great additions :

One of those features is <strong>automatic sorting and removing of the using</strong> statements while saving. So simple but so great.

<a href="http://lammichalfranc.files.wordpress.com/2010/08/image2.png"><img style="display:block;float:none;margin-left:auto;margin-right:auto;border-width:0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb2.png" border="0" alt="image" width="244" height="103" /></a>

New <strong>solution navigator</strong> replaces the <strong>solution explorer</strong>. It is similar to the reflector  menu. One minor minus thought,  It works really slow;/

<a href="http://lammichalfranc.files.wordpress.com/2010/08/image3.png"><img style="display:block;float:none;margin-left:auto;margin-right:auto;border-width:0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb3.png" border="0" alt="image" width="248" height="211" /></a>

<span style="color:#3478e3;"> </span>

<strong>Solution navigator</strong> contains a simple filter. It can show only open,  unsaved or recently edited files.

<a href="http://lammichalfranc.files.wordpress.com/2010/08/image4.png"><img style="display:block;float:none;margin-left:auto;margin-right:auto;border-width:0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb4.png" border="0" alt="image" width="220" height="34" /></a>

This feature is simple but it really makes you smile. Little red dot indicating if the document isn’t saved. It’s so small but so great. It’s really better than “*” char.

<a href="http://lammichalfranc.files.wordpress.com/2010/08/image5.png"><img style="display:block;float:none;margin-left:auto;margin-right:auto;border-width:0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb5.png" border="0" alt="image" width="185" height="38" /></a>

More advanced object browser in <strong>intelisense</strong>. Inspect items on the fly with a search box.

<a href="http://lammichalfranc.files.wordpress.com/2010/08/image6.png"><img style="display:block;float:none;margin-left:auto;margin-right:auto;border-width:0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb6.png" border="0" alt="image" width="495" height="298" /></a>

While testing, I encountered only minor glitches. When exploring item with the new intelligence menu I had “Visual Studio 2010 is not responding”. In the future releases  they should improve the loading time.

You can turn off some functions if you will encounter a major performance drop. Performance was also an issue in <strong>R#.</strong> I remember when I had just 1GB of ram and with the <strong>R#</strong> project had a starting time around 2-3 minutes. It was really annoying.

I m still exploring all the features. Check the site <strong><a href="http://visualstudiogallery.msdn.microsoft.com/en-us/e5f41ad9-4edc-4912-bca3-91147db95b99">Visual Studio 2010 Productivity Power Tools</a></strong>

Wonder why this is not included in the vanilla <strong>VS</strong> ?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>540</wp:post_id>
		<wp:post_date>2010-08-08 16:25:42</wp:post_date>
		<wp:post_date_gmt>2010-08-08 16:25:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>visual-studio-2010-power-commands</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="visual-studio"><![CDATA[visual studio]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1281284743]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1307676877";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[352387985]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Remind Mechanism .Net – notifying objects from the thread</title>
		<link>http://www.mfranc.com/uncategorized/remind-mechanism-net-notifying-objects-from-thread/</link>
		<pubDate>Fri, 13 Aug 2010 23:14:11 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2010/08/13/remind-mechanism-net-notifying-objects-from-thread/</guid>
		<description></description>
		<content:encoded><![CDATA[In TimeIsMoney project, I am planning to add a lot of notifiers . I was looking for a mechanism but could find any solution, so I created one from the scratch.  Reminder should work on a thread not to interrupt the main application, I have created a simple  class which uses the thread to check if a condition is met on particular time.

<a href="http://lammichalfranc.files.wordpress.com/2010/08/image19.png"><img style="display:inline;border:0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb19.png" border="0" alt="image" width="566" height="361" /></a>

Run performs a check if a specified time is met or if the option RemindWholeDay which enables the reminder all the time. There is  simple pause between balloon tips. In the future I want to implement a simple pipeline mechanisms with queue.

What’s important here is _notifiedObjects List  this  collection contains an object which is notified by the reminder.

<a href="http://lammichalfranc.files.wordpress.com/2010/08/image20.png"><img style="display:inline;border:0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb20.png" border="0" alt="image" width="466" height="152" /></a>

Every class to be notified  implements INotified interface , which defines the IsNotified and Notify method.

<a href="http://lammichalfranc.files.wordpress.com/2010/08/image41.png"><img style="display:inline;border:0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image4_thumb.png" border="0" alt="image" width="268" height="115" /></a>

Let's look at examples.

In TimeIsMoney project main Form has a notify Icon, which is used to show the Balloon Tips in the tray. Those tips contain various informations like a number of items still waiting to be sorted out between the lists. Form1 implements the INotfied interface and defines the methods.

<a href="http://lammichalfranc.files.wordpress.com/2010/08/image21.png"><img style="display:inline;border-width:0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb21.png" border="0" alt="image" width="648" height="465" /></a>

As you can see IsNotified method is used to check the Count value of the items. If there are items in it return true. When the IsNotified is true the action is doing the Notify class, which shows a simple balloon tip in the tray..

This mechanism gives me the ability to create notified object just by implementing the  INotifiy interface.

Lets look at another example.

<a href="http://lammichalfranc.files.wordpress.com/2010/08/image22.png"><img style="display:inline;border:0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb22.png" border="0" alt="image" width="584" height="467" /></a>

Notifier class  will  be used to manage all the notifiers. It operates on the reference to the Form1.notify Icon.

This class is added to the collection of reminder class.

This simple process is for some flexibility.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>585</wp:post_id>
		<wp:post_date>2010-08-13 23:14:11</wp:post_date>
		<wp:post_date_gmt>2010-08-13 23:14:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>remind-mechanism-net-notifying-objects-from-thread</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1281741251]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[419696111]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TimeIsMoney 0.2.2 – Colored items in ComboBox</title>
		<link>http://www.mfranc.com/uncategorized/timeismoney-0-2-2-colored-items-in-combobox/</link>
		<pubDate>Sat, 14 Aug 2010 16:25:58 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2010/08/14/timeismoney-0-2-2-colored-items-in-combobox/</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-size: xx-small;"><strong>What’s New</strong></span>
<ul>
	<li>
<div><strong>0.2.2</strong></div>
<ul>
	<li>
<div>Task reminder</div></li>
	<li>
<div>Priority Graphic</div></li>
</ul>
</li>
</ul>
<strong>Task reminder </strong>

<a href="http://lammichalfranc.files.wordpress.com/2010/08/image23.png"><img style="display: inline; border-width: 0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb23.png" alt="image" width="244" height="62" border="0" /></a>

There is a new option in settings.

By selecting a task list with items to be reminded, the engine analyses the contents and notifies the user about items nearing the due date or with low estimated time.

<strong>Priority Graphic</strong>

<a href="http://lammichalfranc.files.wordpress.com/2010/08/image24.png"><img style="display: inline; margin-left: 0; margin-right: 0; border-width: 0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb24.png" alt="image" width="166" height="140" align="left" border="0" /></a>

Another addition in this version is a new Priority coloring. Application uses custom ListBox which overrides the drawing method to create items in different colors.

<a href="http://lammichalfranc.files.wordpress.com/2010/08/image25.png"><img style="display: inline; border-width: 0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb25.png" alt="image" width="41" height="162" border="0" /></a>

Same effect is applied on the priority  ComBox If you want to get this effect. Create custom ComboBox and override the OnDrawItem method.
<blockquote>
<div id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:2c61692c-0184-486d-bf6a-8ac28ffbd5dd" class="wlWriterEditableSmartContent" style="display: inline; float: none; margin: 0; padding: 0;">
<div>
<pre class="lang:default decode:true ">public class ColorAbleComboBox : ComboBox 
{ 
   protected override void OnDrawItem(DrawItemEventArgs e) 
   { 
       if (e.Index &gt;=0)
       { 
         Rectangle rect =new Rectangle(e.Bounds.X, e.Bounds.Y, e.Bounds.Width, e.Bounds.Height); 
         if (e.Index &lt;=3) 
         {
             Color col = Color.FromArgb(0,255-(e.Index*60),0);
             SolidBrush greenBrush =new SolidBrush(col);
             e.Graphics.FillRectangle(greenBrush, rect);
         }
         else if (e.Index &gt;3 &amp;&amp; e.Index &lt;= 7)
         {   
              Color col = Color.FromArgb(0, 0, 255- ((e.Index-4) *60));
              SolidBrush blueBrush =new SolidBrush(col);
              e.Graphics.FillRectangle(blueBrush, rect);
         }
         else if (e.Index &gt;7)
         {
             Color col = Color.FromArgb(255- ((e.Index -8) *60), 0,0 ); 
             SolidBrush redBrush =new SolidBrush(col); 27 e.Graphics.FillRectangle(redBrush, rect); 
         } 
         e.Graphics.DrawString(Items[e.Index].ToString(), Font, new SolidBrush(Color.White), new PointF(rect.X, rect.Y));
     }
   } 
}</pre>
&nbsp;

</div>
<!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com -->

</div></blockquote>
This code assumes that there are more than seven items in the box.

<strong>Important !! If you want items to draw on your overloaded method you need to change a property DrawMode from Normal to Either OwnerDrawVariable or OwnerDrawFixed.</strong>
<ul>
	<li>
<div><strong>0.2.3</strong></div>
<ul>
	<li>
<div>changes in reminder</div></li>
	<li>
<div>changes in notification logic</div></li>
	<li>
<div>added <strong>NUnit</strong> tests to <strong>XmlAnalyser</strong></div></li>
</ul>
</li>
</ul>
<strong>Notification logic</strong>

Reminder is described in my previous post <a href="http://lammichalfranc.wordpress.com/2010/08/13/remind-mechanism-net-notifying-objects-from-thread/">“Reminder Mechanism”</a> . For notifications, I am using an abstract Notifier which is extended by specific classes like DueDateNotifier .  Reminder adds Notifiers to his list, and then is querying them asking if the user should be notified about them.

<a href="http://lammichalfranc.files.wordpress.com/2010/08/image26.png"><img style="display: inline; border-width: 0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb26.png" alt="image" width="621" height="253" border="0" /></a>

<strong>Next Week</strong>
<ul>
	<li>
<div><strong>0.2.4</strong></div>
<ul>
	<li>
<div>Report engine</div></li>
	<li>
<div>UI in Wpf for reports engine</div></li>
</ul>
</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>595</wp:post_id>
		<wp:post_date>2010-08-14 16:25:58</wp:post_date>
		<wp:post_date_gmt>2010-08-14 16:25:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>timeismoney-0-2-2-colored-items-in-combobox</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1281803161]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[447328365]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SPPersistedObject as SPTimerJob parameters</title>
		<link>http://www.mfranc.com/programming/sptimerjob-parameters-using-the-sppersistedobject/</link>
		<pubDate>Sat, 14 Aug 2010 22:42:34 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2010/08/15/sptimerjob-parameters-using-the-sppersistedobject/</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>TL;DR; SPPersistedObject is a usefull class that can be used to store parameters for SPTimerJob in SPFarm.</h3>

<p align="justify">Timer Job is a very useful service available in SharePoint. You can set a function which will be executed on the specific time. This scenario is useful in many SharePoint applications. It's just like running SQL server job.</p>
<p align="justify">When working with the timer jobs, there is a little problem with parameters from the external source. Timer job doesn’t store passed parameters. In scenario, I have encountered in my job, there was a feature which was activating the <strong>TimerJob</strong>. On Feature parameters needed for the timer job were de-serialized from the xml file,  then they were passed to the timer job constructor. When executed timer job was returning the default values, not the values from the xml file.</p>
<p align="justify">I started looking for a solution, and found the <strong>SPPersistedObject</strong> class which gives us the ability to remember the parameters in <strong>SPFarm</strong>.</p>

<blockquote>
<p align="justify">The SPPersistedObject class provides a base class for all administration objects. It serializes all fields marked with the Persisted attribute to XML and writes the XML blob to the configuration database. The SPPersistedObject class contains code to serialize all its members that are base types, other persisted objects, and collections of persisted objects. Configuration data that is stored in persisted objects is automatically made available to every process on every server in the farm.</p>
</blockquote>
<p align="justify">Let's assume we have a scenario with a feature activating our timer jobs. We need to fill it with various parameters. To activate the timer job, we are using the feature receiver class, and feature activate method. First of all, we need to get our parameters to the feature receiver. I am using the serialized settings' class and an xml file. Parameters from the xml are then used to create the <strong>SPPersitedObject</strong>. Base class is doing all the work with de-serialization and serialization of data. I only had to call the proper function before job execution to get the parameters.</p>
<a href="http://lammichalfranc.files.wordpress.com/2010/08/image27.png"><img style="display: inline; border: 0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb27.png" alt="image" width="656" height="411" border="0" /></a>
<h2>How to use the SPPersistedObject</h2>
<p align="justify">First of all, we have to create our class with parameters. It has to extend the <strong>SPPersistedObject</strong>. Every field we want to be “persisted” should be marked by a <strong>[Persisted]</strong> attribute. We have to create the properties explicit because only fields can be marked with this Attribute after creating this class all you have to do is to create the object fill it with parameters and then save it to the <strong>SPFarm</strong>.</p>

<pre class="lang:default decode:true">public class TimerJobSet: SPPersistedObject
{ 
   [Persisted] 
   public string siteName;

   [Persisted]
   public bool Debug;

   public TimerJobSet(string name, SPPersistedObject parent) : base(name,parent) {}}</pre>
<p align="justify">With this simple class, the first step is to create the Persisted Object on the <strong>SPFarm</strong>. It is really important to call the Update() method.</p>

<pre class="lang:default decode:true">SPWeb web = properties.Feature.Parent;
SPSite site = web.Site;
SPPersistedObject parent = site.WebApplication;
CustomTimerJobSettings settings =new TimerJobSet("TimerJobSet", parent, Guid.NewGuid());
settings.Debug =false;
settings.siteName="host.com";
settings.Update();</pre>
<p align="justify">The object is serialized. Now while executing the <strong>Timer Job </strong> all we have to do is to get the parameters from the <strong>SPFarm.</strong></p>

<pre class="lang:default decode:true">TimerJobSet settings =this.WebApplication.GetChild&lt;TimerJobSet&gt;("TimerJobSet");  string siteName = settings.SiteName;
bool debug = settings.Debug;</pre>
&nbsp;
<div id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:d0a11b8a-20c6-48ec-8289-da2dcea40a3a" class="wlWriterEditableSmartContent" style="display: inline; float: none; margin: 0; padding: 0;">

<!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com -->

</div>
That’s all. Hope this will help someone in his work. Have fun with Timer Jobs.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>601</wp:post_id>
		<wp:post_date>2010-08-15 00:42:34</wp:post_date>
		<wp:post_date_gmt>2010-08-14 22:42:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sptimerjob-parameters-using-the-sppersistedobject</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<category domain="post_tag" nicename="sharepoint"><![CDATA[Sharepoint]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1281832956]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[348872917]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[77]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[SPPersistedObject]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>28</wp:comment_id>
			<wp:comment_author><![CDATA[Using Powershell to set up an SPTimerJob | MarabouStork]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://maraboustork.co.uk/index.php/2010/10/using-powershell-to-set-up-an-sptimerjob/</wp:comment_author_url>
			<wp:comment_author_IP>85.233.160.70</wp:comment_author_IP>
			<wp:comment_date>2010-11-01 14:25:32</wp:comment_date>
			<wp:comment_date_gmt>2010-11-01 14:25:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] with something we can use with our SPTimerJob service. At this point I feel that I should thank Michal &#8220;LaM&#8221; Franc for his very informative blog on persistence of objects in [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>58</wp:comment_id>
			<wp:comment_author><![CDATA[Mano Mangaldas]]></wp:comment_author>
			<wp:comment_author_email>manomangaldas@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-11-30 13:15:00</wp:comment_date>
			<wp:comment_date_gmt>2011-11-30 13:15:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice, Thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[375799089]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>SharePoint 2010 on the Laptop</title>
		<link>http://www.mfranc.com/uncategorized/sharepoint-2010-on-laptop/</link>
		<pubDate>Sun, 15 Aug 2010 07:21:27 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2010/08/15/sharepoint-2010-on-laptop/</guid>
		<description></description>
		<content:encoded><![CDATA[<div id="scid:0767317B-992E-4b12-91E0-4F059A8CECA8:bc178ce3-5863-43a1-97c2-8887d743eea9" class="wlWriterEditableSmartContent" style="display:inline;float:none;margin:0;padding:0;">Technorati Tags: <a rel="tag" href="http://technorati.com/tags/Sharepoint">Sharepoint</a></div>
After a couple of tries, I have finally installed the SharePoint 2010 Foundation on my laptop. I need a development environment to play around with.

I tried installing everything on the virtual machine with Windows 7 host but 2gb ram wasn’t enough to even run the sql scripts. Don’t try installing the Sharepoint 2010 Enterprise it needs eight gb ram in the system.

My Specs:

Intel i5 Core 430M

4GB Ram

Here it is my own SharePoint 2010 o/

<a href="http://lammichalfranc.files.wordpress.com/2010/08/sharepoint.jpg"><img style="display:inline;border:0;" title="sharepoint" src="http://lammichalfranc.files.wordpress.com/2010/08/sharepoint_thumb.jpg" border="0" alt="sharepoint" width="662" height="381" /></a>

The How To instruction  is on the <strong>MSDN </strong>page.

<a href="http://msdn.microsoft.com/en-us/library/ee554869(office.14).aspx">http://msdn.microsoft.com/en-us/library/ee554869(office.14).aspx</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>606</wp:post_id>
		<wp:post_date>2010-08-15 09:21:27</wp:post_date>
		<wp:post_date_gmt>2010-08-15 07:21:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sharepoint-2010-on-laptop</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="sharepoint"><![CDATA[Sharepoint]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1281864087]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[349651916]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Microsoft Pex – Automated Unit Testing</title>
		<link>http://www.mfranc.com/uncategorized/microsoft-pex-automated-unit-testing/</link>
		<pubDate>Sun, 15 Aug 2010 18:14:40 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2010/08/15/microsoft-pex-automated-unit-testing/</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify"><a href="http://research.microsoft.com/en-us/projects/pex/">Microsoft Pex</a> isa Visual Studio add in, which enables code analysis on the runtime. The great fact about it, is&#160; the ability to generate tests automatically. I analyzed my small project with it check out the results.</p>  <p align="justify">&#160;</p>  <h3 align="justify">Automated Tests</h3>  <p align="justify"><a href="http://lammichalfranc.files.wordpress.com/2010/08/image28.png"><img style="border-bottom:0;border-left:0;display:inline;border-top:0;border-right:0;" title="image" border="0" alt="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb28.png" width="244" height="230" /></a> </p>  <p align="justify">&#160;</p>  <p align="justify">While analyzing you can watch whole process in <strong>Pex Explorer</strong>. As you can see only two of my classes passed the tests. Rest, well they are in red and that’s a bad sign. The <strong><a href="http://research.microsoft.com/en-us/projects/pex/">Pex</a></strong> created all the tests by itself.</p>  <p align="justify">&#160;</p>  <p align="justify"><a href="http://lammichalfranc.files.wordpress.com/2010/08/image29.png"><img style="border-bottom:0;border-left:0;display:inline;border-top:0;border-right:0;" title="image" border="0" alt="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb29.png" width="303" height="356" /></a> </p>  <p align="justify">&#160;</p>  <p align="justify"></p>  <p align="justify">On this image you can see all the test cases generated by <strong><a href="http://research.microsoft.com/en-us/projects/pex/">Pex</a></strong> for my Task class. Lets take a closer look at my <strong>TaskBin </strong>class and <strong>CreateFromString </strong>Method.</p>  <p align="justify">&#160;</p>  <p align="justify"><a href="http://lammichalfranc.files.wordpress.com/2010/08/image30.png"><img style="border-bottom:0;border-left:0;display:inline;border-top:0;border-right:0;" title="image" border="0" alt="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb30.png" width="334" height="218" /></a> <a href="http://lammichalfranc.files.wordpress.com/2010/08/image31.png"><img style="border-bottom:0;border-left:0;display:inline;border-top:0;border-right:0;" title="image" border="0" alt="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb31.png" width="229" height="218" /></a> </p>  <p align="justify">&#160;</p>  <p align="justify">Left image shows all the performed tests and shows, which failed or passed. On the right image, you can analyze data on which the test was run. You can clearly see on which string the test failed and, which was ok.</p>  <p align="justify">Values used for tests are generated based on the if statements,&#160; assertions, and operations that can throw an exception. The code is first analyzed, and then the values are generated.</p>  <p align="justify">After the tests are generated you can save and store them for later use.</p>  <p align="justify">&#160;</p>  <h3 align="justify">Suggestions</h3>  <p align="justify"><a href="http://lammichalfranc.files.wordpress.com/2010/08/image32.png"><img style="border-bottom:0;border-left:0;display:inline;border-top:0;border-right:0;" title="image" border="0" alt="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb32.png" width="482" height="242" /></a> </p>  <p align="justify">&#160;</p>  <p align="justify">After the analyze process, <strong><a href="http://research.microsoft.com/en-us/projects/pex/">Pex</a> </strong>also makes suggestions with fixes to encountered problems.</p>  <p align="justify">&#160;</p>  <h3 align="justify">Integration with Various Unit Test Frameworks</h3>  <p align="justify">As a Microsoft product <strong><a href="http://research.microsoft.com/en-us/projects/pex/">Pex</a> </strong>is not only using the MsUnit tests. You can run it with :</p>  <ul>   <li>     <div align="justify"><strong><a href="http://www.nunit.org/">NUnit</a></strong></div>   </li>    <li>     <div align="justify"><strong><a href="http://www.mbunit.com/Default.aspx">MBUnit</a></strong>&#160;</div>   </li> </ul>  <p align="justify">and more.</p>  <p align="justify">I have used the NUnit.</p>  <p align="justify">&#160;</p>  <h3 align="justify">The Future of Unit Testing ?</h3>  <p align="justify">This is quite a nice tool. While writing tests you have to write a lot of code. Pex frees us up from this task,&#160; at least a bit. I think that Pex will be a useful addition and will generate simplest tests. Developer will be able to focus his attention on more complex tests.</p>  <p align="justify">Do you think that the whole process of Unit Testing will be automated?    </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>618</wp:post_id>
		<wp:post_date>2010-08-15 20:14:40</wp:post_date>
		<wp:post_date_gmt>2010-08-15 18:14:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>microsoft-pex-automated-unit-testing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="pex"><![CDATA[pex]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="unit-test"><![CDATA[unit test]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1281903284]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1297046310";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[348791914]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>29</wp:comment_id>
			<wp:comment_author><![CDATA[ayoussif]]></wp:comment_author>
			<wp:comment_author_email>ayoussif@techeg.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>41.32.1.234</wp:comment_author_IP>
			<wp:comment_date>2010-10-17 12:42:51</wp:comment_date>
			<wp:comment_date_gmt>2010-10-17 12:42:51</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Pex Problem with MyGeneration Code Generator 

--------------------------------------------------------------------------------

I am new to PEX, i Have an application which have multiple layers, and I am using Code generator (MyGeneration)to create my DAL, when I tried to use PEX it always exceeds the bounds and always set the object to null, I think the problem comes when it set properities in the Object that should never changes(Default values),]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30</wp:comment_id>
			<wp:comment_author><![CDATA[Summited my session for the Silicon Valley Code Camp 2011 &laquo; C# Lighthouse]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://theojungeblut.wordpress.com/2011/04/18/summited-my-session-for-the-silicon-valley-code-camp-2011/</wp:comment_author_url>
			<wp:comment_author_IP>74.200.245.176</wp:comment_author_IP>
			<wp:comment_date>2011-04-18 17:01:07</wp:comment_date>
			<wp:comment_date_gmt>2011-04-18 17:01:07</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Pex links http://research.microsoft.com/en-us/projects/pex/ http://lammichalfranc.wordpress.com/2010/08/15/microsoft-pex-automated-unit-testing/http://blogs.u2u.be/peter/post/2010/04/10/Pex-and-Code-Contracts.aspx [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>TimeIsMoney 0.2.4 – moving to WPF</title>
		<link>http://www.mfranc.com/uncategorized/timeismoney-0-2-4-moving-to-wpf/</link>
		<pubDate>Fri, 20 Aug 2010 21:24:23 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2010/08/20/timeismoney-0-2-4-moving-to-wpf/</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify">Time is money task adding and sorting tool is almost done. I&#160; have decided to move the project to <strong>WPF</strong>,&#160;&#160; it is a more flexible and powerful framework.</p>  <p align="justify"><a href="http://lammichalfranc.files.wordpress.com/2010/08/image33.png"><img style="border-bottom:0;border-left:0;display:inline;border-top:0;border-right:0;" title="image" border="0" alt="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb33.png" width="157" height="148" /></a>&#160;</p>  <p align="justify">&#160;</p>  <p align="justify">The idea behind this mini tool is simple. I m collecting tasks throughout day and at the let's say 8 pm I m reviewing them and sorting to lists.</p>  <p align="justify">I have various lists: </p>  <ul>   <li>     <div align="justify">Next learning</div>   </li>    <li>     <div align="justify">Next action</div>   </li>    <li>     <div align="justify">Ideas</div>   </li>    <li>     <div align="justify">Quotes</div>   </li>    <li>     <div align="justify">Jokes</div>   </li>    <li>     <div align="justify">Next week </div>   </li>    <li>     <div align="justify">Next month </div>   </li>    <li>     <div align="justify">To do later</div>   </li> </ul>  <p align="justify">I m sorting collected items between them. By simply clicking the <strong>alt+ctrl+b</strong> I am invoking a dialog box which allows me to define a simple task. After the task is on the list it is waiting until a specified time of the day. I have a habit to review tasks at eight pm. I can click on each task and choose an appropriate list.</p>  <p align="justify"><a href="http://lammichalfranc.files.wordpress.com/2010/08/image34.png"><img style="border-bottom:0;border-left:0;display:inline;border-top:0;border-right:0;" title="image" border="0" alt="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb34.png" width="244" height="198" /></a> </p>  <p align="justify">&#160;</p>  <p align="justify">You can define the lists in the settings.</p>  <p align="justify">Application works with the format of&#160; <a href="http://www.codeproject.com/KB/applications/todolist2.aspx"><strong>ToDoList</strong></a>&#160; by <a href="http://www.abstractspoon.com/"><strong>Abstract Spoon</strong></a>.&#160; If you want to view your tasks list you have to use this great application. Right now I don't have my own browser. <a href="http://www.codeproject.com/KB/applications/todolist2.aspx"><strong>ToDoList</strong></a> is so great that I don’t need one. </p>  <p align="justify">This application is just the beginning of a bigger collection of programs, which will help me, and I hope also you with a better time management system. </p>  <p align="justify">Next module will be in WPF it will have a various analyzing and reporting features.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>626</wp:post_id>
		<wp:post_date>2010-08-20 21:24:23</wp:post_date>
		<wp:post_date_gmt>2010-08-20 21:24:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>timeismoney-0-2-4-moving-to-wpf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1282339463]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1297046307";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[506269562]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Activity Tracker – WPF Styling TabControl</title>
		<link>http://www.mfranc.com/uncategorized/activity-tracker-wpf-styling-tabcontrol/</link>
		<pubDate>Tue, 24 Aug 2010 19:40:17 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2010/08/24/activity-tracker-wpf-styling-tabcontrol/</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: justify;">I have started another mini tool which will be a part of the <strong>TimeIsMoney</strong> project. <a href="http://screeperzone.com/products/"><strong>Activity Tracker</strong></a><strong>.</strong> Look at the simple example. Right now I am using this tool in my job. It’s great but for my project i need something more advanced.</p>
<p style="text-align: justify;"><a href="http://lammichalfranc.files.wordpress.com/2010/08/image35.png"><img style="display: block; float: none; margin-left: auto; margin-right: auto; border-width: 0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb35.png" alt="image" width="198" height="244" border="0" /></a></p>
<p style="text-align: justify;"><em><strong>Activity Tracker from the </strong></em><a href="http://screeperzone.com/"><strong>ScreeperZone</strong></a></p>
<p style="text-align: justify;">This tracker is a windows gadget. There was an idea to create some sort of  the link between <a href="http://www.codeproject.com/KB/applications/todolist2.aspx"><strong>TODO List</strong></a> and this application,  but I have encountered several major problems. It’s a windows gadget so it's created from the simple html with JavaScript, and its data is stored in <strong><a href="http://pl.wikipedia.org/wiki/JSON">Json</a></strong> format. Accessing and modifying  this data would be a simple task but the application refreshes its data only on the start. There is no way to invoke the data refresh without restarting the <strong>Activity Tracker</strong>. So there is only ability to “bind the data between application in <strong>OneWay</strong>”. I need this communications to be “<strong>TwoWay</strong>” Because of this problem and some other constraints,  I have decided to create my own application from the scratch.</p>
<p style="text-align: justify;"><strong>Ideas</strong></p>

<ul style="text-align: justify;">
	<li>
<div>Time spent calculation.</div></li>
	<li>
<div>Application will read the xml list. User will have the ability to select lists and items to track.</div></li>
	<li>
<div>activity log – needed for the reports module.</div></li>
</ul>
<p style="text-align: justify;"><strong>UI Concept</strong></p>
<p style="text-align: justify;"><a href="http://lammichalfranc.files.wordpress.com/2010/08/image36.png"><img style="display: inline; border-width: 0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb36.png" alt="image" width="244" height="215" border="0" /></a></p>
<p style="text-align: justify;">This is a simple concept created in … MS Paint. As you can see its just a <strong>TabControl</strong> with a customized <strong>TreeView. </strong>Items in the treeview will display the title time spent + time estimated by the user. There is a button which is used to activate the time counter. You will be able to check the comments attached to a task by right clicking on the item.</p>
<p style="text-align: justify;"></p>
<p style="text-align: justify;"><strong><span style="font-size: medium;">Implementation</span></strong></p>
<p style="text-align: justify;"></p>
<p style="text-align: justify;">I created styles first. Yeah i know that you should implement the Model and Controller first and then move to the View. The styling in WPF is so great that i couldn't resist.</p>
<p style="text-align: justify;"><strong>TabItem Custom Styles</strong></p>
<p style="text-align: justify;"><a href="http://lammichalfranc.files.wordpress.com/2010/08/image37.png"><img style="display: inline; border-width: 0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb37.png" alt="image" width="204" height="30" border="0" /></a></p>

<div style="text-align: justify;">
<div id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:7caac4de-d865-489a-abf1-2ea953cb51d6" class="wlWriterEditableSmartContent" style="display: inline; float: none; margin: 0; padding: 0;">
<div>
<pre class="lang:default decode:true ">&lt;Style TargetType="TabItem"&gt;
    &lt;Setter Property ="Template"&gt;
        &lt;Setter.Value&gt;
            &lt;ControlTemplate TargetType="TabItem"&gt;
                &lt;Grid&gt;
                    &lt;StackPanel Orientation="Horizontal"&gt;
                        &lt;Border Name="Border" Padding="2" BorderBrush="Black" Borde                            rThickness="1,1,1,1" 
                    CornerRadius="10,10,0,0" Background="DarkOrange"&gt;
                            &lt;ContentPresenter Name="PART_header" ContentSource="Header"/&gt;
                        &lt;/Border&gt;
                    &lt;/StackPanel&gt;
                &lt;/Grid&gt;
            &lt;/ControlTemplate&gt;
        &lt;/Setter.Value&gt;
    &lt;/Setter&gt;
&lt;/Style&gt;</pre>
&nbsp;

</div>
<!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com -->

</div>
</div>
<p style="text-align: justify;">Most Interesting part in, here is a <strong>ContentPresenter</strong> this tag represents the place where the actual data of an item will be displayed. By specifying the <strong>ContentSource</strong>, we can inject the data to it. By using the <strong>ContentPresenter</strong>, I can create a <strong>TabItem</strong> and specify its attribute <strong>Header</strong>.</p>

<div style="text-align: justify;">
<div id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:711d868f-3183-466e-8961-999d4ea08ab5" class="wlWriterEditableSmartContent" style="display: inline; float: none; margin: 0; padding: 0;">
<div><span style="color: #008080;">1</span> <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">TabItem </span><span style="color: #ff0000;">Header</span><span style="color: #0000ff;">=”Projekt1”/&gt;</span></div>
<!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com -->

</div>
</div>
<p style="text-align: justify;">The value in Header will be automatically inserted in the place of the <strong>ContentPresenter.</strong></p>
<p style="text-align: justify;"><strong>TabItem Triggers – Changing color of TabItem</strong></p>
<p style="text-align: justify;"></p>
<p style="text-align: justify;"></p>
<p style="text-align: justify;"><strong>WPF</strong> is great because it lets you omit a lot of code. To do the simple <strong>Background color</strong> change in a Windows Forms you would have to write a lot of code. More code means more bugs, longer development time, and the cost of a product.</p>
<p style="text-align: justify;">In this scenario, we want the background color of the <strong>Tabitem</strong> to change when it’s selected. In <strong>WPF,</strong> we don’t need to write a single line of code. <strong>Xaml</strong> and its magic is enough for this task. To implement a simple behavior, we can use the <strong>Triggers</strong>.</p>
<p style="text-align: justify;"></p>
<p style="text-align: justify;"><a href="http://lammichalfranc.files.wordpress.com/2010/08/image38.png"><img style="display: inline; border-width: 0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb38.png" alt="image" width="205" height="30" border="0" /></a></p>

<div style="text-align: justify;">
<div id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:f42c0442-c4b7-43c5-a74b-2b9bbddac77e" class="wlWriterEditableSmartContent" style="display: inline; float: none; margin: 0; padding: 0;">
<div>
<pre class="lang:default decode:true ">&lt;ControlTemplate.Triggers&gt;
    &lt;Trigger Property="IsSelected" Value="True"&gt;
        &lt;Setter TargetName="Border" Property="Background" Value="Gold"/&gt;
    &lt;/Trigger&gt;
    &lt;Trigger Property="IsSelected" Value="False"&gt;
        &lt;Setter TargetName="Border" Property="Background" Value="DarkOrange"/&gt;     &lt;/Trigger&gt;
&lt;/ControlTemplate.Triggers&gt;</pre>
&nbsp;

</div>
<!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com -->

</div>
</div>
<p style="text-align: justify;">As you can see <strong>Trigger</strong> “observes” a property and its value. In this example, it’s the <strong>IsSelected</strong> property. I need two triggers one for each option. <strong>Trigger </strong>contains a setter logic which is used to apply the changes. The <strong>Setter</strong> is attached to a property of a target and changes its value.</p>
<p style="text-align: justify;"><strong>TabItem Triggers – Changing color of TabItem</strong></p>
<p style="text-align: justify;"><a href="http://lammichalfranc.files.wordpress.com/2010/08/image39.png"><img style="display: inline; border-width: 0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb39.png" alt="image" width="244" height="204" border="0" /></a></p>

<div style="text-align: justify;">
<div id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:f7e0055c-5fbf-4412-bf10-6d5e3deb640e" class="wlWriterEditableSmartContent" style="display: inline; float: none; margin: 0; padding: 0;">
<div>
<pre class="lang:default decode:true ">&lt;Style TargetType="{x:Type TabControl}"&gt;
    &lt;Setter Property="Template"&gt;
        &lt;Setter.Value&gt;
            &lt;ControlTemplate TargetType="{x:Type TabControl}"&gt;
                &lt;Grid&gt;
                    &lt;Grid.RowDefinitions&gt;
                        &lt;RowDefinition Height="Auto"/&gt;
                        &lt;RowDefinition Height="*"/&gt;
                    &lt;/Grid.RowDefinitions&gt;
                    &lt;TabPanel Grid.Row="0" Panel.ZIndex="1" Margin="0,0,0,0" IsItemsHost="True" Background="Transparent"/&gt;
                        &lt;Border Margin="0,0,0,0" Padding="0" Background="Gold" Grid.Row="1" BorderBrush="Black" BorderThickness="1,1,1,1"&gt;
                            &lt;ContentPresenter ContentSource="SelectedContent"/&gt;
                        &lt;/Border&gt;
                    &lt;/Grid&gt;
                &lt;/ControlTemplate&gt;
            &lt;/Setter.Value&gt;
        &lt;/Setter&gt;
    &lt;/Style&gt;</pre>
&nbsp;

</div>
<!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com -->

</div>
</div>
<p style="text-align: justify;">Last Thing to style is a <strong>TabControl</strong>. I need a customized background for every item in the <strong>Control</strong>. <strong>ContentPresenter</strong> is attached to a <strong>SelectedContent</strong>. This is the place where a <strong>Content</strong> of a Selected <strong>TabItem</strong> is displayed.</p>
<p style="text-align: justify;">That’s all for now. Next Chapter simple Data Binding.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>639</wp:post_id>
		<wp:post_date>2010-08-24 19:40:17</wp:post_date>
		<wp:post_date_gmt>2010-08-24 19:40:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>activity-tracker-wpf-styling-tabcontrol</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="wpf-2"><![CDATA[wpf]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1282678819]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1297046303";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[348700099]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>31</wp:comment_id>
			<wp:comment_author><![CDATA[trn]]></wp:comment_author>
			<wp:comment_author_email>troyanek@o2.pl</wp:comment_author_email>
			<wp:comment_author_url>http://trn.studentlive.pl</wp:comment_author_url>
			<wp:comment_author_IP>90.156.112.34</wp:comment_author_IP>
			<wp:comment_date>2010-08-28 08:03:58</wp:comment_date>
			<wp:comment_date_gmt>2010-08-28 08:03:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It looks like it'll be powerfull tool ;) One thing is making me to think - I don't know if I understand it well but - Does user have to click "Start" / "Stop" after every task? or he just once sets day schedule and tracker gives him signs that time for several task is up ?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32</wp:comment_id>
			<wp:comment_author><![CDATA[LaM]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>193.239.59.101</wp:comment_author_IP>
			<wp:comment_date>2010-09-01 16:56:56</wp:comment_date>
			<wp:comment_date_gmt>2010-09-01 16:56:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes user have to click Start and Stop. Scheduler is already in the TODO list software ;] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>31</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Activity Tracker – WPF DataBinding the TabControl with TreeView</title>
		<link>http://www.mfranc.com/uncategorized/activity-tracker-wpf-databinding-the-tabcontrol-with-treeview/</link>
		<pubDate>Sat, 28 Aug 2010 08:19:00 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2010/08/28/activity-tracker-wpf-databinding-the-tabcontrol-with-treeview/</guid>
		<description></description>
		<content:encoded><![CDATA[In the first post about <strong>Activity Tracker</strong>, I have created a simple style for my application. In this post, I want to show <strong>DataBinding</strong>. With this feature, we can make a flexible connection between Model and View Layer. There is no need for code. Everything is constructed in <strong>XAML</strong> language, which is similar to the HTML Markup.
<h3>Simple Binding - DataTemplate</h3>
&nbsp;

In the first example, we have a simple <strong>DataTemplate</strong>. It contains a structured Grid,  Button and couple of TextBlocks. By assigning to the Text Property <strong>Binding</strong> logic we are telling the Template too look for a specific property in a Class, which will be used with the Template.
<div>
<pre class="lang:default decode:true ">&lt;DataTemplate x:Key="TaskTemplate"&gt;
   &lt;Grid Width="200"&gt;
      &lt;Grid.ColumnDefinitions&gt;
         &lt;ColumnDefinition Width="5*"&gt;&lt;/ColumnDefinition&gt;
         &lt;ColumnDefinition Width="1*"&gt;&lt;/ColumnDefinition&gt;
         &lt;ColumnDefinition Width="1*"&gt;&lt;/ColumnDefinition&gt;
         &lt;ColumnDefinition Width="3*"&gt;&lt;/ColumnDefinition&gt;
      &lt;/Grid.ColumnDefinitions&gt;
      &lt;TextBlock Grid.Column="0" Text="{Binding Path=Title}"/&gt;
      &lt;TextBlock Grid.Column="1" Text="{Binding Path=TimeSpent}"/&gt;
      &lt;TextBlock Grid.Column="2" Text="{Binding Path=TimeEstimate}"/&gt;
      &lt;Button Grid.Column="3"&gt;Start&lt;/Button&gt;13 &lt;/Grid&gt;14 &lt;/DataTemplate&gt;</pre>
Template is looking for specified properties in a collection bound to the

</div>
<div></div>
<div id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:90b9145c-9edc-4909-9f87-3f5b7d8a5069" class="wlWriterEditableSmartContent" style="display: inline; float: none; margin: 0; padding: 0;">
<div><strong>ItemsSource</strong> Property. We can also do this by the <strong>DataContext</strong>, it’s more powerful concept for another Post.</div>
</div>
<a href="http://lammichalfranc.files.wordpress.com/2010/08/image40.png"><img style="display: inline; border-width: 0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb40.png" alt="image" width="244" height="226" border="0" /></a>
<h3>HierarchicalDataTemplate</h3>
Simple DataTemplate doesn’t have the ability to automatically create a hierarchy. I could make a code and implement a logic  to get this effect but fortunately <strong>WPF</strong> have a <strong>HierarchicalDataTemplate</strong>. This special template is automatically making a hierarchical view used on the TreeViews.
<div>
<div id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:c11f5546-4e5c-469d-8b79-11f4057df4d0" class="wlWriterEditableSmartContent" style="display: inline; float: none; margin: 0; padding: 0;">
<div>
<pre class="lang:default decode:true">&lt;HierarchicalDataTemplate x:Key="TaskTemplate" ItemsSource="{Binding Childrens}" DataType="{x:Type data:Task}"&gt;
   &lt;Grid Width="200"&gt;
     &lt;Grid.ColumnDefinitions&gt;
        &lt;ColumnDefinition Width="5*"&gt;&lt;/ColumnDefinition&gt;
        &lt;ColumnDefinition Width="1*"&gt;&lt;/ColumnDefinition&gt;
        &lt;ColumnDefinition Width="1*"&gt;&lt;/ColumnDefinition&gt;
        &lt;ColumnDefinition Width="3*"&gt;&lt;/ColumnDefinition&gt;
      &lt;/Grid.ColumnDefinitions&gt;
      &lt;TextBlock Grid.Column="0" Text="{Binding Path=Title}"/&gt;
      &lt;TextBlock Grid.Column="1" Text="{Binding Path=TimeSpent}"/&gt;
      &lt;TextBlock Grid.Column="2" Text="{Binding Path=TimeEstimate}"/&gt;
      &lt;Button Grid.Column="3"&gt;Start&lt;/Button&gt;
    &lt;/Grid&gt;
&lt;/HierarchicalDataTemplate&gt;</pre>
</div>
<!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com -->

</div>
</div>
<a href="http://lammichalfranc.files.wordpress.com/2010/08/image42.png"><img style="display: inline; border-width: 0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb41.png" alt="image" width="244" height="226" border="0" /></a>

Task class contains a list of <strong>Childrens</strong> which is used in the <strong>HierarchicalDataTemplate</strong>.
<div id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:2678f708-e812-4f50-b17b-48d30936ca70" class="wlWriterEditableSmartContent" style="display: inline; float: none; margin: 0; padding: 0;">
<div>
<pre class="lang:default decode:true">public class Task
{ 
   .....
   public List&lt;Task&gt; Childrens { get; set; }
   .....
}</pre>
</div>
<!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com -->

</div>
<strong>HierarchicalDataTemplate</strong> has a property <strong>ItemsSource</strong> which is binded to Children's property. The Template will create the root element and also elements from the Children's List. I don’t have to worry about how it’s working. Magic happens behind the scene.
<h3>Binding TabControl Content</h3>
Every TabControl contains a TreeView, which is filled with Task Items. I wanted another Template, which would automatically inject the TreeView into TabControl.
<pre class="lang:default decode:true">&lt;DataTemplate x:Key="TabItemTemplate"&gt;
    &lt;Grid&gt;
       &lt;TreeView Background="Transparent" ItemsSource="{Binding Content}" ItemTemplate="{StaticResource TaskTemplate}"&gt;
      &lt;/TreeView&gt;
    &lt;/Grid&gt;
&lt;/DataTemplate&gt;</pre>
<strong>TabItem</strong> Template creates a Transparent TreeView. It's bound to the <strong>Content</strong> property. This is a property of Project class which is used to create a new <strong>TabItems</strong> with children's injected to the TreeView.
<div>
<div id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:1a9470ae-9a29-4035-8b4c-44dca516e6ea" class="wlWriterEditableSmartContent" style="display: inline; float: none; margin: 0; padding: 0;">
<div>
<pre class="lang:default decode:true">public class Project
{ 
    public string Title { get; set; }
    public List&lt;Task&gt; Content { get; set; }
}</pre>
</div>
<!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com -->

</div>
</div>
Project class is a root for every Task set. It’s Title bound to the Header property of a TabItem.
<div>
<div id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:91cfd2a4-b3a3-4d0f-ab13-87cf447734e4" class="wlWriterEditableSmartContent" style="display: inline; float: none; margin: 0; padding: 0;">
<div>
<pre class="lang:default decode:true">&lt;Grid Name="MainTree" Grid.Row="1" Grid.RowSpan="1"&gt;
   &lt;TabControl Name="MainTabControl" ContentTemplate="{StaticResource TabItemTemplate}"&gt;&lt;/TabControl&gt;
&lt;/Grid&gt;</pre>
</div>
<!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com -->

</div>
</div>
In order to bind the <strong>Title</strong> from the Project class to the <strong>TabItem</strong> the header, I had to change a tab item style a bit. The Content Presenter was replaced by the <strong>TextBlock</strong> which Text Property is bound to The Title.
<div>
<div id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:851fcd4d-294f-4ee8-9888-0e00aa3615f6" class="wlWriterEditableSmartContent" style="display: inline; float: none; margin: 0; padding: 0;">
<div>
<pre class="lang:default decode:true">&lt;Style TargetType="TabItem"&gt; 
    .... 
    &lt;Grid&gt;
      &lt;StackPanel Orientation="Horizontal"&gt;
          &lt;Border Name="Border" Padding="2" BorderBrush="Black" BorderThickness="1,1,1,1" 
          CornerRadius="10,10,0,0" Background="DarkOrange"&gt;
             &lt;TextBlock Text="{Binding Path=Title}"&gt;&lt;/TextBlock&gt;
         &lt;/Border&gt;
      &lt;/StackPanel&gt;
    &lt;/Grid&gt;
    ....
&lt;/Style&gt;</pre>
</div>
<!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com -->

</div>
</div>
When all is done I just need to  create sample data.
<div id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:142916b0-cf8b-4a75-b6f1-cafe51ad9cf8" class="wlWriterEditableSmartContent" style="display: inline; float: none; margin: 0; padding: 0;">
<div>
<pre class="lang:default decode:true">List&lt;Task&gt; tasks =new List&lt;Task&gt;() 
{
      new Task("test",10,"I",DateTime.Now,8,"komentarz"){ TimeSpent ="0"}, 
      new Task("test",10,"I",DateTime.Now,8,"komentarz"){ TimeSpent ="0"},
      new Task("test",10,"I",DateTime.Now,8,"komentarz"){ TimeSpent ="0"},
      new Task("test",10,"I",DateTime.Now,8,"komentarz"){ TimeSpent ="0"}
};

InitializeComponent();

tasks[0].Childrens =new List&lt;Task&gt;()
{ 
      new Task("test",10,"I",DateTime.Now,8,"komentarz"){ TimeSpent ="0"} 
};

List&lt;Project&gt; projects =new List&lt;Project&gt;() 
{ 
      new Project() { Content = tasks, Title ="Projekt1" }, 
      new Project() { Title ="Projekt2" } 
};

MainTabControl.ItemsSource = projects;</pre>
</div>
<!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com -->

</div>
And the result is :

<a href="http://lammichalfranc.files.wordpress.com/2010/08/image43.png"><img style="display: inline; border: 0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/08/image_thumb42.png" alt="image" width="244" height="228" border="0" /></a>

Next post Timers + activity tracker logic.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>649</wp:post_id>
		<wp:post_date>2010-08-28 08:19:00</wp:post_date>
		<wp:post_date_gmt>2010-08-28 08:19:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>activity-tracker-wpf-databinding-the-tabcontrol-with-treeview</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="wpf-2"><![CDATA[wpf]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1282983543]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1297046302";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[348363714]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>612</wp:comment_id>
			<wp:comment_author><![CDATA[Peter]]></wp:comment_author>
			<wp:comment_author_email>peter.mills@civica.co.uk</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>81.147.69.183</wp:comment_author_IP>
			<wp:comment_date>2015-03-18 22:52:00</wp:comment_date>
			<wp:comment_date_gmt>2015-03-18 21:52:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very nice!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1914803442]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Activity Tracker –WPF Auto Updated Data Binding with INotifyPropertyChanged</title>
		<link>http://www.mfranc.com/uncategorized/activity-tracker-wpf-auto-updated-data-binding-with-inotifypropertychanged/</link>
		<pubDate>Thu, 02 Sep 2010 17:44:02 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2010/09/02/activity-tracker-wpf-auto-updated-data-binding-with-inotifypropertychanged/</guid>
		<description></description>
		<content:encoded><![CDATA[After styling and Data binding time has come for the logic implementation. I need a simple counter with a timer. At first I tried to use the Timer class which has an Elapsed event but there were some problems with <strong>DataBinding</strong>, so I have decided to create my own thread with a one second sleep time. Its main purpose is to increment the counter.

In order to create a better logic, I have decided to create a new class TaskWPF. It wraps the Task class which is used as a simple data container. TaskWPF includes logic used by the Wpf <strong>DataBinding</strong> mechanism. Task class is used also in other projects, so I have decided to split it.  TaskWPF implements the <strong>INotifyPropertyChanged</strong> interface. It is needed to implement automatic data binding updates.
<h3>Auto Updated Data Binding:</h3>
Each second value on TimeSpent is incremented. I want to track this time in real-time. In order to do that we have to redraw the <strong>TextBlock. </strong>By using the <strong>DataBinding, </strong>we<strong> </strong>can do this process automatically every time the bound data is changed. This option is not default. We have to set up few options.

<strong>1)</strong> First our class which contains bound properties needs to implement the <strong>INotifyPropertyChanged</strong> interface. We have to implement the method <strong>OnPropertyChanged</strong> and call it every time we are changing the property which we want to auto update. This call will notify the bound <strong>WPF</strong> control, in my example <strong>TextBlock,</strong> that the value has changed and this will force the <strong>TextBlock</strong> to redraw itself with a new value.
<div id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:ac8baeac-6b0f-4a72-a107-27e254b387c7" class="wlWriterEditableSmartContent" style="display: inline; float: none; margin: 0; padding: 0;">
<div>
<pre class="lang:default decode:true ">public class TaskWPF : INotifyPropertyChanged
{
     ....
     public void Increment()
     {
          AddSecond(1);
          OnPropertyChanged("TimeSpentString");
     } 
     ... 

     #region INotifyPropertyChanged Members

     public event PropertyChangedEventHandler PropertyChanged;
     protectedvoid OnPropertyChanged(string name)
     {
          PropertyChangedEventHandler handler = PropertyChanged;
          if (handler !=null)
          {
               handler(this, new PropertyChangedEventArgs(name));
          }
     }
     #endregion
     ...
}</pre>
&nbsp;

</div>
</div>
<div><span style="color: #000000;"> </span><span style="font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; line-height: 19px; white-space: normal; font-size: 13px;">As you can see every time I am calling the increment method I am m also calling the <strong>OnPropertyChanged</strong> function.  This one notifies the <strong>TextBlock</strong> that the property has changed.</span></div>
<strong>2)</strong> We have to tell the <strong>TextBlock</strong> to watch out for property updates. There is a special property <strong>UpdateSourceTrigger</strong> in the <strong>Binding</strong> segment that specifies how the <strong>Binding</strong> will behave. . On default, it is set on <strong>LostFocus</strong> option which updates bound value every time the control losses focus.  In order to auto update on property changed, we have to set it on “<strong>PropertyChanged</strong>“ option.
<pre class="lang:default decode:true">&lt;HierarchicalDataTemplate x:Key="TaskTemplate" ItemsSource="{Binding Childrens}" DataType="{x:Type data:TaskWPF}"&gt;
   ...
   &lt;TextBlock Name="TimeSpent" Text="{Binding Path=TimeSpentString Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/&gt;
   ....
&lt;/HierarchicalDataTemplate&gt;</pre>
<div id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:207c887f-8d06-4789-9080-742f4b213a5a" class="wlWriterEditableSmartContent" style="display: inline; float: none; margin: 0; padding: 0;">

<!-- Code inserted with Steve Dunn's Windows Live Writer Code Formatter Plugin.  http://dunnhq.com -->

</div>
Same technique is used for time estimated limit notification. Right now I have made a simple border which is changing the color when the time spent is greater than estimated time.

<a href="http://lammichalfranc.files.wordpress.com/2010/09/image.png"><img style="display: inline; border-width: 0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/09/image_thumb.png" alt="image" width="244" height="205" border="0" /></a> <a href="http://lammichalfranc.files.wordpress.com/2010/09/image1.png"><img style="display: inline; border-width: 0;" title="image" src="http://lammichalfranc.files.wordpress.com/2010/09/image_thumb1.png" alt="image" width="223" height="206" border="0" /></a>

Background color of the Border is bound to the property in TaskWPF class.
<div id="scid:9D7513F9-C04C-4721-824A-2B34F0212519:6704c60f-a714-4da8-84e6-3255ddbbb38a" class="wlWriterEditableSmartContent" style="display: inline; float: none; margin: 0; padding: 0;">
<pre class="lang:default decode:true ">public void IsOverEstimatedTime()
    {
        if (_task.TimeSpent &gt; _task.TimeEstimate)
        {
            TaskColor ="Red";
            OnPropertyChanged("TaskColor");
        }
    }</pre>
&nbsp;

</div>
<div></div>
<div>
<pre>Every time I am incrementing the counter. I am also checking if the time spent is greater than time estimated. When this is its true color name is changed,  and the <strong>OnPropertyChanged</strong> method is called. It notifies the Border by the <strong>Binding</strong> to redraw itself because the value has changed. One important thing to note. Color is specified by a string name because Background property in the Xaml doesn't accept a Color" class.

Next Chapter. Communication with Xml files and TODO List.</pre>
</div>
<div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>655</wp:post_id>
		<wp:post_date>2010-09-02 17:44:02</wp:post_date>
		<wp:post_date_gmt>2010-09-02 17:44:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>activity-tracker-wpf-auto-updated-data-binding-with-inotifypropertychanged</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="wpf-2"><![CDATA[wpf]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1283449446]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1297046300";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[349852519]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Time Is Money 0.2.5 - Activity Tracker  Alpha Version</title>
		<link>http://www.mfranc.com/uncategorized/time-is-money-0-2-5-activity-tracker-alpha-version/</link>
		<pubDate>Sun, 05 Sep 2010 18:57:23 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2010/09/05/time-is-money-0-2-5-activity-tracker-alpha-version/</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify">It's time to show you a simple version of one of the tools in <strong>TimeIsMoney</strong> project,&#160; <strong>Activity Tracker.</strong> This early release enables simple tracking of tasks. Design is still very simple, I m working on it. </p>  <p align="center"><a href="http://lammichalfranc.files.wordpress.com/2010/09/image2.png"><img style="border-bottom:0;border-left:0;display:block;float:none;margin-left:auto;border-top:0;margin-right:auto;border-right:0;" title="image" border="0" alt="image" src="http://lammichalfranc.files.wordpress.com/2010/09/image_thumb2.png" width="244" height="241" /></a>&#160;<strong>Pic 1. Activity Tracker Alpha</strong></p>  <p align="justify"><strong></strong></p>  <p align="justify"><strong>Link : </strong><a href="http://github.com/downloads/LaMik/TimeIsMoney/ActivityTracker.zip">ActivityTracker</a> </p>  <p align="justify">&#160;</p>  <p align="justify"><strong>Requirements :</strong></p>  <p align="justify">1) .Net 4.0 Framework</p>  <p align="justify">2) TODO list file. [At the moment it&#160; only supports this xml format]</p>  <p align="justify">&#160;</p>  <p align="justify"><strong>QuickStart :</strong></p>  <p align="justify">1) Load Projects by plus button.</p>  <p align="justify">2) Select Project and click Start on Task you want to track.</p>  <p align="justify">3) Unload and save changes by clicking minus Button</p>  <p align="justify">&#160;</p>  <p align="justify"><strong>Future Release:</strong></p>  <p align="justify"><strong>0.2.6</strong></p>  <p align="justify">- Better Design - Activity Tracker</p>  <p align="justify">- Moving task adding tool from Windows Forms to WPF.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>666</wp:post_id>
		<wp:post_date>2010-09-05 18:57:23</wp:post_date>
		<wp:post_date_gmt>2010-09-05 18:57:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>time-is-money-0-2-5-activity-tracker-alpha-version</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="wpf-2"><![CDATA[wpf]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1283713046]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1297046297";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[611687601]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Activity Tracker – New Design</title>
		<link>http://www.mfranc.com/uncategorized/activity-tracker-new-design/</link>
		<pubDate>Mon, 13 Sep 2010 17:48:19 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2010/09/13/activity-tracker-new-design/</guid>
		<description></description>
		<content:encoded><![CDATA[<p><a href="http://lammichalfranc.files.wordpress.com/2010/09/image3.png"><img style="border-bottom:0;border-left:0;display:inline;border-top:0;border-right:0;" title="image" border="0" alt="image" src="http://lammichalfranc.files.wordpress.com/2010/09/image_thumb3.png" width="642" height="323" /></a> </p>  <p>&#160;</p>  <p align="justify">I have been working lately on new design for Activity Tracker. There is still a lot of things to do but as you can see it is a nice improvement, compared to the previous version. New Version will be available after some tests.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>671</wp:post_id>
		<wp:post_date>2010-09-13 17:48:19</wp:post_date>
		<wp:post_date_gmt>2010-09-13 17:48:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>activity-tracker-new-design</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1284400100]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1297046295";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[406453949]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>33</wp:comment_id>
			<wp:comment_author><![CDATA[mrozycki]]></wp:comment_author>
			<wp:comment_author_email>tigotrios@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://logtree.blogger.com</wp:comment_author_url>
			<wp:comment_author_IP>78.154.77.46</wp:comment_author_IP>
			<wp:comment_date>2010-09-13 18:10:55</wp:comment_date>
			<wp:comment_date_gmt>2010-09-13 18:10:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Is that... Comic Sans MS? And that red, eyeraping colour.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34</wp:comment_id>
			<wp:comment_author><![CDATA[LaM]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>193.239.59.101</wp:comment_author_IP>
			<wp:comment_date>2010-09-13 18:16:58</wp:comment_date>
			<wp:comment_date_gmt>2010-09-13 18:16:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes , that's a Comic Sans MS :D And red should be "eyeraping". I know that everyone has a different style that's why in future realease i will add abbility to create themes.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>33</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Learning Linq with the LinqPad</title>
		<link>http://www.mfranc.com/uncategorized/learning-linq-with-the-linqpad/</link>
		<pubDate>Tue, 14 Sep 2010 19:55:28 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2010/09/14/learning-linq-with-the-linqpad/</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify"><strong>LinqPad</strong> is a great tool to learn <strong>Linq</strong> and test queries</p>  <p align="justify">&#160;</p>  <p align="justify">While working on the <strong>Activity Tracker</strong> I had to make a new xml loading logic to be able to load the children's of the nodes. Previous logic just loaded all the elements without the parent &lt;-&gt; child connection. </p>  <p align="justify"><strong>Xml logic</strong> is using the <strong>Linq to xml</strong>. In order to learn <strong>Linq</strong> better I needed to test some of its feature and by try and error create a code. Modifying and creating code all the time is really a time consuming task. </p>  <p align="justify">There is a nice application which you can use to play and test <strong>Linq</strong> really fast.</p>  <p align="justify">&#160;</p>  <h5 align="justify"><a href="http://www.linqpad.net/">LinqPad</a></h5>  <p align="center"><a href="http://lammichalfranc.files.wordpress.com/2010/09/image4.png"><font color="#d54e21"></font><img style="display:block;float:none;margin-left:auto;margin-right:auto;border-width:0;" title="image" border="0" alt="image" src="http://lammichalfranc.files.wordpress.com/2010/09/image_thumb4.png" width="338" height="324" /></a><strong> Pic 1. Main window</strong></p>  <p align="justify">&#160;</p>  <p align="justify"><strong>Simple example :</strong></p>  <p align="justify">Reading and querying xml file.</p>  <p align="justify"><a href="http://lammichalfranc.files.wordpress.com/2010/09/image5.png"><img style="display:block;float:none;margin-left:auto;margin-right:auto;border-width:0;" title="image" border="0" alt="image" src="http://lammichalfranc.files.wordpress.com/2010/09/image_thumb5.png" width="425" height="343" /></a>&#160;</p>  <p align="justify">You can write simple code and execute it really fast, just like you would write the code in IDE . To see results you can use the Dump class which executes query and then shows the result.   <br /></p>  <p align="justify">This is really great and useful tool. Get the <a href="http://www.linqpad.net/"><strong>LinqPad</strong></a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>678</wp:post_id>
		<wp:post_date>2010-09-14 19:55:28</wp:post_date>
		<wp:post_date_gmt>2010-09-14 19:55:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>learning-linq-with-the-linqpad</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="post_tag" nicename="linq"><![CDATA[linq]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1284494128]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1307624718";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[391319863]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>35</wp:comment_id>
			<wp:comment_author><![CDATA[How to quickly get started on LINQ with LINQPad | Savetime On]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://savetimeon.com/blog/how-to-quickly-get-started-on-linq-with-linqpad/</wp:comment_author_url>
			<wp:comment_author_IP>69.163.207.182</wp:comment_author_IP>
			<wp:comment_date>2010-11-14 13:14:59</wp:comment_date>
			<wp:comment_date_gmt>2010-11-14 13:14:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Learn more &#8230; [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>CodeRetreat 2010 @ Wroclaw</title>
		<link>http://www.mfranc.com/uncategorized/coderetreat-2010-wroclaw/</link>
		<pubDate>Sun, 24 Oct 2010 12:00:21 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2010/10/24/coderetreat-2010-wroclaw/</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify">Yesterday, I participated in a great event&#160; <a href="http://coderetreat.wroclaw.pl/">“CodeRetreat” in Wroclaw</a>. It took place in one of the conference rooms in the <a href="http://www.hotelpatio.pl/en">Hote</a>l Patio. It was organized by people from the&#160; <a href="http://groups.google.com/group/wroclaw-jug?pli=1">Wroclaw’s Jug</a> and Kunszt groups. Corporation <a href="http://tieto.pl/">Tieto</a> was the main sponsor. Thank you <a href="http://tieto.pl/">Tieto</a> thank you guys for a great time.</p>  <p align="justify">&#160;</p>  <h4 align="justify"><a href="http://www.coderetreat.com/">CodeRetreat</a> ? What ? </h4>  <p align="justify">&#160;</p>  <p align="justify">You can read a full description of it <a href="http://www.coderetreat.com/how-it-works.html">here</a>. Briefly, It is an&#160; initiative started by the <a href="http://www.coreyhaines.com/">Corey Haines</a> to promote a self learning process in order to be a better “Software Craftsmen”. </p>  <p align="center"><strong>Check the </strong><a href="http://manifesto.softwarecraftsmanship.org/"><strong>Software Craftsmanship Manifesto</strong></a><strong> .</strong></p>  <p align="justify">It is a gathering of&#160; passionate programmers who want to improve their skills and are willing to <a href="https://www.stephencovey.com/7habits/7habits-habit7.php">“sharpen their saw”.</a> While attending you are participating in a couple of programming sessions pairing with someone else. Every pair is working on the <a href="http://www.bitstorm.org/gameoflife/">Game Of Life</a> implementation.&#160; The game of life is&#160; just an example. The idea is not to create “product” but to train and learn by approaching the problem from different angles and try the things for which you don't have time at work. [Because you are constantly fighting with the deadlines]</p>  <p align="justify">&#160;</p>  <p align="justify"><a href="http://lammichalfranc.files.wordpress.com/2010/10/181449414.jpg"><img style="background-image:none;padding-left:0;padding-right:0;display:block;float:none;margin-left:auto;margin-right:auto;padding-top:0;border-width:0;" title="181449414" border="0" alt="181449414" src="http://lammichalfranc.files.wordpress.com/2010/10/181449414_thumb.jpg" width="555" height="345" /></a></p>  <p align="justify">&#160;</p>  <p align="justify">It is always a pleasure to meet people who are so passionate about their job that they are willing to waste their free Saturday to learn, teach and have fun while programming. I was one of the 2 guys with only the .Net experience. There were 61 people and most of them from the “Java World”&#160; so pairing with the java programmers was a nice experience. I had an opportunity to watch great programmers in eclipse, and I have to say WOW!. </p>  <p align="justify">&#160;</p>  <p align="justify">We need more events like that<img style="border-style:none;" class="wlEmoticon wlEmoticon-winkingsmile" alt="Puszczam oczko" src="http://lammichalfranc.files.wordpress.com/2010/10/wlemoticon-winkingsmile.png" /></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>692</wp:post_id>
		<wp:post_date>2010-10-24 12:00:21</wp:post_date>
		<wp:post_date_gmt>2010-10-24 12:00:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>coderetreat-2010-wroclaw</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="coderetreat"><![CDATA[coderetreat]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1287921621]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1302619482";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[409863644]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[emol]]></wp:comment_author>
			<wp:comment_author_email>kupa@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>87.99.27.99</wp:comment_author_IP>
			<wp:comment_date>2010-10-24 14:15:23</wp:comment_date>
			<wp:comment_date_gmt>2010-10-24 14:15:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[nice party you had there ;].]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37</wp:comment_id>
			<wp:comment_author><![CDATA[Tweets that mention CodeRetreat 2010 @ Wroclaw « The Silence Of The LaMs -- Topsy.com]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://topsy.com/lammichalfranc.wordpress.com/2010/10/24/coderetreat-2010-wroclaw/?utm_source=pingback&amp;utm_campaign=L2</wp:comment_author_url>
			<wp:comment_author_IP>208.74.66.43</wp:comment_author_IP>
			<wp:comment_date>2010-10-24 22:18:58</wp:comment_date>
			<wp:comment_date_gmt>2010-10-24 22:18:58</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] This post was mentioned on Twitter by Łukasz Szydło and G Dziemidowicz, Michal Franc. Michal Franc said: CodeRetreat @ Wroclaw http://bit.ly/bxyUle #crwroc [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38</wp:comment_id>
			<wp:comment_author><![CDATA[Code Retreat! | Agile Surfing]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://agilesurfing.pl/2010/agile/code-retreat/</wp:comment_author_url>
			<wp:comment_author_IP>91.205.74.44</wp:comment_author_IP>
			<wp:comment_date>2010-10-25 07:06:27</wp:comment_date>
			<wp:comment_date_gmt>2010-10-25 07:06:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] http://lammichalfranc.wordpress.com/2010/10/24/coderetreat-2010-wroclaw/ [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Testing email logic in .Net with Papercut</title>
		<link>http://www.mfranc.com/uncategorized/testing-email-logic-in-net-with-papercut/</link>
		<pubDate>Sat, 13 Nov 2010 14:37:36 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2010/11/13/testing-email-logic-in-net-with-papercut/</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify"></p>
<p align="justify"><span style="font-size: medium;">Email is a great way to communicate something to the end user asynchronously. You can review the message anytime you want.  As Developers we often need to make some kind of logic which uses emails eg. reminders , alerts etc. While testing it is common to just send an email through smtp server. Receive it , check it etc. </span></p>
<p align="justify"></p>
<p align="justify"><span style="font-size: medium;">But ?</span></p>
<p align="justify"></p>
<p align="justify"><span style="font-size: medium;">What to do when you or your client doesn’t have an smtp server [or your admins doesn’t have time to configure it properly] ? Well there is a simple app which creates such a “testing server”</span></p>
<p align="justify"></p>
<p align="justify"><a href="http://papercut.codeplex.com/"><span style="font-size: medium;"><strong>Papercut</strong></span></a></p>
<p align="justify"></p>

<blockquote>
<p align="justify"><span style="font-size: small;">Papercut is a simplified SMTP server designed to only receive messages (not to send them on) with a GUI on top of it allowing you to see the messages it receives. It doesn't enforce any restrictions on addresses, it just takes the message and allows you see it. It is only active while it is running, and if you want it in the background, just minimize it to the system tray. When it receives a new message, a balloon message will show up to let you know.</span></p>
</blockquote>
<p align="justify"></p>
<p align="justify"></p>
<p align="justify"><a href="http://lammichalfranc.files.wordpress.com/2010/11/picture.jpg"><span style="font-size: medium;"><img style="background-image: none; padding-left: 0; padding-right: 0; display: block; float: none; margin-left: auto; margin-right: auto; padding-top: 0; border-width: 0;" title="Picture" src="http://lammichalfranc.files.wordpress.com/2010/11/picture_thumb.jpg" alt="Picture" width="442" height="262" border="0" /></span></a></p>
<p align="center"><span style="font-size: medium;"><strong>Pic 1. Papercut Options Windows</strong></span></p>
<p align="justify"></p>
<p align="justify"></p>
<p align="justify"><strong><span style="font-size: x-large;">Testing</span></strong></p>
<p align="justify"><span style="font-size: medium;">Let’s test <a href="http://papercut.codeplex.com/"><span style="font-size: medium;"><strong>Papercut</strong></span></a> with a simple app. </span></p>
<p align="justify"></p>

<pre class="lang:default decode:true ">public static void Main(string[] args) 
{ 
    SmtpClient client = new SmtpClient("192.168.0.128",25); 
    MailMessage msg = new MailMessage("michal.franc@mfranc.pl", "test@test.com",  
       "Testing mail", "Testing Body"); 
    client.Send(msg);
}</pre>
&nbsp;
<p align="justify"><span style="font-size: medium;"><a href="http://papercut.codeplex.com/"><span style="font-size: medium;"><strong>Papercut</strong></span></a> works in the background. When the message is received you get a nice popup, and you can check the message.</span></p>
<p align="justify"></p>
<p align="justify"><a href="http://lammichalfranc.files.wordpress.com/2010/11/test.jpg"><span style="font-size: medium;"><img style="background-image: none; padding-left: 0; padding-right: 0; display: block; float: none; margin-left: auto; margin-right: auto; padding-top: 0; border: 0;" title="test" src="http://lammichalfranc.files.wordpress.com/2010/11/test_thumb.jpg" alt="test" width="579" height="239" border="0" /></span></a></p>
<p align="center"><span style="font-size: medium;"><strong>Pic 2. You can check the message.</strong></span></p>
<p align="justify"></p>
<p align="justify"></p>
<p align="justify"></p>
<p align="justify"><span style="font-size: medium;">As you can see it’s a great app which can be useful in many different scenarios.

</span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>700</wp:post_id>
		<wp:post_date>2010-11-13 16:37:36</wp:post_date>
		<wp:post_date_gmt>2010-11-13 14:37:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>testing-email-logic-in-net-with-papercut</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="post_tag" nicename="papercut"><![CDATA[papercut]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1289666258]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1302619480";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[392885231]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>DekstopTodo – Simple Todo list application</title>
		<link>http://www.mfranc.com/uncategorized/dekstoptodo-simple-todo-list-application/</link>
		<pubDate>Sat, 26 Feb 2011 22:42:27 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2011/02/27/dekstoptodo-simple-todo-list-application/</guid>
		<description></description>
		<content:encoded><![CDATA[I am a time management freak. That’s why I was creating application TimeIsMoney. Currently, I m not working on this app. Instead I had another idea based on an earlier project, I m creating a new simpler app. “Desktop Todo”.

&nbsp;

<a href="http://lammichalfranc.files.wordpress.com/2011/02/image.png"><img style="background-image:none;padding-left:0;padding-right:0;display:block;float:none;padding-top:0;border-width:0;margin:0 auto 5px;" title="image" src="http://lammichalfranc.files.wordpress.com/2011/02/image_thumb.png" border="0" alt="image" width="362" height="211" /></a>

&nbsp;

It is a simple app which let you create Todo lists displayed on the desktop. Currently, it supports only task showing and ability to mark the task as a completed. It supports "*.tdl" files from Todo List program. In future releases, it is gonna support its own, simpler format.

Application stays in tray. There isn’t any Main Window. To do this in WPF , I m using the <a href="http://www.hardcodet.net/projects/wpf-notifyicon">WPF NotifyIcon by Philip Sumi</a> check out this great control. You can do a lot of things with it.

&nbsp;

If you want to add new list right click on the Todo List Notify Icon in the tray and select “*.tdl” formatted xml file.

<span style="color:#ff0000;">This is an early version. Make a  copy of your “*.tdl. file before trying it out !!.</span>

<a href="http://lammichalfranc.files.wordpress.com/2011/02/image1.png"><img style="background-image:none;padding-left:0;padding-right:0;display:block;float:none;padding-top:0;border-width:0;margin:0 auto 5px;" title="image" src="http://lammichalfranc.files.wordpress.com/2011/02/image_thumb1.png" border="0" alt="image" width="223" height="105" /></a>

&nbsp;

Features in this early release:

- You can open <strong>“*.tdl”</strong> files. Check out the <a href="http://www.codeproject.com/KB/applications/todolist2.aspx">Todo List</a>.

- You can Complete Tasks.

- You can Filter out tasks which are due in this : Day , Week (DWA) panel

- You can add multiple projects.

- You can hide list by clicking on the project name.

- You can delete list.

&nbsp;

Future features :

- integration with visual studio

- special color of task if it is over due

- time tracking

- complex filtering

- ability to attach files to the tasks (eg. on click you can open a pdf file like ebook)

&nbsp;

&nbsp;

<a href="https://github.com/LaMik/TimeIsMoney/tree/master/TimeIsMoney/DekstopTodo">Source Code</a>

Download (Soon :P)

If you have any ideas feel free to share them with me. Mail me or post a comment.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>711</wp:post_id>
		<wp:post_date>2011-02-27 00:42:27</wp:post_date>
		<wp:post_date_gmt>2011-02-26 22:42:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dekstoptodo-simple-todo-list-application</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="post_tag" nicename="time-management"><![CDATA[time management]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="wpf-2"><![CDATA[wpf]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1298767347]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1303203914";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[351956719]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>118</wp:comment_id>
			<wp:comment_author><![CDATA[ProgTByc]]></wp:comment_author>
			<wp:comment_author_email>regstor@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.141.40.211</wp:comment_author_IP>
			<wp:comment_date>2013-03-20 19:35:00</wp:comment_date>
			<wp:comment_date_gmt>2013-03-20 18:35:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi there,
What is the best way for making your own ToDo List application? WPF, MS Office Access, something else? I have a little bit experience with VBA codes. Till now I used Excel with Macro VBA codes for my own ToDo list "application".]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[836240846]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>119</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>83.17.97.234</wp:comment_author_IP>
			<wp:comment_date>2013-03-22 13:15:00</wp:comment_date>
			<wp:comment_date_gmt>2013-03-22 12:15:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey,
Hmm You want to make your own app only for yourself ? 

Tbh there is no "best" way. You need to evaluate whats the best way for you. Whats most important is to choose how you are going to define your todo routine. With nice routine that gives you feeling of joy and accomplishment you can use every tool you feel is comfortable for you.


For instance, I am using mostly Gmail with labels and tags, some stuff is also stored on Wunderlist, Trello, Evernote, Read It Later apps.



If you want to develop your own app then:
1. Check some of the available apps before doing something from the scratch. This can be a huge time investment.
2. If you really want to do this then, use the skills and platforms that you already know and then create something. If you know VBA Macros and excel then this can be your best choice.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>118</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[836240846]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[838370833]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>T4 - Text Template Transformation Toolkit CvsReader</title>
		<link>http://www.mfranc.com/uncategorized/t4-text-template-transformation-toolkit-cvsreader/</link>
		<pubDate>Tue, 01 Mar 2011 00:19:38 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2011/03/01/t4-text-template-transformation-toolkit-cvsreader/</guid>
		<description></description>
		<content:encoded><![CDATA[While watching <a href="http://channel9.msdn.com/Blogs/matthijs/ASPNET-MVC-2-Ninja-Black-Belt-Tips-by-Scott-Hanselman">Scot Hansleman presentation about MVC</a> I discovered great feature in <strong>Visual Studio 2010</strong>. T4 is an code generation engine. It translates template files (“*.tt”) ,  using scripts created in <strong>C# or VB ,  to C# , VB , T-SQl</strong> , Txt files etc.

You can generate a lot of different things :

- Dynamic classes which are changing based on the settings file

- CRUD procedures which are generated dynamically

- Generated Unit Tests (that would be cool)

I have made a simple template which generates Class that automates reading the <strong>CVS</strong> files. It’s a simple project created just 4fun.

CVS format file :
<pre class="lang:default decode:true">ID,Nazwa,Cena,Ilosc,Data,Imie 
int,string,decimal,int,DateTime,string 
1,Truskawki,100,1,10-10-2010,Michal 
2,Pomarancze,200,2,11-02-2011,Stefan</pre>
First line defines column names and second line specifies their types.
<h4>Template</h4>
Templates are stored in “*.tt” files.  Every “*.tt” files starts with a “template” directive containing options. You can specify language used to analyze file . You also need to load the assemblies used by the script blocks in template. I just need <strong>System </strong>assembly for <strong>IO</strong> operations.

With <strong>Visual Studio 2010</strong> there is a special item type “Text Template”. When you create this item VS will ask you if you want to run the template. T4 engine generates new files every time you save "changes to the “*.tt” file.
<pre class="lang:default decode:true">&lt;#@ template debug="false" hostspecific="true" language="C#" #&gt; 
&lt;#@ assembly name="System" #&gt;</pre>
<h4>Simple Class</h4>
Let’s create a simple container class which stores data defined in the <strong>CVS</strong> . Column name and type is defined in the first two lines.
<pre class="lang:default decode:true">&lt;# 
   string columns = null; 
   string types = null; 
   System.IO.StreamReader re = null; 
   string absolutePath = Host.ResolvePath("Data.cvs"); 
   if(System.IO.File.Exists(absolutePath)) 
   { 
    re = System.IO.File.OpenText(absolutePath);

    columns = re.ReadLine();

    types = re.ReadLine(); 
   } 
#&gt;</pre>
This Script loads first two lines from a file and loads them into the <strong>columns</strong> and <strong>types</strong> string. As you can see this code is in “C#”.  Every script in the template must be within the “&lt;# #&gt;”.

With column names and types we can start the container class generation. Let’s call it “<strong>CvsData</strong>”.
<pre class="lang:default decode:true">using System; 
using System.Collections.Generic; 
public class CvsData 
{ 
&lt;# 
   string [] columntype = types.Split(','); 
   int counter = 0; 
   foreach(string s in columns.Split(',')) 
   { 
    Write("tpublic " + columntype[counter] + " " + s + " {get;set;}n"); 
    counter++; 
   } 
#&gt; 
}</pre>
<p class="csharp" style="font-family: consolas,; font-size: small;"><span style="font-family: arial;">Code outside the <strong>“&lt;# #&gt;”</strong> scope is treated just like simple text. Inside script I m using the Write() function to create text. For each column script generates property.</span></p>

<pre class="lang:default decode:true">Write("tpublic " + columntype[counter] + " " + s + " {get;set;}n");</pre>
Generated “*.cs” file.
<pre class="lang:default decode:true">using System; 
using System.Collections.Generic; 
public class CvsData 
{ 
   public int ID {get;set;} 
   public string Nazwa {get;set;} 
   public decimal Cena {get;set;} 
   public int Ilosc {get;set;} 
   public DateTime Data {get;set;} 
   public string Imie {get;set;} 
}</pre>
Now I can compile this file and use the CvsData class.
<h4>Simple Reader</h4>
I just want to read data and return it  as a List with CvsData objects.
<pre class="lang:default decode:true">public static class CvsReader 
{ 
   public static List&lt;CvsData&gt; LoadData(string filePath) 
   { 
      List&lt;CvsData&gt; returnData = new List&lt;CvsData&gt;(); 
      if(System.IO.File.Exists(filePath)) 
      { 
         System.IO.StreamReader re = System.IO.File.OpenText(filePath); 
         string line = String.Empty; 
         //Miss first two lines 
         re.ReadLine(); 
         re.ReadLine(); 
         while((line = re.ReadLine()) != null) 
         { 
            string [] values = line.Split(','); 
            returnData.Add(new CvsData(){ 
            &lt;# 
            counter = 0; 
            foreach(string s in columns.Split(',')) 
            { 
              Write("tttttt"+ s + " ="); 
              if(!columntype[counter].Contains("string")) 
              { 
                Write(columntype[counter]+".Parse"); 
              } 
              Write("(values["+counter+"]),n"); 
              counter++; 
            } 
            #&gt; 
          }); 
      } 
      re.Close(); 
    } 
  return returnData; 
} 
}</pre>
<p class="csharp" style="font-family: consolas,; font-size: small;"><span style="font-family: arial;">Generated reader:</span></p>

<pre class="lang:default decode:true ">public static class CvsReader 
{ 
    public static List&lt;CvsData&gt; LoadData(string filePath) 
    { 
       List&lt;CvsData&gt; returnData = new List&lt;CvsData&gt;(); 
       if(System.IO.File.Exists(filePath)) 
       { 
          System.IO.StreamReader re = System.IO.File.OpenText(filePath); 
          string line = String.Empty; 
          //Miss first two lines 
          re.ReadLine(); 
          re.ReadLine(); 
          while((line = re.ReadLine()) != null) 
          { 
            string [] values = line.Split(','); 
            returnData.Add(new CvsData(){ 
               ID =int.Parse(values[0]), 
               Nazwa =(values[1]), 
               Cena =decimal.Parse(values[2]), 
               Ilosc =int.Parse(values[3]), 
               Data =DateTime.Parse(values[4]), 
               Imie =(values[5]), 
            }); 
         } 
         re.Close(); 
        } 
      return returnData; 
    } 
}</pre>
&nbsp;
<div class="csharp" style="font-family: consolas,;"><span style="font-family: arial;">This is a very simple example. Created just for fun and to demonstrate basics of T4, Check the </span><a href="http://www.olegsych.com/2007/12/text-template-transformation-toolkit/"><span style="font-family: arial;">Oleg Sych</span></a><span style="font-family: arial;"> site for more info and tutorials. He has created a bunch of great materials about T4. </span></div>
I will definitely spend more time playing/learning the T4 engine.

Code was generated with the <a href="http://qbnz.com/highlighter/">GeSHI</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>714</wp:post_id>
		<wp:post_date>2011-03-01 00:19:38</wp:post_date>
		<wp:post_date_gmt>2011-03-01 00:19:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>t4-text-template-transformation-toolkit-cvsreader</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="visual-studio"><![CDATA[visual studio]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1298938780]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306416578";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[349208382]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>One night in Microsoft</title>
		<link>http://www.mfranc.com/uncategorized/one-night-in-microsoft/</link>
		<pubDate>Sun, 06 Mar 2011 16:50:10 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2011/03/06/one-night-in-microsoft/</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify">.Net group from Wroclaw University of Technology was invited by Microsoft to the event in their HQ in Warsaw . It was a first gathering of .Net groups from our country. Almost 200+ students showed up. Microsoft had problems with overcrowded hall but it was ok. As name suggests it was a all night event.</p>  <p align="justify">It was all about fun :</p>  <ul>   <li>     <div align="justify">Couple of great presentations about Career in IT , WP7 Development and new Features in IE 9. </div>   </li>    <li>     <div align="justify">Lot of contest. Chees games , Guitar Hero Contest , Speaker Idol , Karaoke contest. Of course everything with nice prizes. </div>   </li> </ul>  <p align="justify">MS invests lot of resources into academic communities. This is a smart move. If a young developer or IT pro starts career on MS Stack , there is a big probability that he will stay here.In a long run this means more business and money for Microsoft. </p>  <p align="justify">&#160;</p>  <p align="justify"><a href="http://lammichalfranc.files.wordpress.com/2011/03/image.png"><img style="background-image:none;padding-left:0;padding-right:0;display:block;float:none;padding-top:0;border-width:0;margin:0 auto 5px;" title="image" border="0" alt="image" src="http://lammichalfranc.files.wordpress.com/2011/03/image_thumb.png" width="396" height="321" /></a></p>  <p align="justify">&#160;</p>  <p align="justify">Great event we had a lot of fun especially on “Kinect” and Xbox. We also tried MS Surface.I really liked the friendly&#160; atmosphere in the MS. It’s a pity that I wont be able to attend next year edition.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>738</wp:post_id>
		<wp:post_date>2011-03-06 18:50:10</wp:post_date>
		<wp:post_date_gmt>2011-03-06 16:50:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>one-night-in-microsoft</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="microsoft"><![CDATA[microsoft]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1299437412]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306416114";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>tagazine-media</wp:meta_key>
			<wp:meta_value><![CDATA[a:7:{s:7:"primary";s:59:"http://lammichalfranc.files.wordpress.com/2011/03/image.png";s:6:"images";a:2:{s:59:"http://lammichalfranc.files.wordpress.com/2011/03/image.png";a:6:{s:8:"file_url";s:59:"http://lammichalfranc.files.wordpress.com/2011/03/image.png";s:5:"width";s:3:"773";s:6:"height";s:3:"608";s:4:"type";s:5:"image";s:4:"area";s:6:"469984";s:9:"file_path";s:0:"";}s:65:"http://lammichalfranc.files.wordpress.com/2011/03/image_thumb.png";a:6:{s:8:"file_url";s:65:"http://lammichalfranc.files.wordpress.com/2011/03/image_thumb.png";s:5:"width";s:3:"396";s:6:"height";s:3:"321";s:4:"type";s:5:"image";s:4:"area";s:6:"127116";s:9:"file_path";s:0:"";}}s:6:"videos";a:0:{}s:11:"image_count";s:1:"2";s:6:"author";s:7:"8566791";s:7:"blog_id";s:7:"8265440";s:9:"mod_stamp";s:19:"2011-03-06 18:50:10";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[407138747]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>40</wp:comment_id>
			<wp:comment_author><![CDATA[bartex]]></wp:comment_author>
			<wp:comment_author_email>bartex88@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://donthaveone</wp:comment_author_url>
			<wp:comment_author_IP>81.190.210.59</wp:comment_author_IP>
			<wp:comment_date>2011-03-06 22:08:35</wp:comment_date>
			<wp:comment_date_gmt>2011-03-06 22:08:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Why are you smiling under this, this IE9 poster :p.
I hope you aren't using it? :)...btw., show more photos!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>41</wp:comment_id>
			<wp:comment_author><![CDATA[LaM]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>194.146.216.246</wp:comment_author_IP>
			<wp:comment_date>2011-03-07 13:25:08</wp:comment_date>
			<wp:comment_date_gmt>2011-03-07 13:25:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nah i'm a Chrome fan ;] More photos soon on FB.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>40</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>42</wp:comment_id>
			<wp:comment_author><![CDATA[trn]]></wp:comment_author>
			<wp:comment_author_email>trn_przenoska@o2.pl</wp:comment_author_email>
			<wp:comment_author_url>http://trn.studentlive.pl</wp:comment_author_url>
			<wp:comment_author_IP>78.8.244.36</wp:comment_author_IP>
			<wp:comment_date>2011-03-12 12:11:10</wp:comment_date>
			<wp:comment_date_gmt>2011-03-12 12:11:10</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I use IE9 beta, and I have to tell you it's really OK. of course it's not my main browser but I opened many sites in IE9 and FFox and there was no difference so I think our parents or grandparents will be pleased to use it. especially it's buttons free. there's only navigation buttons that's it - for people who want simply browsing it's really the best - and windows will install it without any users effort. other broswers you have to download from theirs webpages. Not all users can do that ;) (My mum for ex.)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>40</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>43</wp:comment_id>
			<wp:comment_author><![CDATA[LaM]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>194.146.216.246</wp:comment_author_IP>
			<wp:comment_date>2011-03-12 16:33:29</wp:comment_date>
			<wp:comment_date_gmt>2011-03-12 16:33:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ie9 is only compatible with win 7 and vista. Windows 7 sold 240M copies in one year but Win XP still has 70% of market . Ms is missing a lot of customers right now.

And yes IE9 is a huge step forward for MS.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>42</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>44</wp:comment_id>
			<wp:comment_author><![CDATA[trn]]></wp:comment_author>
			<wp:comment_author_email>trn_przenoska@o2.pl</wp:comment_author_email>
			<wp:comment_author_url>http://trn.studentlive.pl</wp:comment_author_url>
			<wp:comment_author_IP>78.8.244.36</wp:comment_author_IP>
			<wp:comment_date>2011-03-12 16:39:43</wp:comment_date>
			<wp:comment_date_gmt>2011-03-12 16:39:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I did not know about win 7 and vista thing. That's huge lost for IE9 but honestly... MS don't have too many profits from people using theirs browser. It's only new gadget in windows that's all. Besides... IE is still the most often used browser no matter which version.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Generics and Object Casting– Boxing , Unboxing</title>
		<link>http://www.mfranc.com/programming/generics-and-object-casting-boxing-unboxing/</link>
		<pubDate>Sun, 20 Mar 2011 15:23:38 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2011/03/20/generics-and-object-casting-boxing-unboxing/</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify">There are multiple scenarios in which we need to create generic classes for different objects. In this case we have two options. Either we can create generic class and specify the type/types of the object in the code  or ,  we can create a class operating on the System.Object types which are the base for every object / class in the framework.</p>
<p align="justify">If we have two options available then  the question is which one is better ?</p>
<p align="justify">To test both approaches , I created a simple logic which performs assignment and some kind of operation which returns value. This logic is encapsulated in two classes. <strong>ClassGeneric</strong> is built with generics built in .Net .You can see that type is represented by <strong>“U”</strong> letter. <strong>ClassObject</strong> is based on casting to System.Object.</p>
<p align="justify"></p>

<h2 align="justify"><span>Code</span>:</h2>
<pre class="lang:default decode:true">   class ClassGeneric&lt;U&gt; 
    { 
        U test;

        public ClassGeneric(U value) 
        { 
            test = value; 
        }

        public void Operation() 
        { 
            U t = test; 
        } 
    }

    class ClassObject 
    { 
        Object test;

        public ClassObject(Object value) 
        { 
            test = value; 
        }

        public void Operation() 
        { 
            int t = (int)test; 
        } 
    }</pre>
<h2 align="justify"><span>Test </span>:</h2>
<p align="justify">Now lets perform a simple test by creating instances of both classes and performing operation. Stopwatch will be used to check performance.</p>

<pre class="lang:default decode:true ">       static Stopwatch sw = new Stopwatch();

        static void Main(string[] args) 
        { 
            sw.Start(); 
            for (int i = 0; i &lt; 10000000; i++) 
            { 
                new Labs.ClassGeneric&lt;int&gt;(1).Operation(); 
            } 
            sw.Stop();

            Console.WriteLine(sw.ElapsedMilliseconds);

            sw.Reset(); 
            sw.Start(); 
            for (int i = 0; i &lt; 10000000; i++) 
            { 
                new Labs.ClassObject((object)1).Operation(); 
            } 
            sw.Stop();

            Console.WriteLine(sw.ElapsedMilliseconds);

            Console.ReadLine(); 
        }</pre>
&nbsp;
<h2 align="justify"><span>Result </span>:</h2>
<p align="justify"><span><strong>Generics 471k</strong> ticks  <strong>-  Objects  710k</strong> ticks</span></p>
<p align="justify"><span><strong>Generics 212</strong> ms  <strong>-</strong>  <strong>Objects 343</strong> ms</span></p>
<p align="justify"></p>

<h2 align="justify"><span>Why there is a difference ?</span></h2>
<p align="justify">Generics are defined on the runtime.  .Net Framework based on the specified type in the code for example  (Queue&lt;int&gt;) creates a class with the type and stores reference to it. This operation is performed once on the start by the JIT-er (Just in time compiler). This operation is performed once so there is a minimal performance loss.</p>
<p align="justify">In case of System.Object class when casting from and to int we are performing <strong>Boxing</strong> and <strong>Unboxing</strong> operation.</p>
<p align="justify">Boxing is performed every time we are casting Value Type to the reference Type. Boxing operation wraps our Value Type in a class deriving from the System.Object. This operation requires some cpu work. Same thing applies for the Unboxing operation which is performed when casting from Reference Type to the Value Type.</p>
<p align="justify">In this example I am casting int to Object type 1000000 times. This is the cause of the difference in time / performance. Generic classes does not require additional operations.</p>

<h2 align="justify"><span>Boxing , Unboxing and generic interfaces</span></h2>
<p align="justify">Understaing when your code perfmors boxing and unboxing is  really important. Check this example. In .Net we can implement various interfaces which are used in the Framework. Some of them are generic. We can define which type will be used.</p>
<p align="justify">Here I am implementing IComparable interface , which is usefull when you want to perform Sort operation on the Collection containing your custom Class.</p>
<p align="justify">First Class uses the Generic Interface.</p>

<pre class="lang:default decode:true crayon-selected">    class ClassSort : IComparable&lt;ClassSort&gt; 
    { 
        public int A {get;set;}

        #region IComparable&lt;int&gt; Members

        public int CompareTo(ClassSort other) 
        { 
          throw new NotImplementedException(); 
        }
        #endregion 
    }</pre>
<p align="justify">Second class uses default Interface.</p>

<pre class="lang:default decode:true">    class ClassSortOne : IComparable 
    { 
        public int A {get;set;}

        #region IComparable Members

        public int CompareTo(object obj) 
        { 
            throw new NotImplementedException(); 
        }

        #endregion 
    }</pre>
<p align="justify">As you can see IComparable without generic type forces boxing when comparing objects beacuase we have to cast the objects. CompareTo() method in example with default interface uses object as a parameter while generic interface implements method with specified class as a parameter. Interface with specified generic type doesn’t need boxing and it is faster.</p>
<p align="justify"></p>

<h2 align="justify"><span>Conclusion:</span></h2>
<p align="justify">Use generic classes as often as you can. Especially when making a lot of operations with them. Simple casting which causes boxing and unboxing process consumes a lot of processor time.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>740</wp:post_id>
		<wp:post_date>2011-03-20 15:23:38</wp:post_date>
		<wp:post_date_gmt>2011-03-20 15:23:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>generics-and-object-casting-boxing-unboxing</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="net"><![CDATA[.net]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1300634619]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306284597";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[351874065]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Yey 70-536 passed</title>
		<link>http://www.mfranc.com/uncategorized/yey-70-536-passed/</link>
		<pubDate>Sun, 20 Mar 2011 20:53:03 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2011/03/20/yey-70-536-passed/</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I passed my first ms exam <a href="http://www.microsoft.com/learning/en/us/Exam.aspx?ID=70-536&amp;Locale=en-us">Microsoft .NET Framework – Application Development Foundation.</a> Some questions were simple and some quite difficult , with a lot of details. I spent quite some time to prepare. Some concepts like <strong>Code Access Security</strong> or <strong>App Domains</strong> , well this was something&#160; new to me.</p>  <p>This is just the beginning . Next step 70-562.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>741</wp:post_id>
		<wp:post_date>2011-03-20 22:53:03</wp:post_date>
		<wp:post_date_gmt>2011-03-20 20:53:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>yey-70-536-passed</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="ms-exam"><![CDATA[ms exam]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1300661586]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306792202";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[384283763]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>FluentNHibernate , NHibernate–Notes</title>
		<link>http://www.mfranc.com/uncategorized/fluentnhibernate-nhibernatenotes/</link>
		<pubDate>Wed, 30 Mar 2011 22:30:36 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2011/03/30/fluentnhibernate-nhibernatenotes/</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify">I m currently implementing some project using the NHibernate. I dont like the mappongs stored in xml files so I am using FluentNhiberante.</p>
<p align="justify"></p>

<h5 align="justify">1. Mapping Whole Assembly.</h5>
<p align="justify">Before discovering this feature , I created one line foreach mapping defined in the assembly. You can replace this “useless” code with the procedure to map whole assembly. FluentNH  will scan the assembly and look for classes inheriting from ClassMap&lt;&gt;</p>

<pre class="lang:default decode:true"> return Fluently.Configure().
    Database(MsSqlConfiguration.MsSql2008.ConnectionString("connstring"))
      .Mappings(x =&gt; x.FluentMappings.AddFromAssembly(System.Reflection.Assembly.GetExecutingAssembly()))
      .ExposeConfiguration(func)
      .BuildSessionFactory();</pre>
&nbsp;
<h5 align="justify">2. not null fields</h5>
<p align="justify">If you want to create some fields in the DB as “not null”. use the Not.Nullable() sequence.</p>

<pre class="lang:default decode:true">Map(x =&gt; x.IDCourse).Not.Nullable();</pre>
&nbsp;
<h5 align="justify">3. Reseting Schema for Testing</h5>
<p align="justify">I don’t know if this is a good approach but when , I am working with NH i create an instance of test database with sample data. Everytime , I am running tests i m reseting schema , filling DB with sample data and then database is erased from memory (SQLite) or the server.</p>
<p align="justify"><strong>Session Factory Class</strong></p>
<p align="justify">In my session factory Class i have methods to reset and update Schema</p>
<p align="justify"></p>

<pre class="lang:default decode:true crayon-selected"> public static class SessionFactory
{
    public static ISession OpenSession()
    {
        return GetSessionFactory().OpenSession();
    }
     private static ISessionFactory GetSessionFactory()
     {
        if (_sessionFactory == null)
        {
            _sessionFactory = CreateSessionFactory(UpdateSchema);
         }
         return _sessionFactory;
     }
        private static ISessionFactory _sessionFactory;

        public static void ResetSchema()
        {
            CreateSessionFactory(ResetSchema);
        }

        private static ISessionFactory CreateSessionFactory(Action&lt;Configuration&gt; func)
        {

          return Fluently.Configure().
               Database(MsSqlConfiguration.MsSql2008.ConnectionString
               ("connstring"))
               .Mappings(x =&gt; x.FluentMappings.AddFromAssembly(System.Reflection.Assembly.GetExecutingAssembly()))
               .ExposeConfiguration(func)
               .BuildSessionFactory();
        }
        private static void UpdateSchema(Configuration config)
        {
            new SchemaUpdate(config).Execute(true, true);
        }

        public static void ResetSchema(Configuration config)
        {
            new SchemaExport(config).Create(true, true);
        }</pre>
&nbsp;
<p align="justify"><strong>4. Generic Repository</strong></p>
<p align="justify">I am the fan of the repositories used to perform all the CRUD and complex query operations. In the code I have a base repository class and complex repositories deriving from the base class.</p>

<pre class="lang:default decode:true">public  class Repository&lt;T&gt; : IRepository&lt;T&gt;
        where T : class
    {
        public T GetById(int id)
        {
            T klient;

            klient = GetByFilter("Id",id).FirstOrDefault();

            return klient;
        }

        public IList&lt;T&gt; GetByFilter(string parameterName, object value)
        {
            IList&lt;T&gt; returnedList = null;
            using (var session = SessionFactory.OpenSession())
            {
                returnedList = session.CreateCriteria(typeof(T)).Add(Expression.Eq(parameterName, value)).List&lt;T&gt;();
                session.Flush();
            }
            return returnedList;
        }

        protected IList&lt;T&gt; GetByQuery(string query)
        {
            IList&lt;T&gt; returnedList = null;
            using (var session = SessionFactory.OpenSession())
            {
                returnedList = session.CreateQuery(query).List&lt;T&gt;();
                session.Flush();
            }
            return returnedList;
        }

      .....

    }</pre>
<p align="justify">Simple Repository used for most CRUD operations.</p>
<p align="justify">For more complex queries , I just create a new class deriving from the base one.</p>

<pre class="lang:default decode:true">    public class KlientRepository : Repository&lt;Klient&gt;
    {
        public Klient GetByImieNazwisko(string imie, string nazwisko)
        {
            return GetByQuery(String.Format("from Klient k where k.Imie = '{0}' and k.Nazwisko = '{1}'",imie,nazwisko)).FirstOrDefault();
        }

        public IList&lt;Klient&gt; GetByRodzaj(string rodzaj)
        {
            return GetByQuery(String.Format("from Klient k where k.Rodzaj.Rodzaj = '{0}' ", rodzaj)).ToList();

        }
    }</pre>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>742</wp:post_id>
		<wp:post_date>2011-03-30 22:30:36</wp:post_date>
		<wp:post_date_gmt>2011-03-30 22:30:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fluentnhibernate-nhibernatenotes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="fluentnh"><![CDATA[FluentNH]]></category>
		<category domain="post_tag" nicename="nhibernate"><![CDATA[NHibernate]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1301524237]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306792202";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[352115026]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>NUnit Test Visual Studio Snippet</title>
		<link>http://www.mfranc.com/uncategorized/nunit-test-visual-studio-snippet/</link>
		<pubDate>Wed, 06 Apr 2011 04:45:05 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2011/04/06/nunit-test-visual-studio-snippet/</guid>
		<description></description>
		<content:encoded><![CDATA[I am using NUnit framework to write Unit Tests. To simplify my work I have a simple snippet which generates test method.
<pre class="lang:default decode:true">[Test]
public void TestName()
{
   #region Arrange
   #endregion 

   #region Act

   Assert.Fail();

   #endregion

   #region Assert
   #endregion
}</pre>
As you can see there are regions for different actions.

Here is a code for this snippet. If you want to use it. Just copy paste it to the xml file and name it with extensions “*.snippet”. Then in Visual Studio go to (Tools –&gt; Code Snippet Manager) and import this file.
<pre class="lang:default decode:true ">&lt;CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2010/CodeSnippet"&gt;
    &lt;CodeSnippet Format="1.0.0"&gt;
        &lt;Header&gt;
            &lt;Title&gt;
                NUnit Test
            &lt;/Title&gt;
        &lt;/Header&gt; 
        &lt;Snippet&gt;
            &lt;Declarations&gt;
                &lt;Literal&gt;
                    &lt;ID&gt;TestName&lt;/ID&gt;
                    &lt;ToolTip&gt;Replace with TestName.&lt;/ToolTip&gt;
                    &lt;Default&gt;TestName&lt;/Default&gt;
                &lt;/Literal&gt;
            &lt;/Declarations&gt;
            &lt;Code Language="CSharp"&gt;
                &lt;![CDATA[
                [Test]
                public void $TestName$()
                {
                    #region Arrange
                    #endregion

                    #region Act

                    Assert.Fail();

                    #endregion

                    #region Assert
                    #endregion
                }
                ]]&gt;
            &lt;/Code&gt;
       &lt;/Snippet&gt;
    &lt;/CodeSnippet&gt;
&lt;/CodeSnippets&gt;</pre>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>743</wp:post_id>
		<wp:post_date>2011-04-06 06:45:05</wp:post_date>
		<wp:post_date_gmt>2011-04-06 04:45:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nunit-test-visual-studio-snippet</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="nunit"><![CDATA[NUnit]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="visual-studio"><![CDATA[visual studio]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1302072306]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306792201";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[349916390]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>FluentNHibernate–Testing</title>
		<link>http://www.mfranc.com/uncategorized/fluentnhibernatetesting/</link>
		<pubDate>Sat, 23 Apr 2011 18:05:14 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2011/04/23/fluentnhibernatetesting/</guid>
		<description></description>
		<content:encoded><![CDATA[<h1 align="justify"></h1>
<h3 align="justify">FluentNHibernate</h3>
<p align="justify"></p>
<p align="justify">FluentNhibernate framework provides easy way to define mappings in NHibernate. You don’t need to create complex xml files , instead you can use C# syntax and write the code in the “.cs” file. FluentNH generates cfg from it.</p>
<p align="justify">Just to show you how this is simple check this class mapping,</p>

<pre class="lang:default decode:true">        public GroupModelMap()
        {
            Id(x =&gt; x.ID);
            Map(x =&gt; x.GroupName).Not.Nullable();

            //One
            References(x =&gt; x.GroupType).Not.LazyLoad();

            //Many
            HasMany(x=&gt;x.Users);           
        }</pre>
<p align="justify">Mapped class looks like this :</p>

<pre class="lang:default decode:true">    public class GroupModel 
    {
        public virtual int ID { get; private set; }
        public virtual string GroupName { get; set; }

        public virtual GroupTypeModel GroupType { get; set; }
        public virtual IList&lt;ProfileModel&gt; Users { get; set; }

    }</pre>
<p align="justify">Every property needs to be marked as virtual and every mapped class needs ID property. It’s just simple as that. There are many options you can use. But I wont go into details in this post. If you want to try it just check the <a href="http://fluentnhibernate.org/">site</a>.</p>
<p align="justify">In this post ,I want to show you other aspects of FluentNHibernate , that can make your life easier. FluentNH is not only about mappings anymore it provides lots of more functionalities.</p>
<p align="justify"></p>

<h3 align="justify">In Memory Testing</h3>
<p align="justify"></p>
<p align="justify">When testing NHibernate layer , it is a good way to use database stored in memory. Unit tests should be isolated , so by running tests on Database Engine you break this rule.</p>
<p align="justify">For InMemory DB  , I  prefer the SqlLite database engine. Its quite good and FluentNH has a good “out of box” support for it. Creating InMemory DB can be a painful experience. You can encounter various problems and one of them is session management. With InMemory DB when session is closed data is deleted from memory and you don’t have access to data. In one of the projects , I have implemented my own mechanism based on the <a href="http://www.maciejaniserowicz.com/">Maciej Aniserowicz samples</a>. It worked fine, but also required a lot of testing and improving.</p>
<p align="justify">Fortunately for us Fluent NH provides mechanism for creating the session object leaving you problem of implementing the tests. We just need to provide the SqlLite configuration.</p>
<p align="justify">Something like :</p>

<pre class="lang:default decode:true ">_configuration = Fluently.Configure()
                  .Database(() =&gt; SQLiteConfiguration.Standard.InMemory().ShowSql())
                  .Mappings(x =&gt; x.FluentMappings.AddFromAssembly(typeof(ProfileModel).Assembly))
                  .BuildConfiguration();</pre>
&nbsp;
<p align="justify">Then you can create session and use it for tests.</p>

<pre class="lang:default decode:true">var sessionSource = new SingleConnectionSessionSourceForSQLiteInMemoryTesting(configuration);

ISession session = sessionSource.CreateSession()</pre>
<h3 align="justify">Testing Nhibernate Mappings</h3>
<p align="justify">In unit test world with ORM layers it is good idea to test mappings. Writing your own tests can be a mundane and boring task. FluentNHibernate provides  a way to test it quite simply.</p>
<p align="justify">You can use the PersistenceSpecification class</p>

<pre class="lang:default decode:true">new PersistenceSpecification&lt;ForumModel&gt;(session, new IDEqualityComparer())
       .CheckProperty(c =&gt; c.Name, "test")
       .CheckProperty(c =&gt; c.Author, "test")
       .CheckList&lt;TopicModel&gt;(c =&gt; c.Topics,
                   new List&lt;TopicModel&gt;() 
                        { 
                            new TopicModel(){ Text="test"}
                        }
                   )
        .VerifyTheMappings();</pre>
<p align="justify">This class performs:</p>

<ul>
	<li>
<div align="justify">create ForumModel instance</div></li>
	<li>
<div align="justify">insert this instance to DB</div></li>
	<li>
<div align="justify">retrieve it</div></li>
	<li>
<div align="justify">and verify if returned data is correct</div></li>
</ul>
<p align="justify">Besides the session parameter this class can take Comparer class which defines the your own comparison idea .</p>
<p align="justify">Look at this example. In one of the projects , I am performing comparison based on the unique ID to check if Reference is correct.</p>

<pre class="lang:default decode:true  crayon-selected">    public class IDEqualityComparer : IEqualityComparer
    {
        new public bool Equals(object x, object y)
        {
            #region Comparer

            if (x == null || y == null)
            {
                return false;
            }
            if (x is IModel &amp;&amp; y is IModel)
            {
                return ((IModel)x).ID == ((IModel)y).ID;
            }

            return x.Equals(y); 
            #endregion
        }

        public int GetHashCode(object obj)
        {
            throw new NotImplementedException();
        }
    }</pre>
<p align="justify">IModel is used here to shorten the code. It contains only ID property. Every model class implements it.</p>
<p align="justify">More info</p>
<p align="justify"><a href="http://wiki.fluentnhibernate.org/Persistence_specification_testing">http://wiki.fluentnhibernate.org/Persistence_specification_testing</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>747</wp:post_id>
		<wp:post_date>2011-04-23 20:05:14</wp:post_date>
		<wp:post_date_gmt>2011-04-23 18:05:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fluentnhibernatetesting</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="fluentnhibernate"><![CDATA[FluentNHibernate]]></category>
		<category domain="post_tag" nicename="nhibernate"><![CDATA[NHibernate]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1303589117]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306359649";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[360488913]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>77</wp:comment_id>
			<wp:comment_author><![CDATA[Guest]]></wp:comment_author>
			<wp:comment_author_email>zazaza@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>194.117.242.6</wp:comment_author_IP>
			<wp:comment_date>2012-07-31 07:04:00</wp:comment_date>
			<wp:comment_date_gmt>2012-07-31 07:04:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What does ProfileModel mean? what is reffers to?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[604228052]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>78</wp:comment_id>
			<wp:comment_author><![CDATA[MichalFranc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>83.26.49.191</wp:comment_author_IP>
			<wp:comment_date>2012-07-31 07:25:00</wp:comment_date>
			<wp:comment_date_gmt>2012-07-31 07:25:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It is just a data container class i used for tests. You can replace it with your own empty class :) for tests]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>77</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[604228052]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[604237271]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Asp .Net Mvc [Authorize] over Wcf – Role Check</title>
		<link>http://www.mfranc.com/uncategorized/asp-net-mvc-authorize-over-wcf-role-check/</link>
		<pubDate>Sun, 01 May 2011 14:27:51 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2011/05/01/asp-net-mvc-authorize-over-wcf-role-check/</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify">In Asp.Net MVC you can attach various attributes to the controllers actions. One of them is <strong><a href="http://msdn.microsoft.com/en-us/library/system.web.mvc.authorizeattribute.aspx">Authorize</a></strong> which is used to managed access.</p>

<pre class="lang:default decode:true">[Authorize]
public ActionResult Index()
{
    var profile = _service.GetByName(UserName);
    return RedirectToAction("Details", new { id = profile.ID });
}</pre>
In this example every time user runs the Index action Authorize class performs :
<ol>
<ol>
	<li>Check if user is in list of users in the <strong>Authorize User </strong>parameter.
<ul>
	<li>you can set usernames parameter</li>
	<li>
<pre class="lang:default decode:true">[Authorize(Users="Mike,Tim")]</pre>
</li>
</ul>
</li>
</ol>
</ol>
<ol>
<ol>
	<li>Check if the user is logged in.</li>
</ol>
</ol>
<div>
<pre class="lang:default decode:true">if (!user.Identity.IsAuthenticated)
{
        return false;
}</pre>
</div>
<ol>
<ol>
	<li>Check if user is atlest in one role definied in authorize parameters</li>
</ol>
</ol>
<div>
<pre class="lang:default decode:true">[Authorize(Roles="admin")]</pre>
</div>
<ol>
<ol>
<ul>
	<li>role check looks like this</li>
</ul>
</ol>
</ol>
<pre class="lang:default decode:true">if (!Enumerable.Any&lt;string&gt;(roles, new Func&lt;string, bool&gt;(user.IsInRole)))
{
        return false;
}</pre>
<p align="justify">In my scenario I have database with all the data required for the membership provider on another server. Simple methods like <strong>ValidateUser</strong> are on the wire. Default Authorize class uses the <strong>user.IsInRole</strong> which needs “local” role provider . With DB behind the service layer it won’t work at all.  I have launched <a href="http://wiki.sharpdevelop.net/ilspy.ashx">ILSpy</a> and made a little research.</p>
<p align="justify">It appears that Authorize Attribute is not sealed and you can extend its behaviors. Mehods inside class are marked as virtual so you can easily override them.</p>
<p align="justify">So here is my implementation of Authorize class over WCV. Most important part is the call <strong>service.IsUserInroles(name).</strong> Service through <strong>WCF</strong> check the roles and return boolean value.</p>

<pre class="lang:default decode:true">    public class AuthorizeAttributeWCF : AuthorizeAttribute
    {
        protected override bool AuthorizeCore(HttpContextBase httpContext)
        {
            if (httpContext == null)
            {
                throw new ArgumentNullException("httpContext");
            }
            IPrincipal user = httpContext.User;
            if (!user.Identity.IsAuthenticated)
            {
                return false;
            }
            if (this.Users.Length &gt; 0 &amp;&amp; !Enumerable.Contains&lt;string&gt;(this.Users.Split(','
                ), user.Identity.Name, StringComparer.OrdinalIgnoreCase))
            {
                return false;
            }
            if (this.Roles.Length &gt; 0)
            {
                string [] roles = this.Roles.Split(',');
                var service = new ProfileService.ProfileServiceClient();
                return service.IsUserInRoles(user.Identity.Name,roles);
            }
            return true;
        }
    }</pre>
Method used in my service
<pre class="lang:default decode:true">        public bool IsUserInRoles(string userName,string[] roles)
        {
            foreach (string s in roles)
            {
                if (Roles.IsUserInRole(userName,s))
                {
                    return true;
                }
            }
            return false;
        }</pre>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>750</wp:post_id>
		<wp:post_date>2011-05-01 16:27:51</wp:post_date>
		<wp:post_date_gmt>2011-05-01 14:27:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>asp-net-mvc-authorize-over-wcf-role-check</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[asp.net mvc]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="wcf"><![CDATA[wcf]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1304267275]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1304430171";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[348615021]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>421</wp:comment_id>
			<wp:comment_author><![CDATA[TJ]]></wp:comment_author>
			<wp:comment_author_email>tjordanmeister@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>88.157.194.6</wp:comment_author_IP>
			<wp:comment_date>2014-11-25 17:27:00</wp:comment_date>
			<wp:comment_date_gmt>2014-11-25 16:27:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[if (!user.Identity.IsAuthenticated)

{

        return false;

}

??

be simple...

return user.Identity.IsAuthenticated;]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1712116812]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>422</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>5.148.145.14</wp:comment_author_IP>
			<wp:comment_date>2014-11-25 18:21:00</wp:comment_date>
			<wp:comment_date_gmt>2014-11-25 17:21:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[With your approach two additional checks wont be executed.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>421</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1712116812]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1712211941]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Faking ModelState.IsValid–unit tests in Asp.Net Mvc</title>
		<link>http://www.mfranc.com/uncategorized/faking-modelstate-isvalidunit-tests-in-asp-net-mvc/</link>
		<pubDate>Sun, 22 May 2011 18:47:16 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2011/05/22/faking-modelstate-isvalidunit-tests-in-asp-net-mvc/</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify">As a part of my thesis , I am creating web app in Asp.net MVC. I m using <a href="http://nhforge.org/Default.aspx">NHibernate</a> , <a href="http://www.nunit.org/">NUnit</a> , <a href="https://github.com/hibernating-rhinos/rhino-mocks">RhinoMocks</a> , <a href="http://msdn.microsoft.com/en-us/netframework/aa663324">WCF</a> , <a href="http://ninject.org/">Ninject</a> , <a href="http://www.nuget.org/List/Packages/Glimpse">Glimpse</a> and also <a href="https://code.google.com/p/elmah/">Elmah</a> . This is a quite big project with a lot of unit tests. I am treating it as a playground.</p>
<p align="justify">This is the the first post o  of a series about using unit tests with <a href="http://www.asp.net/mvc">MVC</a> and <a href="http://msdn.microsoft.com/en-us/netframework/aa663324">WCF</a> .</p>
<p align="justify">Create entity action scenario in my app is simple. First there is a get action which builds View and prepares model. Then this newly created model (filled with values from the view)  is passed to action with <strong>[HttpPost]</strong> attribute. It is a good practice to if  <strong>ModelState.IsValid </strong>before performing any DB operations.</p>
<p align="justify">I have a lot of tests testing controllers and their action. In this case on of the tests should check behaviour of the controller when the <strong>ModelState.IsValid</strong> value is false. I have tried different approaches : trying to mock controller , trying to mock its context , inspecting code with <a href="http://www.jetbrains.com/decompiler/">dotPeek</a> (cool decompiler from the JetBrains) wasn’t helpfull.  Then I realized that you can do something like this.</p>

<pre class="lang:default decode:true">//Faking ModelState.IsValid = false           
  CourseController.ModelState.Add("testError", new ModelState());     
  CourseController.ModelState.AddModelError("testError", "test");</pre>
<pre class="lang:default decode:true crayon-selected">[Test]  
 public void Post_if_model_state_invalid_then_dont_add_course_and_return_error_view()   
{       
      #region Arrange   

       //Faking ModelState.IsValid = false      
       CourseController.ModelState.Add("testError", new ModelState());
       CourseController.ModelState.AddModelError("testError", "test");   

        using (Mock.Record()) 
        {    
             Expect.Call(CourseService.AddCourse(Course)).Repeat.Never();    
         }  
         #endregion    

         #region Act        
        ViewResult view;      
         using (Mock.Playback())   
          {   
              view = (ViewResult)CourseController.Create(Course);   
          }  
           #endregion    
           #region Assert    
           Assert.That(view.ViewName,Is.EqualTo("Error"));  
           Assert.That(view.ViewBag.Error, Is.EqualTo(elearn.Common.ErrorMessages.Course.ModelUpdateError));  

           #endregion  
       }</pre>
As you can see ,  I am modifying ModelState by injecting fake data that will result in <strong>IsValid</strong> property set to false.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>752</wp:post_id>
		<wp:post_date>2011-05-22 20:47:16</wp:post_date>
		<wp:post_date_gmt>2011-05-22 18:47:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>faking-modelstate-isvalidunit-tests-in-asp-net-mvc</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[asp.net mvc]]></category>
		<category domain="post_tag" nicename="nunit"><![CDATA[NUnit]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1306097236]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306121902";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[354349392]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>148</wp:comment_id>
			<wp:comment_author><![CDATA[Matthew Nichols]]></wp:comment_author>
			<wp:comment_author_email>matthew.nichols.devguy@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>66.35.34.222</wp:comment_author_IP>
			<wp:comment_date>2013-11-02 00:22:00</wp:comment_date>
			<wp:comment_date_gmt>2013-11-01 23:22:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks...that is very helpful.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1105693691]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Faking Controller User.Identity with Rhino Mocks and MvcContrib. Unit Tests in Asp.Net Mvc</title>
		<link>http://www.mfranc.com/uncategorized/faking-controller-user-identity-with-rhino-mocks-and-mvccontrib-unit-tests-in-asp-net-mvc/</link>
		<pubDate>Wed, 25 May 2011 18:46:46 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2011/05/25/faking-controller-user-identity-with-rhino-mocks-and-mvccontrib-unit-tests-in-asp-net-mvc/</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify">Some of the actions that we are writing in Asp.Net <a href="http://www.asp.net/mvc">MVC</a> contains logic which uses data from the <strong>User </strong>context eg. user authentication or user name. <strong>Controller </strong>base class contains <strong>User</strong> property which is the instance of  <strong>IPrincipal</strong> with two important properties.</p>

<pre class="lang:default decode:true">User.Identity.Name
User.Identity.IsAuthenticated</pre>
<p align="justify">The <strong>IPrincipal </strong>is taken from the <strong>HttpContext</strong></p>

<pre class="lang:default decode:true">    public IPrincipal User
    {
      get
      {
        if (this.HttpContext != null)
          return this.HttpContext.User;
        else
          return (IPrincipal) null;
      }
    }</pre>
<p align="justify">So if your action is using the <strong>User  </strong>property directly (you can always wrap this property inside a class that implements mockable <strong>Interface</strong> ) there is a problem with unit testing. In a isolated enviroment like test case , <strong>Controller</strong> doesn’t have the <strong>HttpContext</strong>. It is an external dependency.</p>
<p align="justify"><strong>HttpContext </strong>is retrieved from the <strong>ControllerContext</strong></p>

<pre class="lang:default decode:true">    public HttpContextBase HttpContext
    {
      get
      {
        if (this.ControllerContext != null)
          return this.ControllerContext.HttpContext;
        else
          return (HttpContextBase) null;
      }
    }</pre>
<p align="justify">In order to fake the <strong>User </strong>property First we need to create a fake  <strong>ControllerContext. </strong>To create it we need  <strong>HttpContext  </strong>which also needs <strong>HttpRequest. </strong><strong> </strong>User is created from <strong>IPrincipal</strong> and <strong>IIdentity ,</strong> with those classes we can create a<strong> Stub </strong>inside the<strong> HttpContext</strong>.</p>
<p align="justify">Yep , It’s quite complicated. Fortunately <a href="http://mvccontrib.codeplex.com/">MvcContrib</a> Library helps a little by providing classes that are faking <strong>IIdentity</strong> and <strong>IPrincipal</strong></p>
<p align="justify">If you want to create a fake user you just need to write</p>

<pre class="lang:default decode:true">var user = new FakePrincipal(new FakeIdentity(userName),null);</pre>
<p align="justify">When creating <strong>FakeIdentity</strong> <strong>userName</strong> <strong>parametr</strong> is really important. If you want ,not authenticated user , pass <strong>Empty String as a parameter</strong></p>

<pre class="lang:default decode:true">var user = new FakePrincipal(new FakeIdentity(String.Empty), null);</pre>
<p align="justify"></p>
<p align="justify">Yey , it’s the end ! Check out this simple graph.</p>
<p align="justify"><a href="http://lammichalfranc.files.wordpress.com/2011/05/image.png"><img style="background-image: none; padding-left: 0; padding-right: 0; display: inline; float: left; padding-top: 0; border-width: 0; margin: 0 0 5px;" title="image" src="http://lammichalfranc.files.wordpress.com/2011/05/image_thumb.png" alt="image" width="565" height="301" align="left" border="0" /></a></p>


<p>Using this information , I have implemented simple <strong>TestHelper</strong> with methods to generate Fake <strong>ControlleContext</strong> with faked <strong>User.</strong></p>

<pre class="lang:default decode:true">  public static class TestHelper
    {
        public static ControllerContext MockControllerContext(Controller controller)
        {
            var httpContext = MockRepository.GenerateMock&lt;HttpContextBase&gt;();
            var httpRequest = MockRepository.GenerateMock&lt;HttpRequestBase&gt;();
            httpContext.Stub(x =&gt; x.Request).Return(httpRequest);
            return new ControllerContext(httpContext,new RouteData(),controller);
        }

        public static ControllerContext WithAuthenticatedUser(this ControllerContext context, string userName)
        {
            var user = new FakePrincipal(new FakeIdentity(userName),null);
            context.HttpContext.Stub(x =&gt; x.User).Return(user);
            return new ControllerContext(context.HttpContext,new RouteData(),context.Controller);
        }

        public static ControllerContext WithNotAuthenticatedUser(this ControllerContext context)
        {
            var user = new FakePrincipal(new FakeIdentity(String.Empty), null);
            context.HttpContext.Stub(x =&gt; x.User).Return(user); 
            return new ControllerContext(context.HttpContext, new RouteData(), context.Controller);
        }
}</pre>
<p align="justify"><strong>Usage:</strong></p>

<pre class="lang:default decode:true">ProfileController.ControllerContext =
TestHelper.MockControllerContext(ProfileController).WithAuthenticatedUser("test");</pre>
Hope this sample helps.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>756</wp:post_id>
		<wp:post_date>2011-05-25 20:46:46</wp:post_date>
		<wp:post_date_gmt>2011-05-25 18:46:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>faking-controller-user-identity-with-rhino-mocks-and-mvccontrib-unit-tests-in-asp-net-mvc</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="asp-net-mvc"><![CDATA[asp.net mvc]]></category>
		<category domain="post_tag" nicename="mvc-contrib"><![CDATA[mvc contrib]]></category>
		<category domain="post_tag" nicename="rhino-mocks"><![CDATA[rhino mocks]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1306356407]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306397076";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[347992001]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>45</wp:comment_id>
			<wp:comment_author><![CDATA[Christian]]></wp:comment_author>
			<wp:comment_author_email>christian.payne@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://christianpayne.com.au</wp:comment_author_url>
			<wp:comment_author_IP>203.27.21.6</wp:comment_author_IP>
			<wp:comment_date>2011-06-07 06:11:14</wp:comment_date>
			<wp:comment_date_gmt>2011-06-07 04:11:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Could post a full application?  This isn't making much sense]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>46</wp:comment_id>
			<wp:comment_author><![CDATA[LaM]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>178.235.30.235</wp:comment_author_IP>
			<wp:comment_date>2011-06-07 18:12:30</wp:comment_date>
			<wp:comment_date_gmt>2011-06-07 16:12:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Which part doesn't make sense ?
Code is here  https://github.com/LaMik/ElearnServices

Test Helper : http://tinyurl.com/6b9tnwx
Example of tests http://tinyurl.com/6euultc]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>45</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>54</wp:comment_id>
			<wp:comment_author><![CDATA[Le3wood]]></wp:comment_author>
			<wp:comment_author_email>le3wood@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-08-19 10:45:00</wp:comment_date>
			<wp:comment_date_gmt>2011-08-19 10:45:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Fantastic post; really helpful. Thanks.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[290815752]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>75</wp:comment_id>
			<wp:comment_author><![CDATA[dave]]></wp:comment_author>
			<wp:comment_author_email>dyardy@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>198.91.9.99</wp:comment_author_IP>
			<wp:comment_date>2012-06-14 20:30:00</wp:comment_date>
			<wp:comment_date_gmt>2012-06-14 20:30:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am using mvc contrib and the following works very well for being able to access this.user.identity.name in the controller when being call from a unit test.

The problem is how would i add values to the Request.Forms collection.  When I use your code my Request object is null within the controller.  The MVC Contrib shows code like builder.Form.Add("testvar", "01/01/2012"); for putting something in the forms collection.


ProfileController.ControllerContext =
TestHelper.MockControllerContext(ProfileController).WithAuthenticatedUser(“test”);]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[557517895]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title></title>
		<link>http://www.mfranc.com/uncategorized/3-git-and-how-to-problem-with-ignoring-by-file-extensions/</link>
		<pubDate>Fri, 27 May 2011 22:07:24 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2011/05/28/3-git-and-how-to-problem-with-ignoring-by-file-extensions/</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify">I started my adventure in <strong>Source Code Management</strong> systems with <strong>SVN</strong>. I was on my 3rd year at University and was quite impressed with it’s capabilities. Later on after hearing a lot of good things about <strong>Git</strong> and watching great presentation by Linus Torvalds, I persuaded myself to try it. This was a big move for me. I worked/learned on the MS stack so by moving to the <strong>GIT</strong> world I had to learn some Unix technology. I had problems with adoption : configuration problems , shift in thinking about repositories , branches , even something new like <strong>GitHub</strong> community. Lots of work and try and error learning but it was worth the time . Now&nbsp; , which is an irony , I have problems working with <strong>SVN</strong> at work Too much “git-ing” : ) . You just cant understand why something is in <strong>GIT</strong> and not in <strong>SVN</strong>. I m struggling now. Integration server is full of “build failures&nbsp; , caused by missing file in repository : D  <p>I m still working with <strong>GIT </strong>at home&nbsp; , and&nbsp; I m not changing it to other <strong>SCM</strong> unless it’s really necessary eg. in work.  <p>&nbsp; <p align="justify">Recently I encountered a problem with ignoring files. I wanted to ignore some files by extension type. Well I was not working at all. I had to spent some time to find the solution. <strong>StackOverflow</strong> came to the rescue. Those simple commands fixed my problem.  <p align="justify"><strong><font>1. <code>git rm -r --cached .</code></font></strong></p> <p><code><strong><font><font face="Helvetica">2. </font>git add .</font></strong></code></p> <p><code><strong><font><font face="Arial">3</font>.git commit –m </font></strong></code></p> <div align="justify"></div> <div align="justify"> <p><code><font face="Arial">This basically clears out the cache and “re-adds” files.</font></code></p> <p><code></code><code><font face="Arial">On a side note don’t be afraid with the <strong>git rm</strong> command , I have almost jumped off my chair when I saw whole thesis being deleted : )</font></code></p></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>811</wp:post_id>
		<wp:post_date>2011-05-28 00:07:24</wp:post_date>
		<wp:post_date_gmt>2011-05-27 22:07:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>3-git-and-how-to-problem-with-ignoring-by-file-extensions</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="git-2"><![CDATA[git]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306570835";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1306534044]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[429977420]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Great presentations @TechEd Atlanta 2011</title>
		<link>http://www.mfranc.com/uncategorized/great-presentations-teched-atlanta-2011/</link>
		<pubDate>Mon, 30 May 2011 16:01:30 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2011/05/30/great-presentations-teched-atlanta-2011/</guid>
		<description></description>
		<content:encoded><![CDATA[I have spent some time on the weekend watching Tech Ed on channel 9

1. <a href="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2011/DEV333">Hack Proofing Your Microsoft ASP.NET Web Forms and MVC Applications</a>

- Sql Injections

- Cross Site Scripting

- parameter tampering in MVC3

Great presentation with ton of useful information's . I didn’t knew that you can exploit web applications in soo many ways.

<a href="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2011/DPR201">2. The Architect</a>

- Software Development Crisis

- Great analogies to other engineering disciplines

If you don’t want to end as a Code Monkey in the near future. You have to watch this presentation.

3 . <a href="http://channel9.msdn.com/Events/TechEd/NorthAmerica/2011/DEV320">Demystifying Debugging with Microsoft Visual Studio Ultimate and IntelliTrace</a>

- lots of good stuff about debugging features in VS

- IntelliTrace and VS Tests

Now I know that this window on the left side of the screen is called IntelliTrace and it’s a great tool ;] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>814</wp:post_id>
		<wp:post_date>2011-05-30 18:01:30</wp:post_date>
		<wp:post_date_gmt>2011-05-30 16:01:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>great-presentations-teched-atlanta-2011</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="teched"><![CDATA[teched]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>tagazine-media</wp:meta_key>
			<wp:meta_value><![CDATA[a:7:{s:7:"primary";s:0:"";s:6:"images";a:0:{}s:6:"videos";a:0:{}s:11:"image_count";s:1:"0";s:6:"author";s:7:"8566791";s:7:"blog_id";s:7:"8265440";s:9:"mod_stamp";s:19:"2011-05-30 16:01:30";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1306771291]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1306781981";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[355180122]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Regular expression attribute Testing–DateTime validation problem</title>
		<link>http://www.mfranc.com/programming/asp-net-mvc-regular-expression-attribute-testingdatetime-validation-problem/</link>
		<pubDate>Sat, 04 Jun 2011 11:30:24 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2011/06/04/asp-net-mvc-regular-expression-attribute-testingdatetime-validation-problem/</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify">When developing simple validation logic in Asp.Net <a href="http://www.asp.net/mvc">Mvc</a> you can use the built in validators. One of them is the <a href="http://msdn.microsoft.com/en-us/library/system.web.ui.webcontrols.regularexpressionvalidator.aspx">RegularExpression Validator</a>. I had a simple scenario with a property of  <strong>DateTime</strong> type called <strong>StartDate</strong>. Validation format <strong>(yyyy-mm-dd).</strong> It should be a simple task , but details are always messy.</p>
<p align="justify">I created a simple pattern and tested it with various examples in one of the Regex Editors.</p>

<h2>DateTime regular expression problem</h2>
<pre class="lang:default decode:true  crayon-selected"> [RegularExpression(@"^(19|20)dd([- /.])(0[1-9]|1[012])2(0[1-9]|[12][0-9]|3[01])$")]
 public DateTime StartDate { get; set; }</pre>
<p align="justify">To check if this solution works , two unit tests were created. First implementation of tests used the <strong>Regex </strong>class , but then I found out that you can use  <strong>Attribute </strong>classes inside your code. I changed tests and used the <strong>RegularExpressionAttribute </strong>class inside test<strong>. </strong>Those tests are better because , with <strong>Regex </strong>our , we are checking if regex pattern is correct. With <strong>Attribute </strong>class used inside the test , we are testing actual scenario that is happening inside our app .</p>
<h3>Problematic Tests</h3>
Result - SUCCESS
<pre class="lang:default decode:true">[TestFixture]
 class CalendarEventRegExpTests
 {
    private string regex = @"^(19|20)(dd)[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$";

    [Test]
     public void Should_match()
     {
        var dateTime = "2011-10-1";
        var attribute = new RegularExpressionAttribute(regex);
        Assert.IsTrue(attribute.IsValid(dateTime));
     }</pre>

Result - SUCCESS

<pre class="lang:default decode:true">[Test]
 public void Should_not_match()
 {
  var dateTime = "01-10-2001";
  var attribute = new RegularExpressionAttribute(regex);
  Assert.IsFalse(attribute.IsValid(dateTime));
  }
}</pre>

<p align="justify">Yey green light, They passed so it’s working ! I tested the app and … validation was always incorrect . First thought , my pattern is incorrect. But , it is working inside <strong>RegEx Editor</strong> so I it has to be correct.</p>

<h3>Whats Wrong</h3>
<p align="justify">It seems that when <strong>DateTime </strong>object is passed to the <strong>RegExpAttribute </strong>, something weird is happening and validation fails. I have simulated this scenario with simple test.</p>

Result - FAIL
<pre class="lang:default decode:true">[Test]
public void Should_match()
{
    var dateTime = new DateTime(2011,11,10);
    var attribute = new RegularExpressionAttribute(regex);
    Assert.IsTrue(attribute.IsValid(dateTime));
}</pre>


<p align="justify"></p>
<p align="justify">Maybe it’s the problem with the type of the object. This test converts <strong>DateTime </strong>object to string fail.</p>

Result - FAIL
<pre class="lang:default decode:true">[Test]
public void Should_match()
{
   var dateTime = new DateTime(2011,10,10);
   var attribute = new RegularExpressionAttribute(regex);
   Assert.IsTrue(attribute.IsValid(dateTime.ToString()));
}</pre>

<p align="justify"></p>
<p align="justify">Then I realized that <strong>.ToString() ,</strong> method by default creates string including the <strong>hh-mm-ss. </strong>In my scenario those parameters were initialized with zeros<strong> </strong>My simple regex pattern wont match this string. Correctly formatted string passes the Test.</p>

Result - SUCCESS
<pre class="lang:default decode:true">[Test]
public void Should_match()
{
    var dateTime = new DateTime(2011,10,10);
    var attribute = new RegularExpressionAttribute(regex);
    Assert.IsTrue(attribute.IsValid(dateTime.ToString("yyyy-MM-dd")));
}</pre>

<p align="justify">It’s time to look inside the <strong>RegularExpressionAttribute.  </strong>Let me “Reflect” or “<a href="http://www.jetbrains.com/decompiler/">DotPeek</a>”  that for you.</p>
<p align="justify">Here is the code inside the class.</p>

<div align="justify">
<pre class="lang:default decode:true crayon-selected">public override bool IsValid(object value)
{
   this.SetupRegex();
   string input = Convert.ToString(value, (IFormatProvider) CultureInfo.CurrentCulture);
   if (string.IsNullOrEmpty(input))
   {
      return true;
   }
   else
   {
       Match match = this.Regex.Match(input);
       if (match.Success &amp;&amp; match.Index == 0)
          return match.Length == input.Length;
       else
          return false;
    }
}</pre>
</div>
<p align="justify">The Highlighted part is the problem. <strong>.IsValid()</strong> method uses default.<strong>ToString()</strong>. <strong>DateTime </strong>is parsed to the string with <strong>hh-mm-ss </strong>and that’s the root of the problem.</p>

<h2>Conclusion</h2>
<p align="justify">There is a simple solution to this problem. You just need to attach <strong>DisplayFormat.</strong></p>

<div align="justify">
<pre class="lang:default decode:true">DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = "{0:yyyy-MM-dd}")]</pre>
</div>
<h3 align="justify"><strong>Lessons Learned</strong></h3>
<p align="justify">- “green light” in test doesn’t mean that your code is working .</p>
<p align="justify">- create tests on “real” data</p>
<p align="justify">- try simulate environment and context as much as possible. To many assumptions and your test isn’t testing real scenario. In my case , I  used the <strong>string</strong> inside test when my app used <strong>DateTime </strong>object.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>816</wp:post_id>
		<wp:post_date>2011-06-04 13:30:24</wp:post_date>
		<wp:post_date_gmt>2011-06-04 11:30:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>asp-net-mvc-regular-expression-attribute-testingdatetime-validation-problem</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1307187026]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1307624706";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[348791121]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>79</wp:comment_id>
			<wp:comment_author><![CDATA[Vinod b]]></wp:comment_author>
			<wp:comment_author_email>vina554@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>182.72.191.130</wp:comment_author_IP>
			<wp:comment_date>2012-11-30 11:09:00</wp:comment_date>
			<wp:comment_date_gmt>2012-11-30 11:09:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[i want dd-Monthname-yyyy format]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[723600422]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>88</wp:comment_id>
			<wp:comment_author><![CDATA[MichalFranc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>88.156.80.147</wp:comment_author_IP>
			<wp:comment_date>2013-01-03 19:58:00</wp:comment_date>
			<wp:comment_date_gmt>2013-01-03 18:58:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey you can allways try and look here http://regexlib.com/ . This page contains a lot of different regexp solutions.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>79</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[723600422]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[754749394]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Git - gui , staging selected lines</title>
		<link>http://www.mfranc.com/uncategorized/git-git-gui-staging-selected-lines/</link>
		<pubDate>Sat, 11 Jun 2011 17:16:19 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">https://lammichalfranc.wordpress.com/2011/06/11/git-git-gui-staging-selected-lines/</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify">I m using <a href="http://git-scm.com/">Git</a> for about half a year and boy it still amazes me with these little “gems” that you can find “inside”. </p> <p align="justify">At the beginning I just hated the idea of a console management. I was using <a href="http://subversion.tigris.org/">Svn</a> with tortoise installed. Yeah those are symptoms of a “Windows User” which only knows how to point and click with mouse. Everything changed when I thought that it would be a great idea to learn <a href="http://git-scm.com/">Git</a> . there was a huge hype , well it still here. I installed <a href="http://code.google.com/p/msysgit/">msysgit</a> and started my journey. </p> <p align="justify"><a href="http://git-scm.com/">Git</a> changed everything . I just love the idea of managing a lot of things without the mouse. learning <a href="http://git-scm.com/">Git</a> encouraged me to learn shortucts and keyboard commands in my “default” IDE (Visual Studio + R%). It’s a huge productivity boost and there is a cool side-efect. Work is more is fun : ). </p> <h3 align="justify"><font></font>&nbsp;</h3> <h3 align="justify"><font>Git Gui</font></h3> <p align="justify">I spent couple of months managing my project by console. You know</p> <p align="justify">git commit , <a href="http://git-scm.com/">git</a> push . I even learned some vim which is also cool and “nerdy”.</p> <p align="justify">Then I discovered git gui. This simple app is almost everything you need to manage your <a href="http://git-scm.com/">git</a> based&nbsp; repository. </p> <p align="justify">To run it write “<a href="http://git-scm.com/">git</a> gui” in the console.</p> <p align="justify"><a href="http://lammichalfranc.files.wordpress.com/2011/06/image.png"><img style="background-image:none;border-bottom:0;border-left:0;padding-left:0;padding-right:0;display:block;float:none;border-top:0;border-right:0;padding-top:0;margin:0 auto 5px;" title="image" border="0" alt="image" src="http://lammichalfranc.files.wordpress.com/2011/06/image_thumb.png" width="571" height="322"></a></p> <p align="justify">&nbsp;</p> <p align="justify">Right now my standard scenario when pushing new commit is :</p> <p align="justify">- review changes and prepare commits in git gui</p> <p align="justify">- push changes to repo by the <a href="http://git-scm.com/">git</a> push command in the console .Yeah I know that you can push from within git gui but a simple command in console is a lot easier to do (truth is I don’t know how to configure it ). I have two instances of msysgit running all the time.</p> <p align="justify">&nbsp;</p> <h3 align="justify"></h3> <h3 align="justify"><font>Staging selected lines</font></h3> <p align="justify">When coding we sometimes forget to commit every “bigger” change. Big pile of changes with different functionalities emerges and we have the problem. We could commit everything in one try but that’s not a good idea. In ideal scenario commits should contain only one functionality. That way every revision is a functional app ready to clone and test. With one big commit , repository is not “flexible”. </p> <p align="justify">There is a solution for it called <strong>“Stage Lines for Commit”</strong>. You just need to run git gui select changes inside <a href="http://git-scm.com/">git</a> gui and right click then there is a option to commit only selected lines of code. </p> <p align="justify">&nbsp;<a href="http://lammichalfranc.files.wordpress.com/2011/06/image1.png"><img style="background-image:none;border-bottom:0;border-left:0;padding-left:0;padding-right:0;display:block;float:none;border-top:0;border-right:0;padding-top:0;margin:0 auto 5px;" title="image" border="0" alt="image" src="http://lammichalfranc.files.wordpress.com/2011/06/image_thumb1.png" width="474" height="290"></a></p> <p align="justify">&nbsp;</p> <p align="justify">Git is full of little gems. It’s easy , it’s fun. It’s just great ;]</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>823</wp:post_id>
		<wp:post_date>2011-06-11 19:16:19</wp:post_date>
		<wp:post_date_gmt>2011-06-11 17:16:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>git-git-gui-staging-selected-lines</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="git-2"><![CDATA[git]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>jabber_published</wp:meta_key>
			<wp:meta_value><![CDATA[1307812580]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>reddit</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:5:"count";s:1:"0";s:4:"time";s:10:"1307825253";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[347991802]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Unobtrusive validation - Partial View</title>
		<link>http://www.mfranc.com/javascript/unobtrusive-validation-in-partial-views/</link>
		<pubDate>Mon, 04 Jul 2011 18:20:08 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/2011/07/04/unobtrusive-validation-in-partial-views/</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>TL;DR;</strong>

<h2>Solution</h2>
And here is the final solution. simple plugin to jQuery.
<pre class="lang:default decode:true">(function ($) { 
    $.validator.unobtrusive.addValidation = function (selector) { 
    //get the relevant form 
    var form = $(selector); 
    // delete validator in case someone called form.validate()
    $(form).removeData("validator"); 
    $.validator.unobtrusive.parse(form); 
  }</pre>
<h2>Usage</h2>
On the partial view use
<pre class="lang:default decode:true">$.validator.unobtrusive.addValidation("#myform")</pre>

<h2>Explanation - Unobtrusive validation in partial view</h2>
<p align="justify">Unobtrusive validation is a great feature. You can easily bind your server side validation to client side validation provided by JQuery plugin.</p>
<p align="justify">Everything is fine but there is a small problem. When working with Partial views with form you need to load unobtrusive validation two times. First on when the main window is loaded and then the second time when the partial view is injected. Why ? Unobtrusive validation attaches special attributes to field on load event, which are used to bind your own rules defined inside the model with rules implementation provided by JQuery library.</p>
<p align="justify">When you create a partial view  fields in new form are without those special attributes and so validation is not working.</p>
<p align="justify">One of the solution is to load unobtrusive .js file again. It works but you need to load something twice wasting resources.</p>
Let's find a better solution.
<h2>Scenario 1 - dynamic elements</h2>
Some googling / binging and <a href="http://xhalent.wordpress.com/2011/01/24/applying-unobtrusive-validation-to-dynamic-content/">I found this post</a>

This solution is ok if you are adding dynamic element to a form with already attached validation attributes .
<p align="justify">In my scenario with dynamic data in partial, I am creating new form waiting to be validated. So let’s look at the next solution.</p>

<h2>Scenario 2 - new form (in partial view)</h2>

<p align="justify">After a lot of research  and debugging through the jQuery and MS validation plugin (at least I know in details how unobtrusive validation works ) . I noticed that unobtrusive creates special OnError method and overrides the default one ( which  injects default label ) in the jQuery</p>

<h3>Unobtrusive</h3>
<pre class="lang:default decode:true">    function onError(error, inputElement) {  // 'this' is the form element
        var container = $(this).find("[data-valmsg-for='" + inputElement[0].name + "']"),
            replace = $.parseJSON(container.attr("data-valmsg-replace")) !== false;

        container.removeClass("field-validation-valid").addClass("field-validation-error");
        error.data("unobtrusiveContainer", container);

        if (replace) {
            container.empty();
            error.removeClass("input-validation-error").appendTo(container);
        }
        else {
            error.hide();
        }
    }</pre>
Creating proxy with <strong>onError </strong>:
<pre class="lang:default decode:true">        if (!result) {
            result = {
                options: {  // options structure passed to jQuery Validate's validate() method
                    errorClass: "input-validation-error",
                    errorElement: "span",
                    errorPlacement: $.proxy(onError, form),
                    invalidHandler: $.proxy(onErrors, form),
                    messages: {},
                    rules: {},
                    success: $.proxy(onSuccess, form)
                },
                attachValidation: function () {
                    $form.validate(this.options);
                },
                validate: function () {  // a validation function that is called by unobtrusive Ajax
                    $form.validate();
                    return $form.valid();
                }
            };
            $form.data(data_validation, result);</pre>
<p align="justify">There is a method <strong>“parse”</strong> in unobtrusive plugin , which is responsible for creating validation attributes , adapters and also what’s really important <strong>errorPlacement</strong> adapter. Everything you need. Knowing all of this we can just use this <strong>“parse” </strong>on the form and everything should work fine.</p>
<pre class="lang:default decode:true">  $.validator.unobtrusive.parse(form);</pre>
<p align="justify">Well there is a small problem. This won't work because after a bit of analysis,I found that you can create validation rules once (correctly , without reloading whole script file ). Second and Third try won’t do anything. There will be problems with error placement or validation messages won’t show at all.</p>

<p align="justify">It seems that cached values are used. And it doesn’t matter if there are two different forms this behavior is global. Developers assumed that page should have only one form.</p?

So how to fix this ?

<strong>Delete validator data.</strong>
<pre class="lang:default decode:true">$(form).removeData("validator");</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>852</wp:post_id>
		<wp:post_date>2011-07-04 18:20:08</wp:post_date>
		<wp:post_date_gmt>2011-07-04 18:20:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>unobtrusive-validation-in-partial-views</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="post_tag" nicename="jquery-2"><![CDATA[jquery]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[349457365]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[74]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[unobtrusive validation partial view]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Solution with explanation to frequent problem with unobtrusive validation in partial views. With a solution - a simple plugin to jQuery.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>52</wp:comment_id>
			<wp:comment_author><![CDATA[Jakub Gutkowski]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/jakubgutkowski</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-07-05 10:28:00</wp:comment_date>
			<wp:comment_date_gmt>2011-07-05 10:28:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[there is one more option, instead of using "validator" use "unobtrusiveValidation" i.e.:

var validationInfo = $(form).data('unobtrusiveValidation');
return !validationInfo || !validationInfo.validate || validationInfo.validate();

'validator' - contains everything, 'unobtrusiveValidation' only ms client side validation]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[242476470]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>59</wp:comment_id>
			<wp:comment_author><![CDATA[Steven Myron]]></wp:comment_author>
			<wp:comment_author_email>steven.myron@ettain.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-12-22 15:21:00</wp:comment_date>
			<wp:comment_date_gmt>2011-12-22 15:21:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[So thankful for all your research!  These "little things" are showstoppers until someone digs into these things and comes up with a solution (one-liner in this case) to save the day!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[392313321]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>64</wp:comment_id>
			<wp:comment_author><![CDATA[jd]]></wp:comment_author>
			<wp:comment_author_email>demona@operamail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-29 09:05:00</wp:comment_date>
			<wp:comment_date_gmt>2012-02-29 09:05:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[ $(form).removeData(“validator”);  really helped me out! Thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[452108975]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>74</wp:comment_id>
			<wp:comment_author><![CDATA[jQuery validation plugin and Colorbox | Easy jQuery | Free Popular Tips Tricks Plugins API Javascript and Themes]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.easyjquery.com/jquery-validation-plugin-and-colorbox/</wp:comment_author_url>
			<wp:comment_author_IP>69.194.232.3</wp:comment_author_IP>
			<wp:comment_date>2012-06-05 11:33:04</wp:comment_date>
			<wp:comment_date_gmt>2012-06-05 11:33:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] solution with explanation can be found here: http://www.mfranc.com/2011/07/04/unobtrusive-validation-in-partial-views/       Tagged: colorbox, jquery, jquery-validate, questions       /* * * CONFIGURATION VARIABLES: [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1338895984.9885";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1343396476.8095";s:7:"message";s:42:"LaM changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>114</wp:comment_id>
			<wp:comment_author><![CDATA[Patrick]]></wp:comment_author>
			<wp:comment_author_email>patrick.sardinha@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>83.240.148.53</wp:comment_author_IP>
			<wp:comment_date>2013-03-06 13:51:00</wp:comment_date>
			<wp:comment_date_gmt>2013-03-06 12:51:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi, is there a way to solve the same problem for the Ajax.Link issue? http://stackoverflow.com/questions/15233200/ajax-actionlink-created-from-ajax-beginform-in-a-renderpartial-view]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[820969723]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>156</wp:comment_id>
			<wp:comment_author><![CDATA[Arvin Yorro]]></wp:comment_author>
			<wp:comment_author_email>yorro.a@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>69.8.124.143</wp:comment_author_IP>
			<wp:comment_date>2013-12-13 09:31:00</wp:comment_date>
			<wp:comment_date_gmt>2013-12-13 08:31:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I can't seem to make this work, it says

Uncaught TypeError: Object # has no method 'addValidation' 

Jquery 1.7.1]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1161158719]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>157</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>79.187.151.246</wp:comment_author_IP>
			<wp:comment_date>2013-12-17 08:09:00</wp:comment_date>
			<wp:comment_date_gmt>2013-12-17 07:09:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey,

I think that the spec changed and you have to use this method instead.

http://jqueryvalidation.org/jQuery.validator.addMethod]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>156</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1161158719]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1167165607]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>180</wp:comment_id>
			<wp:comment_author><![CDATA[Laubstein]]></wp:comment_author>
			<wp:comment_author_email>marcio.laubstein@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>177.103.223.37</wp:comment_author_IP>
			<wp:comment_date>2014-05-02 20:53:00</wp:comment_date>
			<wp:comment_date_gmt>2014-05-02 19:53:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1366748527]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>288</wp:comment_id>
			<wp:comment_author><![CDATA[MacGyver]]></wp:comment_author>
			<wp:comment_author_email>macgyver76@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>195.205.23.100</wp:comment_author_IP>
			<wp:comment_date>2014-10-09 09:50:00</wp:comment_date>
			<wp:comment_date_gmt>2014-10-09 08:50:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you Sir for this wondeful solution!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1626640561]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>289</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>5.148.145.14</wp:comment_author_IP>
			<wp:comment_date>2014-10-09 12:38:00</wp:comment_date>
			<wp:comment_date_gmt>2014-10-09 11:38:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your Welcome MacGyver :) I loved this TV Serie !]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>288</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1626640561]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1626814457]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>475</wp:comment_id>
			<wp:comment_author><![CDATA[Hal Diggs]]></wp:comment_author>
			<wp:comment_author_email>banditdiggs-junk2@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>173.226.189.162</wp:comment_author_IP>
			<wp:comment_date>2014-12-19 02:08:00</wp:comment_date>
			<wp:comment_date_gmt>2014-12-19 01:08:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[kinda new to some of this. I have the function added so I'm calling 

$.validator.unobtrusive.addValidation('#myForm');

in a $(document).ready. Everytime I call $('#myForm').valid() its 'true'. Any tips for the uninitiated?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1749515747]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>476</wp:comment_id>
			<wp:comment_author><![CDATA[Hal Diggs]]></wp:comment_author>
			<wp:comment_author_email>banditdiggs-junk2@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>173.226.189.162</wp:comment_author_IP>
			<wp:comment_date>2014-12-19 02:15:00</wp:comment_date>
			<wp:comment_date_gmt>2014-12-19 01:15:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I should explain that I am exposing div tags in a wizard fashion. Should I be calling addValidation each time one is displayed? I did find that on the first wizard div the validation does get fired so I'm on the right track. I'm not calling this function in the correct place because after the first wizard fails the others don't fire.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1749522705]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>480</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>37.30.65.66</wp:comment_author_IP>
			<wp:comment_date>2014-12-20 12:42:00</wp:comment_date>
			<wp:comment_date_gmt>2014-12-20 11:42:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am not sure, this was a long time ago ... but maybe for each wizard step you might have to remove the unobtursive validation from previous step and add the validaton to new step.


Btw, I think there are better solutions now for handling validations ;) This post is 4 years old]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>476</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1749522705]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1751454679]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>484</wp:comment_id>
			<wp:comment_author><![CDATA[Hal Diggs]]></wp:comment_author>
			<wp:comment_author_email>banditdiggs-junk2@yahoo.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>71.8.114.101</wp:comment_author_IP>
			<wp:comment_date>2014-12-21 07:33:00</wp:comment_date>
			<wp:comment_date_gmt>2014-12-21 06:33:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yeah kinda figured after I stepped back and looked at the dates. For the record I got it all working. Still likes the solution, and it still works. Credit due my friend. Thanks for getting bad to me anyway.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>480</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1751454679]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1752527853]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>JQuery Validator&#8211; Modyfing decimal separator</title>
		<link>http://www.mfranc.com/javascript/jquery-valdiator-modyfing-decimal-separator/</link>
		<pubDate>Tue, 05 Jul 2011 20:28:55 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/2011/07/05/jquery-valdiator-modyfing-decimal-separator/</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Problem</h2>
By default <strong>jQuery</strong> validator  uses only validation by <strong>“dot”</strong> separator.
<h3>default code:</h3>
<pre class="lang:default decode:true">jQuery.extend(jQuery.validator.methods, { 
       number: function(value, element) { 
       return this.optional(element) 
        || /^-?(?:\d+|\d{1,3}(?:\.\d{3})+)(?:,\d+)?$/.test(value) 
       } 
});</pre>
I needed plugin that would allow <strong>“comma”</strong> separator.
<h2>Solutions</h2>
<h3>Simple or operator :</h3>
<pre class="lang:default decode:true">jQuery.extend(jQuery.validator.methods, { 
         number: function(value, element) { 
            return this.optional(element) 
            || /^-?(?:\d+|\d{1,3}(?:\.\d{3})+)(?:,\d+)?$/.test(value) 
            ||  /^-?(?:\d+|\d{1,3}(?:,\d{3})+)(?:\.\d+)?$/.test(value); 
          }
});</pre>
Combining two regexps. Not optimal but if you don’t know regexp its “good enough”.
<h3>brute force version :</h3>
<pre class="lang:default decode:true">jQuery.extend(jQuery.validator.methods, { 
         number: function(value, element) { 
            var val =  value.replace(',','.');
            return this.optional(element) 
             || /^-?(?:\d+|\d{1,3}(?:\.\d{3})+)(?:,\d+)?$/.test(val);
          }
});</pre>
Simple but effective version with string replace.
<h3>One regexp :</h3>
<pre class="lang:default decode:true crayon-selected">jQuery.extend(jQuery.validator.methods, { 
         number: function(value, element) { 
            return this.optional(element) 
             || /^-?(?:\d+|\d{1,3}(?:\.\d{3})+)(?:[,.]\d+)?$/.test(value);
          }
});</pre>
Best Solution ;]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>855</wp:post_id>
		<wp:post_date>2011-07-05 20:28:55</wp:post_date>
		<wp:post_date_gmt>2011-07-05 20:28:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jquery-valdiator-modyfing-decimal-separator</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
		<category domain="post_tag" nicename="jquery-2"><![CDATA[jquery]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[350395782]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>150</wp:comment_id>
			<wp:comment_author><![CDATA[Last one]]></wp:comment_author>
			<wp:comment_author_email>adfdffsfs@gmx.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>212.71.95.225</wp:comment_author_IP>
			<wp:comment_date>2013-11-28 11:22:00</wp:comment_date>
			<wp:comment_date_gmt>2013-11-28 10:22:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[In the "Best Solution", where there's .test(val); we should have .test(value);]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1142820702]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>153</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>213.199.218.2</wp:comment_author_IP>
			<wp:comment_date>2013-12-08 12:29:00</wp:comment_date>
			<wp:comment_date_gmt>2013-12-08 11:29:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for pointing this out :) Fixed.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>150</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1142820702]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1154787976]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>178</wp:comment_id>
			<wp:comment_author><![CDATA[Kristaps]]></wp:comment_author>
			<wp:comment_author_email>kristaps_s@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>78.28.227.2</wp:comment_author_IP>
			<wp:comment_date>2014-04-09 09:05:00</wp:comment_date>
			<wp:comment_date_gmt>2014-04-09 08:05:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think, the default code that you have shown searches for "comma" as a decimal seperator and "dot" as a thousand seperator.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1325861471]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>179</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>109.231.194.195</wp:comment_author_IP>
			<wp:comment_date>2014-05-01 09:49:00</wp:comment_date>
			<wp:comment_date_gmt>2014-05-01 08:49:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think you are right. I wonder how does the code looks like in the new versions of JQuery. This post is 3 years old ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>178</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1325861471]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1363654620]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Thesis&#8211;Overview</title>
		<link>http://www.mfranc.com/uncategorized/thesisoverview/</link>
		<pubDate>Tue, 11 Oct 2011 22:16:17 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/2011/10/11/thesisoverview/</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="left">After couple of months spent on developing, my thesis is finally finished (yeah to be hones it's a beta version)! Happy happy day ;] Working and studying (which is was quite similar to work) is quite exhausting.I have created the e-learning platform. Its core functionality is content management + learning process management.  <h3 align="left"><b>Technologies and Tools used in Project:</b></h3> <h4 align="left"><b><a href="http://nlog-project.org/">NLog</a> + <a href="http://sentinel.codeplex.com/">Sentinel</a></b></h4> <p align="left">NLog is awesome ! It's easy and flexible. I will stick with it in my projects. Every app should implement logging mechanism because it simplifies development and cuts time spent on debugging code. Sentinel is a tool used to view generated logs. It supports for NLog and log4net. Sentinel is still in early development phase and needs improvements but it's ok.  <p align="left">In my scenario i had a dual screen setup ( monitor + laptop screen). Laptop was used as a log windows with sentinel.  <h4 align="left"><b><a href="http://nhforge.org/Default.aspx">NHibernate</a> + <a href="http://fluentnhibernate.org/">FluentNhibernate </a></b></h4> <p align="left">NHibernate has step learning curve ( at least for someone like me with noob skills in ORM's) but its great, flexible and greatly simplifies Data Abstraction Layer implementation. I had couple of situatioon when, I had to do massive changes in the DB. With DAL in NHibernate it was easy task. For NH mappings i have used FluentNhibernate. This lib has some flaws and problems like weak sql stored procedure support but i really don't like the idea of xml files.  <h4 align="left"><b><a href="http://www.nunit.org/">NUnit</a> + <a href="http://hibernatingrhinos.com/open-source/rhino-mocks">RhinoMock</a></b></h4> <p align="left">Whole DAL is covered by unit tests (all the repository methods and service methods). I m using NUnit because this was my first test framework and i got used to it. In this project i have used for the first time Mocking Framework. Why RhinoMock well, I am reading <a href="http://ayende.com/blog">Ayende's Blog </a>and thought that's this one will be good at the beginning. There are currently more than 120 tests.  <h4 align="left"><b><a href="http://automapper.codeplex.com/">Automapper </a></b></h4> <p align="left">I m using Automapper to convert between different classes. My DAL is behind WCF services and, I'm using DTO's as a transfer class. With Automapper conversion from NH entity to DTO is really simple.  <h4 align="left"><b><a href="http://ninject.org/">Ninject</a></b></h4> <p align="left">This was my first time experience with DI frameworks. It works really well and is quite simple but recently i found a performance comparison and Ninject is very slow compared to other solutions. I was using Unity at work and, I m gonna try it with other projects.  <p align="left">&nbsp; <h3 align="left"><b>Architecture</b></h3> <p align="center"><strong><a href="http://www.mfranc.com/wp-content/uploads/2011/10/architektura.jpg"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="architektura" border="0" alt="architektura" src="http://www.mfranc.com/wp-content/uploads/2011/10/architektura_thumb.jpg" width="662" height="307"></a></strong></p> <p align="center">This is a simple architecture of my app.</p> <h4 align="left">Graphical Design</h4> <p align="left"><a href="http://www.mfranc.com/wp-content/uploads/2011/10/Logowanie.jpg"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="Logowanie" border="0" alt="Logowanie" src="http://www.mfranc.com/wp-content/uploads/2011/10/Logowanie_thumb.jpg" width="405" height="311"></a></p> <p align="left">Log in Screen</p> <p align="left"><a href="http://www.mfranc.com/wp-content/uploads/2011/10/mainpage.jpg"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="mainpage" border="0" alt="mainpage" src="http://www.mfranc.com/wp-content/uploads/2011/10/mainpage_thumb.jpg" width="407" height="249"></a></p> <p align="left">Main Page</p> <p align="left"><a href="http://www.mfranc.com/wp-content/uploads/2011/10/course.jpg"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="course" border="0" alt="course" src="http://www.mfranc.com/wp-content/uploads/2011/10/course_thumb.jpg" width="406" height="270"></a></p> <p align="left">Course Page</p> <p align="left">I am using <a href="http://themeforest.net/item/adminica-the-professional-admin-template/160638">Adminica Template.</a> Great Stuff !</p> <p align="left"><b>&nbsp;</p></b> <p align="left">It was quite a big project for me. I learned a lot and tried different solutions. After my graduation i will work <i>maybe</i> on it as a open source project.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>893</wp:post_id>
		<wp:post_date>2011-10-11 22:16:17</wp:post_date>
		<wp:post_date_gmt>2011-10-11 22:16:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>thesisoverview</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[440880435]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Debugging dynamic javascript in Chrome</title>
		<link>http://www.mfranc.com/uncategorized/debugging-dynamic-javascript-in-chrome/</link>
		<pubDate>Sun, 16 Oct 2011 10:58:59 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/2011/10/16/debugging-dynamic-javascript-in-chrome/</guid>
		<description></description>
		<content:encoded><![CDATA[When developing web apps, I am using <strong>Chrome </strong>it has a great <strong>JS</strong> debugger unfortunately there is a small problem. Modern Web Applications contain a lot of dynamically loaded <strong>Javascript</strong> on the page. One common scenario is to load a modal with asynchronously loaded content. If this content would be a normal page with some<strong> Javascript</strong>. Well we have a problem, we are not able to examine the scrpts and set breakpoints on this page. It wont work on default.

Fortunately there is a solution. Chrome provides simple parser command which can tag dynamically loaded <strong>JS.</strong>
<pre class="lang:default decode:true">&lt;script type="text/javascript"&gt;
....
//@ sourceURL=createOrder.js 
&lt;/script&gt;</pre>
This line tells the chrome debugger that this whole script inside the script tag should be interpreted as a <strong>createOrder.js </strong>file. You can find the file on the debugger list and easily set up breakpoints or check the code.

If you are working with <strong>Asp.Net </strong><a href="http://www.asp.net/mvc"><strong>MVC</strong></a> and <strong>Razor Engine </strong>use <strong>Write</strong> function

&nbsp;
<pre class="lang:default decode:true ">&lt;script type="text/javascript"&gt;
....
@{Write("//@ sourceURL=createOrder.js");}
&lt;/script&gt;</pre>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>894</wp:post_id>
		<wp:post_date>2011-10-16 10:58:59</wp:post_date>
		<wp:post_date_gmt>2011-10-16 10:58:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>debugging-dynamic-javascript-in-chrome</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[444923213]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>56</wp:comment_id>
			<wp:comment_author><![CDATA[Nick Olsen]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://nickstips.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2011-10-25 23:21:00</wp:comment_date>
			<wp:comment_date_gmt>2011-10-25 23:21:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Exactly what I needed.  Thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[344383521]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68</wp:comment_id>
			<wp:comment_author><![CDATA[Alef Auman]]></wp:comment_author>
			<wp:comment_author_email>alef.auman@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>81.243.174.210</wp:comment_author_IP>
			<wp:comment_date>2012-04-08 17:06:00</wp:comment_date>
			<wp:comment_date_gmt>2012-04-08 17:06:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't see createOrder.js in the list of scripts but I'll always see 7]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[491655848]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>71</wp:comment_id>
			<wp:comment_author><![CDATA[MichalFranc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>109.199.18.94</wp:comment_author_IP>
			<wp:comment_date>2012-04-08 19:34:00</wp:comment_date>
			<wp:comment_date_gmt>2012-04-08 19:34:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You mean seven createOrder.js files ? Chrome sometimes shows cached javascript files. Try to clear your cache.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>68</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[491655848]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[491737416]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>72</wp:comment_id>
			<wp:comment_author><![CDATA[Alef Auman]]></wp:comment_author>
			<wp:comment_author_email>alef.auman@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>81.243.174.210</wp:comment_author_IP>
			<wp:comment_date>2012-04-09 14:45:00</wp:comment_date>
			<wp:comment_date_gmt>2012-04-09 14:45:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[In the list of scripts I don't see the createOrder.js file but it is called 7.
]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>71</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[491737416]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[492170996]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>130</wp:comment_id>
			<wp:comment_author><![CDATA[Guerry]]></wp:comment_author>
			<wp:comment_author_email>gas@treenleaf.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>69.179.149.209</wp:comment_author_IP>
			<wp:comment_date>2013-06-27 23:09:00</wp:comment_date>
			<wp:comment_date_gmt>2013-06-27 22:09:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That got me most of the way! However, once I had the file in Sources, I could not get Chrome to stop on breakpoints. Using "debugger;" inline in the code allowed me to force a breakpoint, and all was good. Much thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[944693414]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>229</wp:comment_id>
			<wp:comment_author><![CDATA[flacunsia]]></wp:comment_author>
			<wp:comment_author_email>arayaromero@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>201.238.244.66</wp:comment_author_IP>
			<wp:comment_date>2014-07-25 16:57:00</wp:comment_date>
			<wp:comment_date_gmt>2014-07-25 15:57:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thanks, very helpful to debug]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1503359566]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Changing File Encoding in multiple Files</title>
		<link>http://www.mfranc.com/uncategorized/changing-file-encoding-in-multiple-files/</link>
		<pubDate>Wed, 09 Nov 2011 22:33:32 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/2011/11/09/changing-file-encoding-in-multiple-files/</guid>
		<description></description>
		<content:encoded><![CDATA[In one of the projects developed in my firm we had encoding set on almost all the files to Something like <strong>CodeBase 1252</strong> which supports only the limited set of characters.

There was a problem with Swedish characters <strong>“ö,ä,å”</strong> and also especially pound currency character which was used in one of the regular expression in the app. With my operating system, configured with the English culture settings using <strong>CodeBase 1250</strong>, those characters where changed and there were couple of runtime errors. We had to change the encoding to <strong>UTF8</strong> that’s one of the solutions. <strong>UTF8</strong> has a bigger character set.

There is an option in <strong>Visual Studio File –&gt; Advanced Save Options </strong> that can be used to change <strong>encoding</strong> but it’s only usable for scenarios with one file. In this situation I had to change couple thousand of files. To fix this problem I have found a nice solution that uses <strong>PowerShell</strong> .

Script:
<pre class="lang:default decode:true">function ChangeEncoding ($baseDirectory)
{
        $allFiles = Get-ChildItem $baseDirectory -include *.aspx,*.ascx -recurse 
               | where-object { -not $_.PSIsContainer}
        foreach( $file in $allFiles){
            $fileContent = get-content $file.FullName -force
            $fileContent | set-content -encoding utf8  $file.FullName -force
         }
}
ChangeEncoding("BaseDirectoryPath")</pre>
This script iterates through all the files in directories and their directories and rewrites them with correct encoding. It’s not the best solution but it works.

Little Explanation:

<span style="background-color: red;">Get-ChildItem $baseDirectory -include *.aspx,*.ascx –recurse</span>

Gets all the files with specified extensions  (aspx and ascx) , recurse option enables search through all the files in directories and subdirectories

<span style="background-color: red;">where-object { -not $_.PSIsContainer}</span>

Used to exclude directories from the files list.

This script loads the file to a temporary variable because we have to read and write the same file. Pipelined solution would be cleaner but it reads and writes the data one line at time. You can’t write and read on the same file at the same time.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>895</wp:post_id>
		<wp:post_date>2011-11-09 22:33:32</wp:post_date>
		<wp:post_date_gmt>2011-11-09 22:33:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>changing-file-encoding-in-multiple-files</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[466799648]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>98</wp:comment_id>
			<wp:comment_author><![CDATA[szm]]></wp:comment_author>
			<wp:comment_author_email>c991332@rmqkr.net</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>89.171.139.226</wp:comment_author_IP>
			<wp:comment_date>2013-02-13 15:21:00</wp:comment_date>
			<wp:comment_date_gmt>2013-02-13 14:21:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Man, this is the simplest solution I found. Thanks.

BTW commenting does not work on Opera.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[797665796]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>99</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>89.70.94.98</wp:comment_author_IP>
			<wp:comment_date>2013-02-13 18:06:00</wp:comment_date>
			<wp:comment_date_gmt>2013-02-13 17:06:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hmm.. i can't do anything about it ;/ I am dependant on external "comment" provider :) Hoperfully recent shift of opera to webkit will solve the problem. I am Glad that you liked this solution cheers.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>98</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[797665796]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[797834165]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>DBViewEngine in Asp.Net Mvc</title>
		<link>http://www.mfranc.com/uncategorized/dbviewengine-in-asp-net-mvc/</link>
		<pubDate>Sun, 22 Jan 2012 15:36:30 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/2012/01/22/dbviewengine-in-asp-net-mvc/</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify">I have been working on a simple side project. It is a idea of View Engine that uses Database in order to get Views. It is maybe not so useful scenario, but a good one to learn more about inner workings of Asp.Net MVC and also <strong>NoSql</strong> databases. There is a  big hype around <strong>NoSql</strong>. I will use <strong>RavenDB</strong> because this implementation is very close to .<strong>Net</strong> community.</p>
<p align="justify">First we will explore <strong>ViewEngines</strong> and <strong>HTML</strong> response generation,then we will move into the custom View Engine World. If you are interested dear reader then “Stay while and listen …” <img class="wlEmoticon wlEmoticon-openmouthedsmile" style="border-style: none;" src="http://www.mfranc.com/wp-content/uploads/2012/01/wlEmoticon-openmouthedsmile.png" alt="Open-mouthed smile" /></p>

<h2>ViewEngine</h2>
<strong>ViewEngine</strong> is responsible for <strong>HTML</strong> generation that is sent back to the client. Programmers with <strong>Asp.Net</strong> background should be familiar with <strong>WebForms</strong> Engine that uses <strong>&lt;% %&gt; syntax</strong> and <strong>WebControls</strong> . There are other <strong>ViewEngines</strong> like <strong>RazorEngine</strong>, which is quite popular right now, but we won’t discuss this here as it is not important for this post.

&nbsp;

<a href="http://www.mfranc.com/wp-content/uploads/2012/01/image.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: block; float: none; margin-left: auto; margin-right: auto; padding-top: 0px; border-width: 0px;" title="image" src="http://www.mfranc.com/wp-content/uploads/2012/01/image_thumb.png" alt="image" width="574" height="240" border="0" /></a>
<h3 align="center"><span style="font-weight: bold;">Pic 1. Simplified Request/Response cycle</span></h3>
&nbsp;

Every  <strong>ViewEngine</strong> implements <strong>IViewEngine</strong> interface
<pre class="lang:default decode:true">  public interface IViewEngine
  {
    ViewEngineResult FindPartialView(ControllerContext controllerContext, string partialViewName, bool useCache);
    ViewEngineResult FindView(ControllerContext controllerContext, string viewName, string masterName, bool useCache);
    void ReleaseView(ControllerContext controllerContext, IView view);
  }</pre>
This interface contains method responsible for <strong>ViewEngineResult</strong> generation,

<strong>ViewEngineResult </strong>class is a simple data container<strong> </strong>holding information about <strong>ViewEngine</strong> we are using and instance of <strong>View</strong> class.

<strong>View </strong>class is an implementation <strong>IView</strong> interface which is very simple and contains only one method.
<pre class="lang:default decode:true">  public interface IView
  {
    void Render(ViewContext viewContext, TextWriter writer);
  }</pre>
This is a very simple interface  that contains <strong>Render</strong> method which has access to <strong>TextWriter</strong> that should be used to write data that will be displayed in a response sent back to client. This is almost like <strong>Render </strong>method inside <strong>WebControls.</strong>

<strong>Ok lets go back to </strong>ViewEngine.<strong> </strong>Unfortunately, or to be honest that is a very good decision,<strong> WebFormViewEngine </strong>is not directly implementing <strong>IViewEngine.</strong>
<pre class="lang:default decode:true">  public class WebFormViewEngine : VirtualPathProviderViewEngine</pre>
There is another layer in form of <strong>VirtualPathProviderViewEngine. </strong>This class is implementing <strong>IViewEngine </strong>and is responsible for adding “physical path” support, if you want to use files stored on your server’s file system you should create custom <strong>ViewEngine</strong> that extends this class.
<h4>Summarising:</h4>
<a href="http://www.mfranc.com/wp-content/uploads/2012/01/image1.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: block; float: none; margin-left: auto; margin-right: auto; padding-top: 0px; border-width: 0px;" title="image" src="http://www.mfranc.com/wp-content/uploads/2012/01/image_thumb1.png" alt="image" width="466" height="252" border="0" /></a>
<h3 align="center"><span style="font-weight: bold;">Pic 2. Simplified WebFormsViewEngine Request/Response</span></h3>
<h2></h2>
<h2>Simple Custom ViewEngine</h2>
Ok so we <strong>“hopefully” </strong>know how the whole <strong>ViewEngine</strong> stuff works, so lets do our own one. <strong>Yey \o/</strong>

Our first <strong>ViewEngine</strong> will be very simple and we will call it <strong>HelloWorldViewEngine</strong>.
<pre class="lang:default decode:true">    public class HelloWorldViewEngine : IViewEngine
    {
        public ViewEngineResult FindPartialView(ControllerContext controllerContext,
             string partialViewName, bool useCache)
        {
            return new ViewEngineResult(new HelloWorldView(), this);
        }
        public ViewEngineResult FindView(ControllerContext controllerContext,
              string viewName, string masterName, bool useCache)
        {
            return new ViewEngineResult(new HelloWorldView(), this);
        }
        public void ReleaseView(ControllerContext controllerContext, IView view)
        {
            IDisposable disposable = view as IDisposable;
            if (disposable == null)
                return;
            disposable.Dispose();
        }
    }</pre>
<strong>ReleaseView </strong>method is a copy/paste code from Microsoft Code. As you can see this method should be used to dispose <strong>View</strong> instance.

<strong>FindPartialView</strong> and <strong>FindView</strong> methods are only returning <strong>DummyViewEngineResult</strong>. Unfortunately we had to create our own implementation of <strong>IView </strong>interface called <strong>HelloWorldView</strong> because <strong>WebFormView </strong>uses physical files and I couldn’t get it  to render something.
<pre class="lang:default decode:true">    public class HelloWorldView : IView
    {
        public void Render(ViewContext viewContext, TextWriter writer)
        {
            writer.WriteLine("Hello World");
        }
    }</pre>
This View is very simple and prints out only <strong>“Hello World”</strong> message. Cool<img class="wlEmoticon wlEmoticon-smilewithtongueout" style="border-style: none;" src="http://www.mfranc.com/wp-content/uploads/2012/01/wlEmoticon-smilewithtongueout.png" alt="Smile with tongue out" />

In order to use this <strong>“awesome” ViewEngine</strong> we have to register it inside<strong> Global.asax</strong> file.
<pre class="lang:default decode:true">protected void Application_Start()
{
      AreaRegistration.RegisterAllAreas();
      ViewEngines.Engines.Clear();
      ViewEngines.Engines.Add(new HelloWorldViewEngine());
      RegisterRoutes(RouteTable.Routes);
}</pre>
First we are clearing all the Engines that are currently used and then we are adding our own custom one.

Hopefully on the start you will see beautiful <strong>“Hello World”</strong> message <img class="wlEmoticon wlEmoticon-smile" style="border-style: none;" src="http://www.mfranc.com/wp-content/uploads/2012/01/wlEmoticon-smile.png" alt="Smile" />.

&nbsp;
<h2>DBViewEngine</h2>
I  will make Database based on RavenDB just 4fun and in order to use it for the first time.
<h4>RavenDB ?</h4>
<blockquote><a href="http://ravendb.net/documentation/docs-what-is-raven">Raven is a .NET Linq enabled Document Database, focused on providing high performance, schema-less, flexible and scalable NoSQL data store for the .NET and Windows platforms.</a></blockquote>
In short <strong>NoSql</strong> :
<h5>Pros</h5>
<ul>
	<li>Good when your app is used for many Reads</li>
	<li>Scalability benefits</li>
	<li>No strict schema&nbsp;</li>
	<li>Less problems with data mappings</li>
</ul>
<h5>Cons</h5>
<ul>
	<li>Bad when your app is used for many Writes</li>
</ul>
I won’t get into details about <strong>RavenDB </strong>so lets start implementing our first version of <strong>DBViewEngine.</strong>
<h4>RavenDB DAL</h4>
In order to retrieve data we will make a simple <strong>DAL.</strong>
<h3></h3>
<h5>Page Entity</h5>
For this simple scenario we are persisting objects only with <strong>ViewName</strong> and <strong>HTML </strong>data.
<pre class="lang:default decode:true">    public class Page
    {
        public string Html { get; set; }
        public string ViewName { get; set; }
    }</pre>
Html is an actual data that will be rendered by browser.
<h5>GetPageByViewName</h5>
<pre class="lang:default decode:true">       public Page GetPageByViewName(string viewName)
        {
            using (var session = _store.OpenSession())
            {
                return session.Query&lt;Page&gt;().Where(x =&gt; x.ViewName == viewName).FirstOrDefault();
            }
        }</pre>
A simple function to get page by viewname this one will be used by the engine to get the data about the page.

&nbsp;

<a href="http://www.mfranc.com/wp-content/uploads/2012/01/image2.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: block; float: none; margin-left: auto; margin-right: auto; padding-top: 0px; border-width: 0px;" title="image" src="http://www.mfranc.com/wp-content/uploads/2012/01/image_thumb2.png" alt="image" width="244" height="126" border="0" /></a>

In DB we gonna store two pages <strong>About </strong>and <strong>Home. </strong>They will only display simple message like “Welcome to the about page”.
<h5>ViewEngine</h5>
So now the best part. How to link <strong>ViewEngine</strong> with <strong>DB.</strong>

IViewEngine interface has a definition of <strong>FindView</strong> method. This method has all the data we want right now including <strong>ViewName</strong> parameter. So let’s implement this method.
<pre class="lang:default decode:true  crayon-selected">        public ViewEngineResult FindView(ControllerContext controllerContext,
                string viewName, string masterName, bool useCache)
        {
            var page = new PageDal().GetPageByViewName(viewName);
            return new ViewEngineResult(new DBView(page), this);
        }</pre>
Little test:

<strong>Url</strong> - <strong>/Home/About </strong>

And yuppi we have a message indicating that this is a correct site.

<a href="https://github.com/LaMik/DBViewEngine">Source Code</a>
<h2>Conclusion</h2>
Asp.Net MVC architecture is quite easy to modyfi and extend. In this post we analysed how we can implement our different <strong>ViewEngine</strong> which is using <strong>RavenDB</strong> as a source<strong> </strong>of the files,]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>905</wp:post_id>
		<wp:post_date>2012-01-22 15:36:30</wp:post_date>
		<wp:post_date_gmt>2012-01-22 15:36:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dbviewengine-in-asp-net-mvc</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[548700330]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Replacing TinyMCE popup with FancyBox</title>
		<link>http://www.mfranc.com/uncategorized/replacing-tinymce-popup-with-fancybox/</link>
		<pubDate>Fri, 27 Jan 2012 17:29:35 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/2012/01/27/replacing-tinymce-popup-with-fancybox/</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify">While designing new layout for on of the features. Our designer had an idea to replace boring <strong><a href="http://www.tinymce.com/">TinyMCE</a></strong> popups with awesome <strong><a href="http://fancybox.net/">fancybox</a></strong> solution. Well easier said than done <img style="border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none" class="wlEmoticon wlEmoticon-smile" alt="Smile" src="http://www.mfranc.com/wp-content/uploads/2012/01/wlEmoticon-smile1.png">. From technical point of view it was quite a task.</p> <p align="justify">Before doing the changes we need :</p> <p align="justify">1. <strong>fancybox </strong>script</p> <p align="justify">2. <strong><a href="http://www.tinymce.com/wiki.php/Plugin:inlinepopups">inlinepopups</a></strong><strong></strong> plugin</p> <p align="justify">InlinePopups has to be activated on editor init function. This plugin will force popups to show as a separate element on the page instead of new window, which is a default action</p> <p align="justify">&nbsp;</p> <p align="justify"><a href="http://www.mfranc.com/wp-content/uploads/2012/01/image3.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: block; float: none; margin-left: auto; border-top: 0px; margin-right: auto; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.mfranc.com/wp-content/uploads/2012/01/image_thumb3.png" width="556" height="165"></a></p> <h3 align="center"><font style="font-weight: bold">Changes to the inline popups editor_plugin.js</font></h3> <p align="justify">&nbsp;</p> <p align="justify">After this simple change default popup will be replaced with <strong>fancybox.</strong></p> <p align="justify"><a href="http://www.mfranc.com/wp-content/uploads/2012/01/image4.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: block; float: none; margin-left: auto; border-top: 0px; margin-right: auto; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.mfranc.com/wp-content/uploads/2012/01/image_thumb4.png" width="583" height="74"></a></p> <h3 align="center"><font style="font-weight: bold">TinyMCE Popup inside fancyBox</font></h3> <p align="center">&nbsp;</p> <p align="justify">There is one problem with this solution. Out of box if you have inline popups plugin you can run multiple popups ,like one popup for file browser and another for custom image browser. With changes inside inline popups that supports <strong>fancybox</strong> you are not able to open two popups because <strong>fancybox</strong> doesn’t support multiple instances running in the same time. One of the solutions would involve opening first fancy back after closing second fancy. </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>912</wp:post_id>
		<wp:post_date>2012-01-27 17:29:35</wp:post_date>
		<wp:post_date_gmt>2012-01-27 17:29:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>replacing-tinymce-popup-with-fancybox</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[554799862]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>65</wp:comment_id>
			<wp:comment_author><![CDATA[Guset]]></wp:comment_author>
			<wp:comment_author_email>guset@google.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-03-08 00:34:00</wp:comment_date>
			<wp:comment_date_gmt>2012-03-08 00:34:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I've error: The requested content cannot be loaded. Please try again later.
Any solution for this error?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[459364451]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>My Personal Task (Life) Management</title>
		<link>http://www.mfranc.com/uncategorized/my-personal-task-life-management/</link>
		<pubDate>Thu, 09 Feb 2012 20:54:32 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/2012/02/09/my-personal-task-life-management/</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify">Once upon a time there was a pure chaos in my life. Do whatever you want and whenever you have time. That was fun … for a while. When I was studying this worked fine, but&nbsp; then I started working and suddenly everything changed. Time became very expensive. I realized that it’s time to try and manage this chaos by organizational changes. This would hopefully get me more valuable time or at least I would be able to use it wisely.</p> <p align="justify">I started with <strong>GTD (Getting Things Done).</strong> Applied and tried it for about a year, but …. Well as usual I overcomplicated this simple solution with time estimations, time tracking. It started to feel like, I was spending most of the time maintaining <strong>GTD </strong>lists. It was getting more and more complicated. Something was wrong it shouldn’t supposed to work like that. My precious time was wasted on “management”.</p> <p align="justify">Again I had to change my planning. <strong>GTD</strong> wasn’t for me. I stumbled upon one of the presentation in Krakow by <a href="http://blog.brodzinski.com/"><strong>Paweł Brodziński</strong></a> about <strong>Kanban. </strong>Presentation about project planning on cork board seemed cool and nice, I bought cork board some stickers and tried something new.</p> <p align="justify">In this post, I will describe my current time/task management workflow which is at the moment working quite fine ( maybe because of the "new thing” hype <img style="border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none" class="wlEmoticon wlEmoticon-smilewithtongueout" alt="Smile with tongue out" src="http://www.mfranc.com/wp-content/uploads/2012/02/wlEmoticon-smilewithtongueout.png"> ).</p> <h4 align="justify">Long Term Planning</h4> <p align="justify">First of all let’s start with something that everyone should do from time to time. <strong>Long Term Planning. </strong>Before doing anything else, I am thinking about what I m going to do this month, year and what kind of goals, I want to accomplish, in the long run. This is really important, because it lets me think about my life and where should I go next. </p> <p align="justify">I divide stuff into <strong>four</strong> areas<strong>:</strong></p> <ol> <li> <div align="justify"><strong>Personal – </strong>friends, family, girlfriend etc.</div> <li> <div align="justify"><strong>Physical – </strong>health, fitness, activities etc..</div> <li> <div align="justify"><strong>Technical&nbsp; - </strong>programming, math, algorithms etc.</div> <li> <div align="justify"><strong>Social</strong> – planning, speaking, teaching, managing etc..</div></li></ol> <p align="justify">Of course I will change this list a bit in the course of the year. But those are always minor tweaks. Also those points will provide nice knowledge about myself in the future.</p> <p align="justify">It is really important to have a game plan of your life <img style="border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none" class="wlEmoticon wlEmoticon-winkingsmile" alt="Winking smile" src="http://www.mfranc.com/wp-content/uploads/2012/02/wlEmoticon-winkingsmile.png">. Life is very complicated and most of the time we can only adapt to the situations. Control can be easily lost. With long term plans, I feel more secure for such situations.</p> <h4 align="justify">Personal Kanban</h4> <p align="justify">I mentioned <a href="http://blog.brodzinski.com/"><strong>Paweł Brodziński</strong></a>&nbsp; and <strong>Kanban </strong>with some try and errors, I managed to create my own workflow for tasks. Cork board and sticky notes are really awesome. </p> <p align="justify"><a href="http://www.mfranc.com/wp-content/uploads/2012/02/image.png"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; margin-left: auto; border-left-width: 0px; margin-right: auto; padding-top: 0px" title="image" border="0" alt="image" src="http://www.mfranc.com/wp-content/uploads/2012/02/image_thumb.png" width="523" height="331"></a></p> <p align="justify">&nbsp;</p> <p align="justify">This is my awesome board. I Divide it into <strong>four</strong> areas.</p> <p align="justify">&nbsp;</p> <p align="justify"><a href="http://www.mfranc.com/wp-content/uploads/2012/02/image1.png"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; margin-left: auto; border-left-width: 0px; margin-right: auto; padding-top: 0px" title="image" border="0" alt="image" src="http://www.mfranc.com/wp-content/uploads/2012/02/image_thumb1.png" width="521" height="336"></a></p> <ol> <li> <div align="justify"><strong>Waiting</strong> – tasks that are waiting to be done</div> <li> <div align="justify"><strong>Doing</strong> – tasks that. I am currently working on</div> <li> <div align="justify"><strong>Done</strong> – tasks that have been finished in the current week</div> <li> <div align="justify"><strong>Week log</strong> – place for finished tasks from previous weeks, there are four stacks for each week, so I have log of what I did in this month</div></li></ol> <p align="justify"><strong></strong><a href="http://www.mfranc.com/wp-content/uploads/2012/02/image2.png"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; margin-left: auto; border-left-width: 0px; margin-right: auto; padding-top: 0px" title="image" border="0" alt="image" src="http://www.mfranc.com/wp-content/uploads/2012/02/image_thumb2.png" width="245" height="304"></a></p> <p align="justify">Between areas <strong>Doing</strong> and <strong>Done,</strong> I have two narrow openings that can contain only two tasks. Those are things that, I am working atm.</p> <p align="justify">Sticky notes are in different <strong>color</strong> and of course this also has it’s purpose. Tasks are divided into six groups.</p> <ul> <li> <div align="justify"><strong>red</strong> – important</div> <li> <div align="justify"><strong>green</strong> – learn</div> <li> <div align="justify"><strong>blue</strong> – blog</div> <li> <div align="justify"><strong>pink</strong> – events,speaker</div> <li> <div align="justify"><strong>orange</strong>- projects</div> <li> <div align="justify"><strong>yellow</strong> – personal</div></li></ul> <p align="justify"><a href="http://www.mfranc.com/wp-content/uploads/2012/02/image3.png"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; margin-left: auto; border-left-width: 0px; margin-right: auto; padding-top: 0px" title="image" border="0" alt="image" src="http://www.mfranc.com/wp-content/uploads/2012/02/image_thumb3.png" width="189" height="244"></a></p> <p align="justify">There are also tasks that have two colors like on this screen. That means that this task is in two groups and in this case, when I finish the project I will write a blog post about it <img style="border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none" class="wlEmoticon wlEmoticon-smilewithtongueout" alt="Smile with tongue out" src="http://www.mfranc.com/wp-content/uploads/2012/02/wlEmoticon-smilewithtongueout.png"></p> <p align="justify">&nbsp;</p> <h4 align="justify">Cork Board vs Software</h4> <p align="justify">At first I was a bit reluctant to use cork board and old fashioned sticky notes.</p> <p align="justify">Now I only can only say that it is awesome <img style="border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none" class="wlEmoticon wlEmoticon-winkingsmile" alt="Winking smile" src="http://www.mfranc.com/wp-content/uploads/2012/02/wlEmoticon-winkingsmile.png"></p> <ul> <li> <div align="justify">Cork board is always visible. You don’t need to switch windows or buy new screen.</div> <li> <div align="justify">It has limited space. So I am not able to add hundreds of not important tasks <img style="border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none" class="wlEmoticon wlEmoticon-winkingsmile" alt="Winking smile" src="http://www.mfranc.com/wp-content/uploads/2012/02/wlEmoticon-winkingsmile.png"></div> <li> <div align="justify">it forces you to do something physical, move your body. That’s quire engaging and brain loves it.</div></li></ul> <p align="justify">There is only one problem with this. What to do with recursive tasks ? Tasks that are repeating all the time. For those tasks I m using an android app called Due Today. It is really awesome and handy. Maybe in the future, I will find way to incorporate this logic into board.A lot will change, and I will adapt some things but that’s the beauty of this. By try and error I m creating something that feels good at the moment and is quite motivating <img style="border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none" class="wlEmoticon wlEmoticon-smile" alt="Smile" src="http://www.mfranc.com/wp-content/uploads/2012/02/wlEmoticon-smile.png"> (because I feel the freshness in it)</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>924</wp:post_id>
		<wp:post_date>2012-02-09 20:54:32</wp:post_date>
		<wp:post_date_gmt>2012-02-09 20:54:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-personal-task-life-management</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[570440346]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>60</wp:comment_id>
			<wp:comment_author><![CDATA[Tom Bombadil]]></wp:comment_author>
			<wp:comment_author_email>tom_bombadil@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-09 21:39:00</wp:comment_date>
			<wp:comment_date_gmt>2012-02-09 21:39:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA["I divide stuff into four areas:
Personal – friends, family, girlfriend [...]"

girlfriend? yeah, right ;p]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[434387134]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>63</wp:comment_id>
			<wp:comment_author><![CDATA[Maritza van den Heuvel]]></wp:comment_author>
			<wp:comment_author_email>maritzav@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://scrumfamily.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-02-20 22:19:00</wp:comment_date>
			<wp:comment_date_gmt>2012-02-20 22:19:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Your blog post made me smile. :) I was also drawn to Kanban for personal use because my life became more complicated, especially as I'm a working parent with two children at school and numerous projects/pastimes that require my attention. 

I've now been using Personal Kanban for almost 2 years to organize our family and my personal workload, and it really has made a huge positive impact in my life. Because your kanban keeps evolving with you, it also doesn't become boring!

Regarding recurring tasks, there are many creative ways to do this. One way we are currently using, is permanent cards. We have cards that we reuse, e.g. wash the car. At our family's weekly planning meeting, we check all the permanent cards to see if any of them are needed for the coming week/weekend, and put them in "To Do" for the week. After Done, they go back to- the box to be reused next week. This works well for tasks with a weekly or bi-weekly cadence. ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[444331798]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>66</wp:comment_id>
			<wp:comment_author><![CDATA[szafa]]></wp:comment_author>
			<wp:comment_author_email>gszafa@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP></wp:comment_author_IP>
			<wp:comment_date>2012-03-17 15:01:00</wp:comment_date>
			<wp:comment_date_gmt>2012-03-17 15:01:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[fajne :) daj znać jak ruszysz z tym pełną parą - chętnie poczytam... pomysł z cork boardem niezły... ale preferuję jego elektroniczną wersje ;) + tickety :D]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[467784282]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>67</wp:comment_id>
			<wp:comment_author><![CDATA[MichalFranc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>178.235.30.235</wp:comment_author_IP>
			<wp:comment_date>2012-04-06 20:17:00</wp:comment_date>
			<wp:comment_date_gmt>2012-04-06 20:17:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow that's a quite nice idea ;) I will try to reuse some tasks, maybe with some kind of a business card like notes.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>63</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[444331798]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[489251507]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>RegExp Fun&#8211;Match/Replace in lines without specific word</title>
		<link>http://www.mfranc.com/uncategorized/regexp-funmatchreplace-in-lines-without-specific-word/</link>
		<pubDate>Mon, 02 Apr 2012 18:31:56 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/2012/04/02/regexp-funmatchreplace-in-lines-without-specific-word/</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Problem</h2>
Today in work I got a nice task.

For given  <a href="http://www.mfranc.com/wp-content/uploads/2012/04/image.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: block; float: none; margin-left: auto; margin-right: auto; padding-top: 0px; border: 0px;" title="image" src="http://www.mfranc.com/wp-content/uploads/2012/04/image_thumb.png" alt="image" width="629" height="72" border="0" /></a>

Make a <strong>RegExp</strong> to transform each line and <strong>Path</strong> value, In a way that not minified <strong>javascript</strong> files (without <strong>min.js</strong> extension) should point to <strong>/min/</strong> folder.
<h3>For Example:</h3>
<a href="http://www.mfranc.com/wp-content/uploads/2012/04/image1.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: block; float: none; margin-left: auto; margin-right: auto; padding-top: 0px; border: 0px;" title="image" src="http://www.mfranc.com/wp-content/uploads/2012/04/image_thumb1.png" alt="image" width="597" height="41" border="0" /></a>
<h3>Should Transform to:</h3>
<a href="http://www.mfranc.com/wp-content/uploads/2012/04/image2.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: block; float: none; margin-left: auto; margin-right: auto; padding-top: 0px; border: 0px;" title="image" src="http://www.mfranc.com/wp-content/uploads/2012/04/image_thumb2.png" alt="image" width="596" height="29" border="0" /></a>

Because I love experimenting with Regular Expressions. I happily dropped everything and started looking for solution . This seemed pretty simple ... but ... i had to spent like 30 min to find it.
<h2>Solution</h2>
<h3>Expression</h3>
<a href="http://www.mfranc.com/wp-content/uploads/2012/04/image3.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: block; float: none; margin-left: auto; margin-right: auto; padding-top: 0px; border: 0px;" title="image" src="http://www.mfranc.com/wp-content/uploads/2012/04/image_thumb3.png" alt="image" width="482" height="26" border="0" /></a>

Most important part of this solution is <strong>(?!.*min) . </strong>This expression will try to look for <strong>min</strong> word in matched data and if it wont find it there whole match is discarded.

For further replacement procedure, I m specifying two matched groups that will be used to construct new <strong>Path</strong>. <strong>(?&lt;path&gt;.*)/(?&lt;end&gt;.*) </strong>This will match everything to last possible<strong> “/”</strong> and make group named <strong>path,</strong> then every character after <strong>“/”</strong> is put into <strong>end </strong>group.
<h3>Replace Expression</h3>
<a href="http://www.mfranc.com/wp-content/uploads/2012/04/image4.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: block; float: none; margin-left: auto; margin-right: auto; padding-top: 0px; border: 0px;" title="image" src="http://www.mfranc.com/wp-content/uploads/2012/04/image_thumb4.png" alt="image" width="390" height="30" border="0" /></a>

Replace expression uses matched groups like simple variables to construct new <strong>Path.</strong>
<h3>The end result is</h3>
<a href="http://www.mfranc.com/wp-content/uploads/2012/04/image5.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: block; float: none; margin-left: auto; margin-right: auto; padding-top: 0px; border: 0px;" title="image" src="http://www.mfranc.com/wp-content/uploads/2012/04/image_thumb5.png" alt="image" width="623" height="79" border="0" /></a>

Making <strong>RegExp</strong> is like scientific discovery or complex mathematic problem. You have to really think a lot to find a nice solution.

For experiments I recommend

<strong><a href="http://www.radsoftware.com.au/regexdesigner/"><span style="font-size: x-small;">Rad Software Regular Expression Designer</span></a></strong>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>937</wp:post_id>
		<wp:post_date>2012-04-02 18:31:56</wp:post_date>
		<wp:post_date_gmt>2012-04-02 18:31:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>regexp-funmatchreplace-in-lines-without-specific-word</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="regexp"><![CDATA[regexp]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[633986630]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>R# Gem&#8211;switch/case enum generation</title>
		<link>http://www.mfranc.com/uncategorized/r-gemswitchcase-enum-generation/</link>
		<pubDate>Fri, 06 Apr 2012 20:14:01 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=947</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify">I have been using <strong>R#</strong> for about one year. This is a very good addin to <strong>Visual Studio</strong> , I am not able to work without it anymore <img class="wlEmoticon wlEmoticon-winkingsmile" style="border-style: none;" src="http://www.mfranc.com/wp-content/uploads/2012/04/wlEmoticon-winkingsmile1.png" alt="Winking smile" /></p>
<p align="justify">It provides a lot of cool stuff. Best features ? Simplified navigation with <strong>Ctr+T </strong>and <strong>Shift+Alt+T, </strong>code inspections and great code generation.</p>
<p align="justify">One of the neat features I recently discovered, is <strong>switch / case</strong> generation from <strong>enum</strong> type.</p>
<p align="justify"><a href="http://www.mfranc.com/wp-content/uploads/2012/04/image6.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: block; float: none; margin-left: auto; margin-right: auto; padding-top: 0px; border: 0px;" title="image" src="http://www.mfranc.com/wp-content/uploads/2012/04/image_thumb6.png" alt="image" width="338" height="129" border="0" /></a></p>
<p align="justify"><a href="http://www.mfranc.com/wp-content/uploads/2012/04/image7.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: block; float: none; margin-left: auto; margin-right: auto; padding-top: 0px; border: 0px;" title="image" src="http://www.mfranc.com/wp-content/uploads/2012/04/image_thumb7.png" alt="image" width="488" height="363" border="0" /></a></p>
<p align="justify">Writing this switch manually would take like five minutes to write <img class="wlEmoticon wlEmoticon-winkingsmile" style="border-style: none;" src="http://www.mfranc.com/wp-content/uploads/2012/04/wlEmoticon-winkingsmile1.png" alt="Winking smile" />. With <strong>R# </strong>we can do this almost instantly just with <strong>Alt+Enter.</strong></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>947</wp:post_id>
		<wp:post_date>2012-04-06 20:14:01</wp:post_date>
		<wp:post_date_gmt>2012-04-06 20:14:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>r-gemswitchcase-enum-generation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="r"><![CDATA[R#]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[639331017]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>69</wp:comment_id>
			<wp:comment_author><![CDATA[Nilp]]></wp:comment_author>
			<wp:comment_author_email>not_existing@mail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>89.151.14.116</wp:comment_author_IP>
			<wp:comment_date>2012-04-08 17:36:00</wp:comment_date>
			<wp:comment_date_gmt>2012-04-08 17:36:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It looks a bit like architecture problem ;-) but ok, that could be only example ;-)

(if not, strategy ;-) )]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[491673587]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>70</wp:comment_id>
			<wp:comment_author><![CDATA[MichalFranc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>109.199.18.94</wp:comment_author_IP>
			<wp:comment_date>2012-04-08 19:33:00</wp:comment_date>
			<wp:comment_date_gmt>2012-04-08 19:33:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I dont like overcomplicated solutions for simple problems ;) Right now this switch is used for very simple operation.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>69</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[491673587]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[491736819]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Testing Serialization with NUnit and Continuous Tests</title>
		<link>http://www.mfranc.com/uncategorized/testing-serialization-with-nunit-and-continuous-tests/</link>
		<pubDate>Sun, 22 Apr 2012 21:25:20 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=961</guid>
		<description></description>
		<content:encoded><![CDATA[<p>In this post I want to present a solution that, I am using to test serialization in one of my projects. This project is a <strong>web application</strong> and a lot of communication is performed through <strong>JSON</strong> formatted messages. It is really important to be sure if it is working. With serialization we can only find potential mistakes and errors on the runtime. By finding problems early you can eliminate more complex and costly bugs in the future. <h4>Json Serialization</h4> <p>For serialization, I am using <a href="http://nuget.org/packages/newtonsoft.json"><strong>Json.Net</strong></a><strong>&nbsp;</strong>it is quite popular and stable library. All my objects that are being serialized, implement <strong>IJsonable </strong>interface. This gives me easy way to find and check if particular class is serialized somewhere.&nbsp; It is very important information. At my company we had recently problem with some objects because someone wasn’t sure if one of the class is serialized or not. This caused some “unsupported” behavior on the server that was desterilizing data. <p><a href="http://www.mfranc.com/wp-content/uploads/2012/04/image8.png"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; margin-left: auto; border-left-width: 0px; margin-right: auto; padding-top: 0px" title="image" border="0" alt="image" src="http://www.mfranc.com/wp-content/uploads/2012/04/image_thumb8.png" width="244" height="84"></a>&nbsp; <p>This interface contains only one method returning just object. With this solution, I can return either <strong>anonymous type</strong> or another class, typically <strong>DTO ( Data Transfer Object )</strong> that contains only simple easily serialized data (eg. <strong>Value Types </strong>). <h5>Example:</h5> <p><a href="http://www.mfranc.com/wp-content/uploads/2012/04/image9.png"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; margin-left: auto; border-left-width: 0px; margin-right: auto; padding-top: 0px" title="image" border="0" alt="image" src="http://www.mfranc.com/wp-content/uploads/2012/04/image_thumb9.png" width="418" height="327"></a>  <p>This is quite simple model. It contains four simple types and <strong>DashBoardControlType, </strong>it<strong> </strong>is just an <strong>Enum</strong>. Method<strong> </strong><strong>ToJson() </strong>is used to create anonymous object. In this example I am creating anonymous type. <p><a href="http://www.mfranc.com/wp-content/uploads/2012/04/image10.png"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; margin-left: auto; border-left-width: 0px; margin-right: auto; padding-top: 0px" title="image" border="0" alt="image" src="http://www.mfranc.com/wp-content/uploads/2012/04/image_thumb10.png" width="488" height="28"></a>  <p>This object is then used with <strong>Json.Net </strong>library to create <strong>JSON</strong> string. <p>One of the problems with serialization is that errors are noticed on the runtime. If my program compiles it doesn’t mean that I won’t have any problems. One of the common mistakes in classes being serialized, is too complex logic. For instance one class can have some value dependent on some external dependency. Creator of this class assumed that it will be serialized only in context that has connection to this dependency. Someone without broad knowledge of the system could forget about this and use this class in another context that is lacking access to it. <p>Good example of that kind of situation is accessing <strong>State</strong> of the application through the <strong>HttpContext. </strong>Our class has a property that on the get method is accessing <strong>HttpContext. </strong>I won’t see the problem if class will be used in my scenario, but later if someone will try to serialize this class in other environment that doesn’t have access to the <strong>HttpContext, </strong>a null reference exception will be thrown. It is really important to test if this kind of situation happens. To check it, I am using very simple test. <h4>Testing Serialization</h4> <p>Let's discuss this simple test procedure.</p> <p><a href="http://www.mfranc.com/wp-content/uploads/2012/04/image12.png"><img style="background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.mfranc.com/wp-content/uploads/2012/04/image12_thumb.png" width="667" height="358"></a> </p> <p>With <strong>IJsonable </strong>interface and reflection, I can easily obtain all the types of the classes to test. Simple <strong>Linq</strong> query filters out all the classes in specified assembly, within specified namespace with defined <strong>IJsonable </strong>interface. Then for each class <strong>Activator </strong>is used to create instance of the class. Newly created object is serialized and If there is an error, name of the type is added to the list.  <p>This test is using <strong>NUnit </strong>framework<strong>. </strong>Unit test runner provides perfect environment, that lacks all dependencies, so there will be errors if someone makes a class that will for example access <strong>HttpContext </strong>directly.  <p>With this simple check we can almost be sure that we won’t get any stupid errors and we can easily see that something is wrong with our model. <h4>Continuous Tests</h4> <p>Running tests each time, I am making a change can become … pain in … <img style="border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none" class="wlEmoticon wlEmoticon-smilewithtongueout" alt="Smile with tongue out" src="http://www.mfranc.com/wp-content/uploads/2012/04/wlEmoticon-smilewithtongueout.png"> With <strong>Resharper</strong> it is much easier, but still sometimes I will forget to do this and then beautiful message from our Jenkins server will notify me about some fail. It would be a lot better if this information would be instant. There is a solution to this called <strong>Continuous Tests. </strong> <p>I started using <strong><a href="http://continuoustests.com/">Mighty Moose</a></strong> recently. It is a plugin to <strong>Visual Studio </strong>that creates a test runner in the background. This runner analyses all the changes made in the code and on simple <strong>CTRL+S (Save) ,</strong>if it detects that recent change in the code affects tests, lined test will be executed automatically.  <p>For example in serialization logic, discussed in this post, this kind of instant information can be critical. Each time I change something in the model ( some property for example ). Test is performed automatically and I will get information if this works or not. This is even better in situation when one of my colleagues is changing something inside my code. He won’t be always aware that this code is covered by unit tests, and Continuous Tests runner will notify him about this and also will inform him automatically if this change is failing tests.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>961</wp:post_id>
		<wp:post_date>2012-04-22 21:25:20</wp:post_date>
		<wp:post_date_gmt>2012-04-22 21:25:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>testing-serialization-with-nunit-and-continuous-tests</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[660047815]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Codereview &#8211; Replacing chars</title>
		<link>http://www.mfranc.com/uncategorized/codereview-replacing-chars/</link>
		<pubDate>Sun, 17 Jun 2012 17:54:20 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=972</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify">One of my friends asked me for help with his code. He had a simple error with <strong>IndexOutOfBound </strong>exception, it was quite simple but I had other suggestion to his code.&nbsp; Hopefully this post will help other <strong>“starting”</strong> programmers by providing good tips and some ideas relating the code and refactorization.</p> <h2 align="justify">Initial Code</h2> <p align="justify"><a href="http://www.mfranc.com/wp-content/uploads/2012/06/image.png"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; margin-left: auto; border-left-width: 0px; margin-right: auto; padding-top: 0px" title="image" border="0" alt="image" src="http://www.mfranc.com/wp-content/uploads/2012/06/image_thumb.png" width="505" height="382"></a></p> <p align="justify">Here is the code. This method takes <strong>string</strong> as a parameter and returns another <strong>string</strong>. It is not obvious but this function is supposed to change Polish characters to other chars in order to clean up provided parameter.</p> <h5 align="justify">Simple Example</h5> <p align="justify">For input <strong>“żenił Jak może budować”</strong> this function should return<strong> “zenil Jak moze budowac”</strong></p> <p align="justify">As you can see we get rid of <strong>“ż ć ł”.</strong></p> <h5 align="justify">Error</h5> <p align="justify">There is a very simple error inside this code that gives <strong>IndexOutOfBound Exception</strong> for some cases. Code works when lengths of strings in <strong>array</strong> , <strong>array2</strong> and parameter string <strong>“str”</strong> are the same. It is clearly a problem linked with two <strong>for loops</strong> and their stop conditions.</p> <h2 align="justify">Fix in the Code</h2> <h2 align="justify"><a href="http://www.mfranc.com/wp-content/uploads/2012/06/image1.png"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; margin-left: auto; border-left-width: 0px; margin-right: auto; padding-top: 0px" title="image" border="0" alt="image" src="http://www.mfranc.com/wp-content/uploads/2012/06/image_thumb1.png" width="495" height="401"></a></h2> <p align="justify">Fix is simple and involves changes to the stop conditions inside loops. Outer loops should be dependent on length from array being changed. Inner loops is iterating through elements inside arrays that are defining char – replacer relationship.&nbsp; </p> <p align="justify">After those fixes function works fine and does the required job.</p> <h2 align="justify">Refactorization</h2> <p align="justify">After fixing the bug let’s talk about quality of the code, conventions and refactorization. </p> <p align="justify">First of all I don’t like the name of the function - <strong>“replace_pl” </strong>, this one doesn’t fit into standard <strong>camel case </strong>convention in <strong>.Net, a</strong>lso this name gives us little information about purpose of the function. Only clear message is that it replaces something, we don’t know what kind of thing. I changed the name to <strong>ReplacePolishChars, </strong>a lot better and quite descriptive.</p> <p align="justify">Then I changed the parameter name and name of the object that will be returned to <strong>”inputString”</strong> and <strong>“outputString”</strong> . With names containing&nbsp; <strong>input</strong> and <strong>output, </strong>I can easily track variables that are visible to the user of the method.</p> <p align="justify">Internal variables <strong>array</strong> and <strong>array2,</strong> that’s also a bad idea. From their names we don’t know what’s their usage and purpose. We need to analyze code in order to get the general idea what are they. I changed their names to <strong>“polishChars” </strong>and<strong> “replacers”</strong> now we know&nbsp; (I don’t like the idea of two strings here but I will get back to this later ) .</p> <p align="justify">&nbsp;</p> <p align="justify"><a href="http://www.mfranc.com/wp-content/uploads/2012/06/image2.png"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; margin-left: auto; border-left-width: 0px; margin-right: auto; padding-top: 0px" title="image" border="0" alt="image" src="http://www.mfranc.com/wp-content/uploads/2012/06/image_thumb2.png" width="514" height="359"></a></p> <p align="justify"></p> <p align="justify">&nbsp;</p> <p align="justify">This code can be refactored further. Instead of <strong>“==” </strong>operator we could use <strong>.Equals</strong> or <strong>Compare. For</strong> loops could be replaced with <strong>enumarator</strong> and <strong>foreach.</strong></p> <h2 align="justify">Better Approach</h2> <p align="justify">I mentioned earlier that I don’t like the idea with two <strong>strings</strong> containing data about chars being replaced and their replacers. With string you have to remember correct order, little change can cause painful and&nbsp; <strong>“hidden” </strong>bugs. It is also hard to track which pair of <strong>char </strong>and its <strong>replacer</strong>.</p> <p align="justify">It is better to use <strong>Dictionary</strong> with key equal to char being replaced and value equal to his replacer. With this solution we can delete one for loop and just check for each char in <strong>“inputString”</strong> if there is a key for it, and if it is just replace current char with value from the <strong>Dictionary</strong>.</p> <p align="justify">&nbsp;</p> <p align="justify"><a href="http://www.mfranc.com/wp-content/uploads/2012/06/image3.png"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; margin-left: auto; border-left-width: 0px; margin-right: auto; padding-top: 0px" title="image" border="0" alt="image" src="http://www.mfranc.com/wp-content/uploads/2012/06/image_thumb3.png" width="510" height="413"></a></p> <p align="justify"></p> <p align="justify"></p> <p align="justify"></p> <p align="justify">&nbsp;</p> <p align="justify">With dictionary we can easily add new chars to be replaced, also it is a lot easier to track which char is replacing another one <img style="border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none" class="wlEmoticon wlEmoticon-winkingsmile" alt="Winking smile" src="http://www.mfranc.com/wp-content/uploads/2012/06/wlEmoticon-winkingsmile.png"></p> <h2 align="justify">Conclusion</h2> <p align="justify">Remember about the standards and conventions. Name your methods and variables accordingly retain nice descriptive style without using the comments. Commenting should be only used in special cases.&nbsp; Try to find different approaches and it is always good idea to <strong>code review </strong>your creations . Fresh pair of eyes is always helpful.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>972</wp:post_id>
		<wp:post_date>2012-06-17 17:54:20</wp:post_date>
		<wp:post_date_gmt>2012-06-17 17:54:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>codereview-replacing-chars</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="codereview"><![CDATA[codereview]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[731565458]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>76</wp:comment_id>
			<wp:comment_author><![CDATA[Pawel Klimczyk]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/PawelKlimczyk</wp:comment_author_url>
			<wp:comment_author_IP>212.87.246.17</wp:comment_author_IP>
			<wp:comment_date>2012-07-19 07:59:00</wp:comment_date>
			<wp:comment_date_gmt>2012-07-19 07:59:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[The solution with dictionary looks most appropriate ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[591785951]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>110</wp:comment_id>
			<wp:comment_author><![CDATA[Adam Stępień]]></wp:comment_author>
			<wp:comment_author_email>cm3_stepien@poczta.fm</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>31.174.218.73</wp:comment_author_IP>
			<wp:comment_date>2013-03-03 19:54:00</wp:comment_date>
			<wp:comment_date_gmt>2013-03-03 18:54:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What i want to recommend is creating string extensions. You can use a method in StringExtension in order to automaticaly remove polish-related chars in any string.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[818283513]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>111</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>83.17.97.234</wp:comment_author_IP>
			<wp:comment_date>2013-03-04 10:07:00</wp:comment_date>
			<wp:comment_date_gmt>2013-03-04 09:07:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good idea, that would be a nice next step to make this code better :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>110</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[818283513]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[818720012]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Boids Simulation &#8211; Project Overview</title>
		<link>http://www.mfranc.com/uncategorized/boids-simulation-project-overview/</link>
		<pubDate>Sat, 23 Jun 2012 19:32:58 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=986</guid>
		<description></description>
		<content:encoded><![CDATA[While studying I was doing a lot of different projects. One of them was a simple simulation of bird flock movements. This will be a series of posts about changes in this project. It will contain a lot of code reviews and development information's.

Project is hosted on <strong>GitHub</strong> if you want to follow the code and changes.

<a href="https://github.com/LaMik/SilverlightBoids">https://github.com/LaMik/SilverlightBoids</a>

I use <a href="https://trello.com/"><strong>Trello</strong></a><strong> </strong>to manage ideas, tasks, bug fixes  etc.
<h4>Project Overview</h4>
This app is simulating movement of bird flocks. Each object that is representing single bird is called <strong>BOID. </strong>Each of them can perform various actions which are influencing behavior and in the end vector, that is responsible for the movement in the next iteration.

More complex description of the algorithms involved in this project.

<a href="http://www.red3d.com/cwr/boids/">http://www.red3d.com/cwr/boids/</a>

&nbsp;

<strong>Boid</strong> is rendered as a simple pixel. There are options like
<ul>
	<li>Add new boid</li>
	<li>Add Random boid</li>
	<li>Options for different behavious</li>
</ul>
It is very simple
<h5>Simulation</h5>
Each Iteration of the simulation world is divided into these actions

<a href="http://www.mfranc.com/wp-content/uploads/2012/06/image5.png"><img style="background-image: none; padding-left: 0px; padding-right: 0px; display: block; float: none; margin-left: auto; margin-right: auto; padding-top: 0px; border: 0px;" title="image" src="http://www.mfranc.com/wp-content/uploads/2012/06/image_thumb5.png" alt="image" width="534" height="148" border="0" /></a>

For each <strong>Boid </strong>we perform <strong>Do Actions </strong>function which iterates through <strong>Action </strong>list and create a <strong>Vector </strong>class that is describing current movement and position change of the<strong> Boid. </strong>After caluclation we perform position change and <strong>Rerender</strong> of world. This is just a simple explanation of engine.
<h4>Future Changes</h4>
I want to move core logic to separated project because in the future I want to separate and support presentation layer in form of html 5 and canvas. I want to use <strong>.Net</strong> to calculate complex calculations and web service as a transport layer to the canvas rendering in the browser. I will see how it works and if there will be any performance issues then I will think about moving algorithms calculations to the javascript.

I also have to think about nice and easy <strong>Gui</strong>.
<h4>Future Features</h4>
I want to support couple of nice features in future releases
<ul>
	<li>Ability to modify\ behavioral algorithms</li>
	<li>Simple Game based on the engine</li>
	<li>Html 5 Canvas rendering + web service communication</li>
	<li>Storing state either on <strong>Redis</strong> or <strong>MsSql</strong> with <strong>NHibernate</strong> layer</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>986</wp:post_id>
		<wp:post_date>2012-06-23 19:32:58</wp:post_date>
		<wp:post_date_gmt>2012-06-23 19:32:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>boids-simulation-project-overview</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="boids"><![CDATA[boids]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[738493572]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Boids Simulation v0.0.1 &#8211; Changes</title>
		<link>http://www.mfranc.com/uncategorized/boids-simulation-v0-0-1-changes/</link>
		<pubDate>Thu, 19 Jul 2012 20:00:58 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=992</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I have made a couple of changes to Silverlight Boids project </p> <p>Functional :</p> <ul> <li>Simplified UI ( better menu)</li> <li>Ability to zoom in zoom out with ctrl+"+” , ctrl+"-”</li> <li>Load / Save Scenario ( Saved states of simulation )</li> <ul> <li>I m using <strong>Redis </strong>db to store data.</li></ul> <li>Pre defined scenarios to easily test app.</li> <li>add many <strong>boids</strong> at once</li></ul> <p>Refactorization : </p> <ul> <li>moved algorithms and calculations to new <strong>“Core” </strong>project</li> <li>replaced custom logger with <strong>NLog </strong>behind <strong>WCF service</strong></li></ul> <p>Todo :</p> <ul> <li>more cleanup, there is still big mess in some parts of the codebase</li> <li>optimize algorithms</li> <li>redesing of start page</li></ul> <p>&nbsp;</p> <p><a href="https://github.com/LaMik/SilverlightBoids/">Check the code</a> or <a href="http://projects.mfranc.com/project/boids/run">try out app</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>992</wp:post_id>
		<wp:post_date>2012-07-19 20:00:58</wp:post_date>
		<wp:post_date_gmt>2012-07-19 20:00:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>boids-simulation-v0-0-1-changes</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[772375546]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Interesting Links</title>
		<link>http://www.mfranc.com/uncategorized/interesting-links-1/</link>
		<pubDate>Sat, 28 Jul 2012 11:09:18 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1004</guid>
		<description></description>
		<content:encoded><![CDATA[<p>From time to time I will write a post just for “saving” interesting links for the future reference. <h4>Links:</h4> <p>&nbsp;</p> <p><strong>Software Inventory </strong></p> <p><a href="http://www.joelonsoftware.com/items/2012/07/09.html">http://www.joelonsoftware.com/items/2012/07/09.html</a></p> <p>In this post Joel points out many software development problems. If you want some advice about managing bugs, feature backlogs then check it out.\</p> <p>There is a little self promotion hidden inside the post <img style="border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none" class="wlEmoticon wlEmoticon-smile" alt="Smile" src="http://www.mfranc.com/wp-content/uploads/2012/07/wlEmoticon-smile.png">. His company created nice free project dashboard web app called <a href="https://trello.com/">Trello</a>. It’s really awesome app. I am using it for couple of projects. <br></p> <p><strong>Arrays in JS&nbsp; - [ ] or new Array()</strong></p> <p><a href="http://stackoverflow.com/questions/11500492/what-are-the-best-practices-to-follow-when-declaring-an-array-in-javascript">http://stackoverflow.com/questions/11500492/what-are-the-best-practices-to-follow-when-declaring-an-array-in-javascript</a></p> <p>I am a .Net developer but I use <strong>JS</strong> a lot. I am, not an expert and some of the things especially in <strong>JS </strong>are bizarre and weird for me. <br><br><strong>Trap of Estimations</strong></p><strong></strong> <p><a href="http://blog.brodzinski.com/2012/07/estimation-trap.html">http://blog.brodzinski.com/2012/07/estimation-trap.html</a></p> <p>I like Pawel’s blog his insights and writing is great. Lot’s of awesome tips hidden there <img style="border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none" class="wlEmoticon wlEmoticon-smile" alt="Smile" src="http://www.mfranc.com/wp-content/uploads/2012/07/wlEmoticon-smile.png">.</p> <p><br><strong>Software 80 / 20</strong></p><a href="https://owa.jetshop.se/exchweb/bin/redir.asp?URL=http://www.johndcook.com/blog/2012/07/22/80-20-software/">http://www.johndcook.com/blog/2012/07/22/80-20-software/</a><br><a href="https://owa.jetshop.se/exchweb/bin/redir.asp?URL=http://www.johndcook.com/blog/2012/07/23/80-20-software-ii/">http://www.johndcook.com/blog/2012/07/23/80-20-software-ii/</a> <p>These two posts got me thinking about <strong>80 / 20 </strong>rule which was something I treated as an “axiom”. Now I have a more "careful” approach to it.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1004</wp:post_id>
		<wp:post_date>2012-07-28 11:09:18</wp:post_date>
		<wp:post_date_gmt>2012-07-28 11:09:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>interesting-links-1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[783139915]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IPad as a 3rd monitor</title>
		<link>http://www.mfranc.com/uncategorized/ipad-as-a-3rd-monitor/</link>
		<pubDate>Wed, 08 Aug 2012 18:37:51 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1015</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I am not apple fan, but I am really surprised how useful <strong>IPad</strong> is.</p>  <p>I am mostly using it for :</p>  <ul>   <li>rss / pocket / book / mail reader </li>    <li>evernote </li>    <li>some games ( hero academy is awesome ) </li> </ul>  <p>Apart from great apps and games you can use your <strong>IPad</strong> as a 3rd monitor.</p>  <p><a href="http://www.mfranc.com/wp-content/uploads/2012/08/rculh.jpg"><img style="background-image: none; border-right-width: 0px; padding-left: 0px; padding-right: 0px; display: block; float: none; border-top-width: 0px; border-bottom-width: 0px; margin-left: auto; border-left-width: 0px; margin-right: auto; padding-top: 0px" title="rculh" border="0" alt="rculh" src="http://www.mfranc.com/wp-content/uploads/2012/08/rculh_thumb.jpg" width="634" height="476" /></a></p>  <p align="justify">This is possible thanks to <strong><a href="http://avatron.com/apps/air-display/">AirDisplay</a></strong>. This app uses <strong>WIFI</strong> network to send/receive data. Of course <strong>IPad</strong> and your <strong>PC </strong>have to be in the same network. It works really nice with <strong>win7. </strong>You can drag and drop normal windows, change layout of&#160; screens and touch events are ok (there is a little lag but I got used to it). Unfortunately screen on tablet is doesn’t have instant refresh but it’s really good if you want to show something little static.</p>  <p align="justify">For past 4 days I have been using this setup to display logs from my app. It works really awesome. In the future I will try to use this idea more. Sketching, drawing, displaying some ideas. I could even drag some window with part of the code and go to my colleague at work <img style="border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none" class="wlEmoticon wlEmoticon-smile" alt="Smile" src="http://www.mfranc.com/wp-content/uploads/2012/08/wlEmoticon-smile.png" /> that seems cool.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1015</wp:post_id>
		<wp:post_date>2012-08-08 18:37:51</wp:post_date>
		<wp:post_date_gmt>2012-08-08 18:37:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ipad-as-a-3rd-monitor</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[797802841]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Become a mentor. Refresh your cache.</title>
		<link>http://www.mfranc.com/uncategorized/become-a-mentor-refresh-your-cache/</link>
		<pubDate>Wed, 05 Sep 2012 18:56:43 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1041</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify">Recently I realized how teaching is important and how it beneficially affects not only person that is learning but also a teacher.</p>  <p align="justify">I was helping one of my friends with some design problems. Some of the questions and problems where trivial, but from time to time something awesome happened ;) My friend asked a really awesome questions that got me thinking. I realized that there is something that&#160; novice programmers have and more experienced ones are lacking, <strong>&quot;Fresh Mind&quot;</strong>. They doesn't know good practices. They doesn't have experience (either the bad or good one). They doesn't approach problems with solutions that worked before. They approach problems as something new, original and they will find ways / solutions that more experienced programmer will never find, because they tend to use their <strong>“cache”, </strong>for example design patterns.</p>  <p align="justify">My friend had a simple problem that for me, should be resolved with one obvious solution. Because of my experience I had a nice solution that proved to be working good. Of course my friend asked me why? Why this approach and not the other? To be honest I stopped thinking about this. These questions got me thinking, I had to analyze my approach and try to find answer. Apart from the answer, explanation was also very important. More experienced programmers tend to use thought “shortcuts” to explain ideas, Great example : Design Patterns. When someone says “Repository” you know how he is thinking and what he wants to do. Juniors doesn’t know this, so explanation of your solutions / ideas becomes harder.</p>  <p align="justify">Simple question why? was really awesome, I had to approach problem as it was something new to me. I had to refresh my cache. Good example of refreshing cache is code reviewing. You have to explain why this particular code is messy and problematic. This opens your mind and let's you look at the code from different angle. It will also give you new ideas and inspirations.</p>  <p align="justify">As we are learning, we have this burden which is our experience. Most of the time this memory is crucial in our jobs, but from time to time we need to forget about it. Teaching and mentoring is really beneficial and important. It helps you, but it also helps your team. In our careers, we will have to teach someone from time to time. Don’t wait for this to happen, start now with some <strong>open source project </strong>or <strong>Stackoverflow. </strong>There are millions of developers, you will find someone who needs help everywhere <img style="border-bottom-style: none; border-left-style: none; border-top-style: none; border-right-style: none" class="wlEmoticon wlEmoticon-smile" alt="Smile" src="http://www.mfranc.com/wp-content/uploads/2012/09/wlEmoticon-smile.png" /></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1041</wp:post_id>
		<wp:post_date>2012-09-05 18:56:43</wp:post_date>
		<wp:post_date_gmt>2012-09-05 18:56:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>become-a-mentor-refresh-your-cache</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[832221698]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Sonar .Net installation</title>
		<link>http://www.mfranc.com/uncategorized/sonar-net-installation/</link>
		<pubDate>Wed, 26 Sep 2012 11:43:02 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1043</guid>
		<description></description>
		<content:encoded><![CDATA[In this post I want to describe step by step process of Sonar installation for .Net .
<h3>Sonar ?</h3>
Basically  Sonar<strong> </strong>is web application that gathers data from various analytical tools available on .Net, Java <strong></strong>etc.

In .Net environment we can provide data from for example:
<ul>
	<li><strong>FxCop </strong></li>
	<li><strong>StyleCop </strong></li>
	<li><strong>Open Cover </strong></li>
</ul>
How does it look like ?. Check this <a href="http://nemo.sonarsource.org/">online repository of one of the open source projects</a>.

&nbsp;
<h3>Installation</h3>
&nbsp;
<ol>
	<li>What do I need
<ul>
	<li><a href="http://www.sonarsource.org/downloads/"><strong>Sonar</strong></a><strong> </strong></li>
	<li><a href="http://docs.codehaus.org/download/attachments/201228384/CSharpPluginsEcosystem-1.4.zip?version=2&amp;modificationDate=1347376166648"><strong>Sonar C# Ecosystem + Plugins</strong></a></li>
	<li><a href="http://docs.codehaus.org/display/SONAR/Installing+and+Configuring+Sonar+Runner"><strong>Sonar Runner</strong></a></li>
	<li><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html"><strong>Java JDK</strong></a></li>
	<li><strong>Database</strong>
<ul>
	<li>you can use embedded DB but this one is not recommended for bigger projects</li>
	<li><strong>MySql</strong> is proffered DB engine, <strong>Sonar</strong> is based on Java and its driver for <strong>MsSql</strong> doesn’t work. I tried to run it on <strong>MsSql</strong> but -unfortunately right now I wasn’t able to do this.</li>
</ul>
</li>
	<li><strong>Analytical tools</strong>
<ul>
	<li><a href="http://www.microsoft.com/en-us/download/details.aspx?id=6544">FxCop</a> – should be already installed on your system</li>
	<li><a href="http://stylecop.codeplex.com">StyleCop</a></li>
	<li><a href="https://github.com/sawilde/opencover/downloads">OpenCover</a> – best to download <strong>*.msi</strong></li>
	<li><a href="http://www.gallio.org/">Gallio</a> – test runner</li>
</ul>
</li>
</ul>
</li>
	<li>Copy sonar to some folder let’s say C:\sonar</li>
	<li>Copy sonar runner to some folder let’s say C:\sonarrunner</li>
	<li>Install JDK</li>
	<li>Install OpenCover</li>
	<li>Install Gallio</li>
	<li>Configure user Variables. Add These Values
<ul>
	<li>SONAR_RUNNER_HOME – path to sonar runner (eg: C:\sonarrunner )</li>
	<li>JAVA_HOME – path to jdk (eg: C:\Program Files\Java\jdk1.7.0_03)</li>
	<li>Path – Add path to Gallilo and sonarrrunner (eg:C:\Program Files\Gallio\bin;C:\sonarrunner\bin; )</li>
</ul>
</li>
	<li>Configure Sonar DB access
<ul>
	<li>Locate file sonar.properties (eg: c:\sonar\conf ). I n this file you will find various settings. What we want right now is to set up connection to our DB. Locate value sonar.jdbc.url. We will configure our sonar to use embedded DB. In order to do that locate Comment that explains Embedded DB connection and make sure that <strong>sonar.jdb.url:</strong> value is uncommented</li>
	<li>If you want to use <strong>MySql</strong> comment out <strong>embedded database connection</strong> and uncomment <strong>MySql</strong> connection. Make sure that <strong>Port</strong> is ok and <strong>Crendentials</strong> are ok</li>
</ul>
</li>
	<li>Installing C# Ecosystem + Plugins
<ul>
	<li>copy all the files to (eg: C:\sonar\extensions\plugins )</li>
</ul>
</li>
	<li>Running Sonar
<ul>
	<li>go to your sonar installation folder</li>
	<li>locate bin folder</li>
	<li>go to  folder with your operating system</li>
	<li>run <strong>StartSonar.bat</strong></li>
	<li>wait 1-2 minutes and check <a href="http://localhost:9000/sonar">http://localhost:9000/sonar</a></li>
	<li>if everything went ok you should see sonar starting page</li>
</ul>
</li>
	<li>Configuring Plugins
<ul>
	<li>Log in as <strong>login</strong> : admin, password : admin</li>
	<li>Go to <strong>Configuration</strong></li>
	<li>On the right side go to <strong>General Settings. </strong>Here you will find different Categories.
<ul>
	<li>C# Core
<ul>
	<li>Here you can setup path to <strong>.Net</strong> libraries. If you have them in <strong>default </strong>folders don’t change anything.</li>
</ul>
</li>
	<li>C# FxCop
<ul>
	<li>point <strong>“FxCop installation directory”</strong> to your installation folder (eg: C:\Program Files (x86)\Microsoft FxCop 1.36)</li>
</ul>
</li>
	<li>C# Gallio
<ul>
	<li>point “OpenCover install directory” to your installation folder ( eg: C:\Users\mfc\AppData\Local\Apps\OpenCover),</li>
	<li>point Gallio install directory to your installation folder</li>
	<li>Change Coverage tool to “OpenCover”</li>
</ul>
</li>
	<li>C# StyleCop
<ul>
	<li>As before point StyleCop Installation folder (eg : C:\Program Files (x86)\Microsoft StyleCop 4.3.3.0 )</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
	<li>Configuring Project File
<ul>
	<li>Each project needs his own configuration file.</li>
	<li>Go to your solution folder ( <strong>*.sln</strong> file has to be in this folder )</li>
	<li>Add two files:
<ul>
	<li><strong>sonar-project.properties</strong># Project identification
sonar.projectKey=( project key eg: MyCompany:Console_App )
sonar.projectVersion= ( project version )
sonar.projectName= ( project name displayed in dashboard eg: Console_App )
# Info required for Sonar
sonar.sources=.&nbsp;
<h6>sonar.language=cs</h6>
sonar.dotnet.visualstudio.solution.file= ( solution name eg : ConsoleApp.sln )
sonar.donet.visualstudio.testProjectPattern=( part of the name projects containg unit tests eg : *.Tests )</li>
	<li><strong>sonar-project-run.bat</strong></li>
	<li>run here just sonar-runner ( if you configured path correctly )</li>
</ul>
</li>
</ul>
</li>
	<li>Running Sonar Analysis
<ul>
	<li>execute sonar-project-run.bat – remember that instance of Sonar has to be running !</li>
</ul>
</li>
</ol>
<h4>Helpful links</h4>
<a href="http://stackoverflow.com/questions/4791051/sonar-installation-problem">http://stackoverflow.com/questions/4791051/sonar-installation-problem</a>

<a href="http://stackoverflow.com/questions/8095485/error-running-sonar-connected-to-sql-server-2005-sonar-dbo-rules-for-column-des">http://stackoverflow.com/questions/8095485/error-running-sonar-connected-to-sql-server-2005-sonar-dbo-rules-for-column-des</a>

<a href="http://www.microsoft.com/download/en/details.aspx?displaylang=en&amp;id=11774">http://www.microsoft.com/download/en/details.aspx?displaylang=en&amp;id=11774</a>

<a href="http://resources.visual-paradigm.com/index.php/tips-support/53-support/95-sql-connection-problem.html">http://resources.visual-paradigm.com/index.php/tips-support/53-support/95-sql-connection-problem.html</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1043</wp:post_id>
		<wp:post_date>2012-09-26 11:43:02</wp:post_date>
		<wp:post_date_gmt>2012-09-26 11:43:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sonar-net-installation</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[860079233]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[64]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[Sonar .Net installation]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Step by step guide on how to perform Sonar installation on .Net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[sonar-installation]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>144</wp:comment_id>
			<wp:comment_author><![CDATA[Ashok]]></wp:comment_author>
			<wp:comment_author_email>seashok.kumar82@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>192.8.229.10</wp:comment_author_IP>
			<wp:comment_date>2013-08-19 13:56:00</wp:comment_date>
			<wp:comment_date_gmt>2013-08-19 12:56:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi,


Is there any sonar tool is available for reviewing sql server stored procedure/scripts?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1006466066]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>145</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>88.156.92.183</wp:comment_author_IP>
			<wp:comment_date>2013-09-01 10:07:00</wp:comment_date>
			<wp:comment_date_gmt>2013-09-01 09:07:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey, 
I don't know of such a tool, but if you have access to something like this you can integrate a tool with Sonar.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>144</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1006466066]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1025091862]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>588</wp:comment_id>
			<wp:comment_author><![CDATA[Iwona Lalik]]></wp:comment_author>
			<wp:comment_author_email>maga1982@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>91.213.118.66</wp:comment_author_IP>
			<wp:comment_date>2015-02-25 08:36:00</wp:comment_date>
			<wp:comment_date_gmt>2015-02-25 07:36:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There should be sonar.sources instead of sources in sonar-project.properties file.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1874303053]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>592</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>82.19.201.169</wp:comment_author_IP>
			<wp:comment_date>2015-03-01 17:48:00</wp:comment_date>
			<wp:comment_date_gmt>2015-03-01 16:48:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow! Thanks, fixed]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>588</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1874303053]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1882057724]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Formal education - is it worth the time ?</title>
		<link>http://www.mfranc.com/uncategorized/formal-education-is-it-worth-the-time/</link>
		<pubDate>Fri, 02 Nov 2012 14:08:54 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1050</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify">One of my friends wants to be a developer, he is currently starting his first year on university. He asked me if he really needs formal education to become professional programmer. This is a common problem for a lot of people. I am not talking about students that are just studying because of boredom or fun. Every student that treats it as an investment will ask this question sooner or later.</p>  <p align="justify">So Is this really a good idea to spend couple of years studying? You could be gaining work experience instead. There is a huge demand for experienced programmers. To be honest the answer is simple. Of course you can become a great programmer without education. You can be awesome self taught developer. That is possible especially when you are passionate about the work. You can be a lot better than former graduates. So if this is not a necessary ingredient of potential programmer, then why to study at all?</p>  <p align="justify">I want to tell you what I gained at university and why, I think that this was a great time for me. You won't find definitive answer if you should study or not. You have to make this decision by yourself. But please &quot;stay a while and listen&quot;, at least I will try to show you my point of view, I am sure that this will be very helpful.</p>  <p align="justify">I graduated from Wroclaw University of Technology. It took me 6 years ( I was studying one more year because of math, I wanted to be better at it :)). I was mainly studying electronic, but in the last 3 years I managed to learn a lot about programming, this was also enhanced by work experience. I started my professional career on 4th year. I was also lucky, because on my faculty there was a specialization that had a lot courses about algorithms, digital image processing, probability and image recognition. There was also opportunity to learn about high level programming. I had a lot of projects and posibility to select framework and language. So i tried asm, c, cpp, c#, java, python and more. I programmed micro controllers, dsp processors, desktop apps, web apps and some simple games iwth opengl and xna. As you can see I touched a lot of technologies. I just touched not mastered them, but this was really important to try a lot of different things and find something that, I am passionate about.</p>  <p align="justify">So first of all, while studying you will have opportunity to learn a lot of different things. You will gain general knowledge, that is a great basis for further development. It just like building the house. You can't start from the roof. You need to start from the base of the building. At first you need to get concepts that are part of more specialized stuff. With the knowledge of the basics you will learn other stuff more easily.</p>  <p align="justify">While studying I had to read math books and analyse recent research documents to analyze new algorithms. What I learned ? How to read this stuff and how to analyze it. I learned how to read and filter out most important stuff. It will be a lot harder to get ideas behind garbage collection or oop, if you haven't tried c or cpp, and you haven't fought with memory leaks or procedural programming abstraction. It is also great if you know the concepts behind CPU and know how to program in asm. This gives you special perspective on whole industry even when you just want to programm simple web sites. After ccouple of years you will want to advance with your career and then this kmowledge will be crucial.</p>  <p align="justify">Programmer writes a lot of code but that is just a by product of his work, his main task is to think and find solutions, solutions that meet requirements while staying in constraints of available time and budget. You need to have a general knowledge about a lot of things in order to do this. Time when developer was only responsible for technical parts of the project are gone. In order to do your job efficently you also need business knowledge. Who is using your app? Why this product is usable to your client? What does he want to achieve with it ? You also need personal skills. That's why, while studying you have to attend classes about negotiation, philosophy, marketing, communication. Don't miss them. You need something more than just simple&#160; key stroking on your keyboard.</p>  <p align="justify">Studying is hard. After middle school you are thrown into enviroment with hard amd unknown topics. There are lot of lectures, lot of new things and unfortunately you have less time available. You need to adapt and learn how to cope with this. This hard process encourages you to push your own limits and learn, for esample time management, time prioritization. You will also gain skills that will enchance yourlearning process. This will prepare you for job, because while working you also have to learn. Programmer knowledge has to be fresh. Technology changes faster and faster, and of course you will also have less time to learn at home (familly and kids). Studying is hard but hard is good. You will be amazed at the end, how proficient you are. How easily you are digesting informations and how you are able to filter out only important stuff that matters.There is also another aspect of university that is very important, People with passion. I was very fortunate to meet people that love the same thing, share simillar attitude. I was part of student's .net group. There i found opportunty to learn people skills.</p>  <p align="justify">In the end Studying is a great time to transform from child to adult. To&#160; learn about your future life and working environment. To find your passion. To gain good general knowlegde and find your passion. You can miss this and become awesome programmer but that is your decision to make.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1050</wp:post_id>
		<wp:post_date>2012-11-02 14:08:54</wp:post_date>
		<wp:post_date_gmt>2012-11-02 14:08:54</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>formal-education-is-it-worth-the-time</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[911187973]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>81</wp:comment_id>
			<wp:comment_author><![CDATA[M. Rook]]></wp:comment_author>
			<wp:comment_author_email>lightmen@wp.pl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>31.41.239.163</wp:comment_author_IP>
			<wp:comment_date>2012-12-24 08:15:00</wp:comment_date>
			<wp:comment_date_gmt>2012-12-24 08:15:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[it's true !]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[746738566]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Log levels - my approach</title>
		<link>http://www.mfranc.com/programming/log-levels-my-approach/</link>
		<pubDate>Mon, 10 Dec 2012 20:46:02 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1056</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify">There are some options available when it comes to logging mechanisms on .Net platform. Fortunately we have standarized log levels.</p>
<p align="justify">Currently i am using mostly <a href="http://nlog-project.org/">NLog</a>,this library is very popular and at the moment has all the options i need. There is also <a href="https://nuget.org/packages/log4net">Log4Net</a> lib, bit out dated but still good, we are using it at my company mostly because it is used in open source projects integrated into our product. In this post i don’t want to go into details, I just want to talk about logging levels.</p>

<h2>Log levels</h2>
<h3 align="justify">Trace</h3>
<p align="justify">Used to log all the details of the function. Parameters, all the actions etc. I am just using it in a more complex debugging process. There is really no need to mess the log files with too much of information.</p>

<h3 align="justify">Debug</h3>
<p align="justify">Turned off by default.</p>
<p align="justify">When i am done with debugging, I am converting some of the Trace messages. Just in case I need them and part of the “fixed” code is still not stable enough. Also with some complex algorithms, I am often leaving some Debug log level messages that contain data about transformations and steps performed by the code. This is often very useful, but I am just turning this level when I need additional data.</p>

<h3 align="justify">Info</h3>
<p align="justify">Only some “big” notifications like new module activated, services started / stopped, or information that user performed some significant action like: logged out. This log should be mainly used to track the big picture and the flow of application. For more detailed information, I am using other type of messages.</p>

<h3 align="justify">Warning</h3>
<p align="justify">First of all, Expected exceptions and some weird behavior that should be noted and there is still possibility to run application. For instance there is a timed job that performs some action that is not affecting overall</p>

<h3 align="justify">Error</h3>
<p align="justify">Mostly Unhandled exceptions. Errors that are not recoverable and you can’t run the app or perform user action again.</p>

<h3 align="justify">Fatal</h3>
<p align="justify">This should be logged when some error causes destabilization of whole app and we know that this will affect all the users.</p>
<p align="justify">It can be for instance:</p>
<p align="justify">     - problem with connecting to the database.</p>
<p align="justify">     - some important config variable missing that can’t be replaced by default value.</p>
<p align="justify">Those are serious errors that should be noted as soon as possible. In one of the project i was sending this kind of errors to my mail so, I can fix them as soon as possible.</p>
<p align="justify"></p>

<h2>Important tips:</h2>
<p align="justify">- Logging everything is not the way to go. In order to create log you need to write code. Code is our enemy. More code means more maintenance and more bugs. That’s why, I am always defining my logging “strategy” eg. what i need to log, when and why. Most of the time Exception logging is all you need. That's why you have to treat log levels strategy seriously.</p>
<p align="justify">- Debugger is your friend but in some of the projects you don’t have access to production server and you won’t be able to reproduce some failure scenarios. In this situation your only source of information is the logfile</p>
<p align="justify">- Even if log file is only a text and you can open it in simple Notepad, I encourage you to use specialized tools like <a href="http://log2console.codeplex.com/">Log2Console</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1056</wp:post_id>
		<wp:post_date>2012-12-10 20:46:02</wp:post_date>
		<wp:post_date_gmt>2012-12-10 20:46:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>log-levels-my-approach</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="nlog"><![CDATA[nlog]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[967812407]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[84]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[log levels]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[There are some options available when it comes to logging mechanisms on .Net platform. Fortunately we have a standard when it comes to log levels]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[my-approach-to-logging]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Goals for year 2013</title>
		<link>http://www.mfranc.com/passion/goals-for-year-2013/</link>
		<pubDate>Wed, 19 Dec 2012 19:51:26 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1129</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="justify">It is almost the end of the year. Hopefully we will get through Armageddon on 21st December, so following <a href="http://blog.klimczyk.pl/">Pawel Klimczyk</a> idea, I am posting my own list of personal goals for 2013 year.</p>
<!---more---->
<h3>Prepare a session for <a href="http://wrocnet.org/">wroc .net</a></h3>
<p align="justify">I was planning to do this for a long time. There are couple of ideas that, I could talk about. This year, I have done some presentations for students. This was fun, I always enjoy it.</p>

<h3>Read more books / watch more screencasts / write more blog posts</h3>
<p align="justify">I have a big list of stuff. There is still <a href="http://oredev.org/">Oredev</a>, <a href="http://www.ndcoslo.com/">NDC</a> waiting, and a big pile of books. Also i have to try and write more often. One post per month is unacceptable. I increased my activity on <a href="https://twitter.com/francmichal">Twitter</a> so the time has come for blog. I have a lot ideas but motivation is not one of my best friends, also decision that I am going to write everything in English makes a lot of things difficult. I still have a lot to learn on writing not in my native language.</p>

<h3>RoR project</h3>
<p align="justify">There was a time when i only focused on .Net stack, but then I started to use GIT and I fell in love with BASH and keyboard only habit. This led me to Ruby on Rails. I am currently learning it and doing some little fun project for myself.</p>

<h3>Get Involved with some open source projects</h3>
<p align="justify">I have some little projects hosted on <a href="https://github.com/LaMik">Github</a> but still, I haven’t tasted any pull request for some open source project. This has to change. I will try and focus on some of the frameworks, I am using in my every day job and hobby projects.</p>
<p align="justify"></p>
<p align="justify">It is not so much but, I have to focus on the most important goals.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1129</wp:post_id>
		<wp:post_date>2012-12-19 19:51:26</wp:post_date>
		<wp:post_date_gmt>2012-12-19 19:51:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>goals-for-year-2013</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="passion"><![CDATA[Passion]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[983049425]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>New Design</title>
		<link>http://www.mfranc.com/blog/new-design/</link>
		<pubDate>Fri, 21 Dec 2012 22:52:10 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1159</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Hurray we have survived the armageddon. To celebrate this marvelous achievement, I redesigned my blog.</p>
<p>Well seriously my site needed new layout, fonts and colors.  Previous version was just unreadable,  I barely was able to focus on anything. My blog is mostly about content, so I wanted to shift focus onto this content. Previous version caused a lot of problems, with all the different colors, weird fonts and odd headings. There is still a lot to learn for me in the typography, editing and writing, but this new design is a first step in good direction.</p>
<p>I am planning to write more and more and more. My english is improving (slowly) and writing right now is not so a big problem, as it was like 2 years ago. I had a lot of problems with words, grammar etc. but It gets better. Those dread full deadlocks, caused by lack of the words, are becoming almost extinct. When i was starting with all this non-native writing, it was just a way to for myself to learn language. More writing means more mistakes, more mistakes equals bigger knowledge and experience.</p>
<>I am thinking about taking some writing lessons, but not the ones related with books,novels. I want to improve my editing skills a bit. What do you think about it ?</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1159</wp:post_id>
		<wp:post_date>2012-12-21 22:52:10</wp:post_date>
		<wp:post_date_gmt>2012-12-21 22:52:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>new-design</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="blog"><![CDATA[Blog]]></category>
		<category domain="post_tag" nicename="design"><![CDATA[design]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[986559524]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>82</wp:comment_id>
			<wp:comment_author><![CDATA[Pawel Sawicz]]></wp:comment_author>
			<wp:comment_author_email>info@helbards.com</wp:comment_author_email>
			<wp:comment_author_url>http://pawel.sawicz.eu/</wp:comment_author_url>
			<wp:comment_author_IP>87.105.212.76</wp:comment_author_IP>
			<wp:comment_date>2012-12-29 13:11:00</wp:comment_date>
			<wp:comment_date_gmt>2012-12-29 13:11:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I think it's better design than old one.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[750531743]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>83</wp:comment_id>
			<wp:comment_author><![CDATA[MichalFranc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>88.156.80.147</wp:comment_author_IP>
			<wp:comment_date>2012-12-29 23:49:00</wp:comment_date>
			<wp:comment_date_gmt>2012-12-29 23:49:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am still working on it :) First design now seo. Of course after theme change, I have broken my g analitycs]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>82</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[750531743]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[751024619]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Site with project - NancyFX fun</title>
		<link>http://www.mfranc.com/blog/new-simple-site-with-projects/</link>
		<pubDate>Thu, 27 Dec 2012 06:00:18 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1173</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Projects, source code, different concepts. Those are the byproducts of our work . Every programmer in his carrer develops a lot of different stuff.</p>
<p>I allways planned to host mine "toys" somewhere. Sure there there is github, assembla and other hosting possibilities, but to be honest I need more customization options, and the feeling that I can do something on my own is tempting. There is also NanyFx framework that I read good things about, I just had to try it out and created simple site <a href="http://www.projects.mfranc.com">www.projects.mfranc.com</a>.</p>
<p>This will be my playgroud for Knockout.js, Nancy framework, SignalIR, Twitter Bootstrap and other cool stuff. Nancy is quite awesome and it is a something new for me. I like the "less code" feeling. Compared to Asp.Net Mvc there is quite a huge gain in number of lines.</p>
<p>I tried out Nancy, which is based on Sinatra framework from RoR community. My first impressionit is good. I like the whole idea of writing less code. Also I think that "modules" are more readable and maintanable beacuse you are forced to simplify your "controller" layer. This leads to really good code. The only problem I had was the lack of knowledge/documentation available on the Web. While developing I enountered some problems that took me a while to fix. This won't be a problem with more mature product, bigger community and adoption rate.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1173</wp:post_id>
		<wp:post_date>2012-12-27 06:00:18</wp:post_date>
		<wp:post_date_gmt>2012-12-27 06:00:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>new-simple-site-with-projects</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="blog"><![CDATA[Blog]]></category>
		<category domain="post_tag" nicename="nancy"><![CDATA[nancy]]></category>
		<category domain="post_format" nicename="post-format-standard"><![CDATA[Standard]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[994587641]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[64]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[nancyfx]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Unit Test code with static method Console.Write</title>
		<link>http://www.mfranc.com/unit-testing/unit-test-code-with-static-method-console-write/</link>
		<pubDate>Tue, 01 Jan 2013 15:47:39 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1241</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>tl;dr : Wrap theses methods inside the layer of abstraction. Then create a stub and use it to create test scenarios.</strong>
<p>This post is based on my <a href="http://stackoverflow.com/a/13967995/104135">answer on the Stack Overflow - "How to unit test this function?"</a></p>
<p>The original question is about writing unit test for a code that uses Console methods inside its body. This problem is more general and in this post, I want to show one of the ways to unit test code with static method.</p>

<h2>Example of code with static methods</h2>
<p>This example is from the Stack Overflow question.</p>

<pre class="lang:default decode:true">public static string GetMaskedInput()
{
    string pwd = "";
    ConsoleKeyInfo key;
    do
    {
        key = Console.ReadKey(true);
        if (key.Key != ConsoleKey.Backspace &amp;&amp; key.Key != ConsoleKey.Enter)
        {
            pwd += key.KeyChar;
            Console.Write("*");
        }
        else
        {
            if (key.Key == ConsoleKey.Backspace &amp;&amp; pwd.Length &gt; 0)
            {
                pwd = pwd.Substring(0, pwd.Length - 1);
                Console.Write("\b \b");
            }
        }
    }
    while (key.Key != ConsoleKey.Enter);
    return pwd;
}</pre>
<h3>Little Explanation</h3>
Method GetMaskedInput() does two things. 

<ul>
	<li>Whenever your press a key it shows you a '*' char</li>
	<li>All the keys are also appended to the string and returned</li>
</ul>

<p>It's a simple implementation of the hidden input. Something like a password text box on login screens.</p>

<h2>Whats wrong with static method ?</h2>

<p>This sample method is highly dependant on the Console.ReadKey and Console.Write methods. Code like this is only usable when we have access to console. Running it in for instance web.app enviroment would be problematic. This is one of the reasons that static methods are evil. Not like famous "goto", beacuse there are scenarios in which statics are ok.</p>

<ul>
	<li>extension methods</li>
	<li>simple helpers with input, output contained in the scope of the function (no globals, external dependancies )</li>
</ul>

<p>Use of static methods seems like an easier solution, but in the long run, code written like this becomes problematic. It's simple, clear and easy, but when you want to write unit test there is a problem. You are not able to write correct unit test for it.</p>
<h3>What's the correct unit test ?</h3>
<ul>
	<li>it has to test unit of work</li>
	<li>contains only one assert</li>
	<li>most important it is self contained</li>
</ul>
<p>With static methods like Console.ReadKey and Console.Write you can't do it. These methods are dependant on the Windows Console implementation. We can't control this behaviour, we don't know exactly how it works inside. What we can do is to get rid of them.</p>

<h2>Getting rid of static method</h2>
<p>In this approach, I will show you how to hide "static" methods behind a layer of abstraction. Instead of using Console methods directly, let us inject some class that uses Console.</p>

<h3>New Method</h3>
<pre class="lang:default decode:true">public static string GetMaskedInput(IConsoleWrapper consoleWrapper)
{
    string pwd = "";
    ConsoleKeyInfo key;
    do
    {
        key = consoleWrapper.ReadKey(true);
        if (key.Key != ConsoleKey.Backspace &amp;&amp; key.Key != ConsoleKey.Enter)
        {
            pwd += key.KeyChar;
            consoleWrapper.Write("*");
        }
        else
        {
            if (key.Key == ConsoleKey.Backspace &amp;&amp; pwd.Length &gt; 0)
            {
                pwd = pwd.Substring(0, pwd.Length - 1);
                consoleWrapper.Write("\b \b");
            }
        }
    }
    while (key.Key != ConsoleKey.Enter);
    return pwd;
}</pre>
<h3>Interface definition</h3>
<pre class="lang:default decode:true">public interface IConsoleWrapper
{
    ConsoleKeyInfo ReadKey();
    void Write(string data);
}</pre>
<p>The sample method now have one parameter. This parameter is an interface IConsoleWrapper that has two methods. Their name is similar to the methods provided by the console Class. New code now calls the IConsoleWrapper interface. It doesn't need to know implementation details.</p>

<h3>Interface implementation</h3>
<pre class="lang:default decode:true">public class ConsoleWrapper : IConsoleWrapper
{
    public ConsoleKeyInfo ReadKey()
    {
        return Console.ReadKey(true);
    }

    public void Write(string data)
    {
        Console.Write(data);
    }
}</pre>

<p>The implementation of Console is now hidden. It was done by wrapping the static methods inside a class that can now be injected to the GetMaskedInput method.</p>

<p>We are able now to write unit test for the code.</p>

<h2>Unit Test Example with Stub</h2>
<p>In order to test this code, we can create a stub that implements the IConsoleWrapper interface. This stub will just simulate Console. We can control it's behaviour and thus create a stable test scenarios.</p>

<h3>Test Stub</h3>
<pre class="lang:default decode:true">public class ConsoleWrapperStub : IConsoleWrapper
{
    private IList keyCollection;
    private int keyIndex = 0;

    public ConsoleWrapperStub(IList keyCollection)
    {
        this.keyCollection = keyCollection;
    }

    public string Output = string.Empty;

    public ConsoleKeyInfo ReadKey()
    {
        var result = keyCollection[this.keyIndex];
        keyIndex++;
        return new ConsoleKeyInfo( (char)result ,result ,false ,false ,false);
    }

    public void Write(string data)
    {	
        Output += data;
    }
}</pre>

<p>
This stub simulates Write method by maintaing the Output variable. It's a string  and calling Write now appends this Output. We can now check the Output easily in the unit test. 
</p>
<p>
ReadKey method is simulated by returning predefined data provided through a stub constructor. This behaviour is similar to replaying a recorded message. For each test a new stub is created with predefined key collection. Each call to ReadKey returns next key from the collection.
</p>


<h3>Test</h3>
<pre class="lang:default decode:true"> [Test]
    public void If_two_chars_return_pass_and_output_coded_pass()
    {
        // Arrange
        var stub = new ConsoleWrapperStub(new List
            { ConsoleKey.A, ConsoleKey.B, ConsoleKey.Enter });
        var expectedResult = "AB";
        var expectedConsoleOutput = "**";

        // Act

        var actualResult = Program.GetMaskedInput(string.Empty, stub);

        //Assert     
        Assert.That(actualResult, Is.EqualTo(expectedResult));
        Assert.That(stub.Output, Is.EqualTo(expectedConsoleOutput));
    }</pre>


<p>
This test will simulate a scenario with user clicking A,B,Enter keys. Enter should finish the procedure. We are expecting to see two "*" chars in the output and "AB" should be returned. Test has two asserts so it's not a perfect example, but this particular logic required us to do this.
</p>


<h2>Summary</h2>

<ul>
 <li>static methods are evil get rid of them if you want to write unit test</li>
 <li>do this by hiding them behind a layer of abstraction</li>
 <li>write unit tests by mocking this layer or create a stub that simulates behaviour needed for the test</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1241</wp:post_id>
		<wp:post_date>2013-01-01 16:47:39</wp:post_date>
		<wp:post_date_gmt>2013-01-01 15:47:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>unit-test-code-with-static-method-console-write</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="programming-2"><![CDATA[programming]]></category>
		<category domain="post_tag" nicename="unit-test"><![CDATA[unit test]]></category>
		<category domain="category" nicename="unit-testing"><![CDATA[Unit Test]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[995209644]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[61]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[unit test static method]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[Unit Test code with static method Console.Write | Passionate Programmer]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Brief explanation on how to unit test code with static methods. Example on how to unit test code with Console.ReadKey and Console.Write methods.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>84</wp:comment_id>
			<wp:comment_author><![CDATA[anonymous]]></wp:comment_author>
			<wp:comment_author_email>anon@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>80.193.116.82</wp:comment_author_IP>
			<wp:comment_date>2013-01-02 09:43:00</wp:comment_date>
			<wp:comment_date_gmt>2013-01-02 08:43:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You say "static methods are evil get rid of them if you want to write unit test" but Program.GetMaskedInput is still a static method.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[753140230]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>85</wp:comment_id>
			<wp:comment_author><![CDATA[MichalFranc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>83.17.97.234</wp:comment_author_IP>
			<wp:comment_date>2013-01-02 10:27:00</wp:comment_date>
			<wp:comment_date_gmt>2013-01-02 09:27:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yep :) And you should also get rid of this function. In original question on SO it is not static. I made it like this here, just for test purposes.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>84</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[753140230]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[753161030]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>86</wp:comment_id>
			<wp:comment_author><![CDATA[macjedrzejewski]]></wp:comment_author>
			<wp:comment_author_email>mac.jedrzejewski@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.105.8.169</wp:comment_author_IP>
			<wp:comment_date>2013-01-02 20:37:00</wp:comment_date>
			<wp:comment_date_gmt>2013-01-02 19:37:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I can agree with most of your post, but not with this:
What’s the correct unit test ?
contains only one assert
There are a lot of situations in which you can not use only one assert. We should write one test for each method, but not assert. Furthermore, you have already used 2 asserts in your test - so I think, that this point is not correct - and you know it :) 
Kind regards,


MJ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[753554767]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>87</wp:comment_id>
			<wp:comment_author><![CDATA[MichalFranc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>88.156.80.147</wp:comment_author_IP>
			<wp:comment_date>2013-01-02 23:38:00</wp:comment_date>
			<wp:comment_date_gmt>2013-01-02 22:38:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[hey , tnx for this comment :) This test is not correct. Ideally i should split it into two separates tests. One checking the output. Second one checking the mask. Now i have an idea for another post :) 

Here is an example on how to fulfill one characteristic of correct unit test. Unit test is self contained and not dependant on external stuff.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>86</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[753554767]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[753731641]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>90</wp:comment_id>
			<wp:comment_author><![CDATA[Good unit test - One Assert | Passionate Programmer]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/unit-testing/good-unit-test-one-assert/</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.17</wp:comment_author_IP>
			<wp:comment_date>2013-01-09 17:00:43</wp:comment_date>
			<wp:comment_date_gmt>2013-01-09 16:00:43</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] previous post, I defined a good unit test as one [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1357747243.3713";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1357758669.3028";s:7:"message";s:42:"LaM changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>100</wp:comment_id>
			<wp:comment_author><![CDATA[Testowanie statycznych wywołań na przykładzie DateTime.Now | Maciej Aniserowicz o programowaniu]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.maciejaniserowicz.com/2013/02/14/testowanie-statycznych-wywolan-na-przykladzie-datetime-now/</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.26</wp:comment_author_IP>
			<wp:comment_date>2013-02-14 06:47:26</wp:comment_date>
			<wp:comment_date_gmt>2013-02-14 05:47:26</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] na przykład opakować statyczne metody w dedykowane obiekty implementujące proste interfejsy (jak pisał niedawno Michał Franc). [...]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1360820846.82";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1360870360.8232";s:7:"message";s:42:"LaM changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>755</wp:comment_id>
			<wp:comment_author><![CDATA[TDD / Unit Testing big list of learning resources from basics to advanced topics | Pragmatic Developer]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/uncategorized/tdd-unit-testing-big-list-of-learning-resources-from-basics-to-advanced-topics/</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.17</wp:comment_author_IP>
			<wp:comment_date>2015-05-09 00:35:59</wp:comment_date>
			<wp:comment_date_gmt>2015-05-08 23:35:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...]  [...]]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1431128159.4926";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1431202419.7002";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1431202420]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Good unit test - One Assert</title>
		<link>http://www.mfranc.com/unit-testing/good-unit-test-one-assert/</link>
		<pubDate>Wed, 09 Jan 2013 16:00:03 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1438</guid>
		<description></description>
		<content:encoded><![CDATA[In <a href="http://www.mfranc.com/unit-testing/unit-test-code-with-static-method-console-write/">previous post</a>, I defined a good unit test as one that:
<ul>
	<li>tests single unit of work</li>
	<li>contains only one assert</li>
	<li>is self contained</li>
</ul>
<p align="justify">Presented sample of code with one unit test, unfortunately had two asserts. Clear violation of the second rule. One of the fellow bloggers <a href="http://macjedrzejewski.wordpress.com/">MJ</a> pointed out this mistake. It is time to "fix" it and talk about "Only one assert per test" rule.</p>

<h2>Why only One Assert</h2>
There are couple of problems with multiple asserts.
<h3>Unit Test Misinformation</h3>
Frameworks like NUnit do notify about failing unit test when one of the asserts is not met. You get the message that some condition failed, but only this one condition. Code, behind the failing assert, is not executed. In a scenario with multiple asserts, when the first one fails, test procedure is lost and potential problem looks like related to the first assertion check. This is a misinformation.
<pre class="lang:c# decode:true">[Test]
public void GenerateDocumentNumber_when_new_document_then_contains_string_new_and_id()
{
  // Arrange
  var newString = "new";
  var id = 10;

  // Act
  var documentNumber = generator.GenerateDocumentNumber(id);

  // Assert
  Assert.That(documentNumber, Is.StringContaining(newString));
  Assert.That(documentNumber, Is.StringContaining(id));
}</pre>
Presented example tests GenerateDocumentNumber function. This function creates simple string based on provided ID.

We want to check if :
<ul>
	<li>document number contains 'id' value</li>
	<li>document number contains keyword 'new'</li>
</ul>
If procedure fails on newString assertion we know that one part of the algorithm doesnt work. The problem is that check for ID wasn't done at all. We don't know if ID is set correctly. Test like this, with multiple asserts, can't be trusted.
<h3>Complicated Tests</h3>
There is another problem with the presented unit test sample. It is too complicated. Unit test has to be focused only on one part of the algorithm. First assertion, checks if there is a 'new' keyword. Second, looks for 'ID'. Both of these scenarios are great candidates for separate test.

Also, part of the code responsible for the 'ID', is probably more general and doesnt apply only to 'new' documents scenario. It is misleading, based solely on the unit test code and the name, we can assume that 'ID' is only added to new documents code.

We can split this test in two:
<ul>
	<li>GenerateDocumentNumber_when_new_document_then_contains_string_new</li>
	<li>GenerateDocumentNumber_contains_id_of_the_document</li>
</ul>
With one assert per unit test mindset there is better chance of creating good unit test, concentrated on one particular problem.

Going back to <a href="http://www.mfranc.com/unit-testing/unit-test-code-with-static-method-console-write/">previous post</a> example.
<pre class="lang:default decode:true">[Test]
public void If_two_chars_return_pass_and_output_coded_pass()
{
   // Arrange
   var stub = new ConsoleWrapperStub(new List
   { ConsoleKey.A, ConsoleKey.B, ConsoleKey.Enter });

   var expectedResult = "AB";
   var expectedConsoleOutput = "**";

   // Act
   var actualResult = Program.GetMaskedInput(string.Empty, stub);

   //Assert     
   Assert.That(actualResult, Is.EqualTo(expectedResult));
   Assert.That(stub.Output,Is.EqualTo(expectedConsoleOutput));
}</pre>
There are three behaviours that we have to test.
<ul>
	<li>output '*' char for each char in provided password</li>
	<li>return password</li>
	<li>ConsoleKey.Enter breaks the procedure</li>
</ul>
'Output char' and 'return password' logic should be tested separaterly. The Enter key functionality is unfortunately more complicated beacuse it is mandatory in each test scenario. However still we can test some edge scenarios like "What happens when there is no Enter key ?"
<h2>One test per concept</h2>
There are of course exceptions and unit tests that could use multiple asserts.

Quote by <a href="http://osherove.com/">Roy Osherove</a> from <a href="http://www.owenpellegrin.com/blog/testing/how-do-you-solve-multiple-asserts/">Yeah it's a blog</a>
<blockquote>
<p align="justify">My guideline is usually that you test one logical CONCEPT per test. you can have multiple asserts on the same *object*. they will usually be the same concept being tested.</p>
</blockquote>
This rule allows multiple asserts but they have to be related and linked with simillar CONCEPT. For instance, this is not bad if multiple asserts are testing something like this.
<pre class="lang:default decode:true">[Test]
public void GetDocuments_returns_list_of_documents()
{
   // Act
   var documents = repository.GetDocuments();

   //Assert     
   Assert.That(documents, Is.Not.Null);
   Assert.That(documents, Is.Not.Empty);
   Assert.That(document[0], Is.Not.Null);
}</pre>
We have three asserts but they are basically testing the same thing. If one of them fails then the rest can't be ulfilled. Fail on the first one automaticlly means that whole test failed and something bad happened. Nothing is hidden.
<h2>Good Unit Test - Summary</h2>
<ul>
	<li>try to use one assert per test</li>
	<li>if there is a need for multiple asserts, remember one test per concept rule</li>
</ul>
<h3>Links</h3>
<a href="http://osherove.com/">Roy Osherove Site</a>

<a href="http://www.owenpellegrin.com/blog/testing/how-do-you-solve-multiple-asserts/">Post with solution to "hide" asserts</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1438</wp:post_id>
		<wp:post_date>2013-01-09 17:00:03</wp:post_date>
		<wp:post_date_gmt>2013-01-09 16:00:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>good-unit-test-one-assert</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unit-testing"><![CDATA[Unit Test]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[89]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[good unit test]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[One of the rules of Good unit test is "Use one assert pert test. To write good unit tests you also have to remember about "One test per concept" rule.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1006842613]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>91</wp:comment_id>
			<wp:comment_author><![CDATA[Jonathan Allen]]></wp:comment_author>
			<wp:comment_author_email>grauenwolf@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://profiles.google.com/grauenwolf</wp:comment_author_url>
			<wp:comment_author_IP>65.47.88.214</wp:comment_author_IP>
			<wp:comment_date>2013-01-09 22:36:00</wp:comment_date>
			<wp:comment_date_gmt>2013-01-09 21:36:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I don't understand why people lose their ability to write code when it comes to testing. Here is a couple good examples...

&gt; If procedure fails on newString assertion we know that one part of the algorithm doesnt work. The problem is that check for ID wasn’t done at all. We don’t know if ID is set correctly. 

That problem can be solved in less than a day. It is easy to write a test framework that allows for multiple asserts to be aggregated. 

&gt; For instance, this is not bad if multiple asserts are testing something like this.

What a waste of time. You could write a function called Assert.IsNotNullOrEmpty and reduce your line count by two-thirds.

And the asserts are wrong anyways. Since you forgot the message parameter it is impossible to tell if documents or documents[0] is null.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[761667082]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>92</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>88.156.80.147</wp:comment_author_IP>
			<wp:comment_date>2013-01-09 22:43:00</wp:comment_date>
			<wp:comment_date_gmt>2013-01-09 21:43:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[&gt; That problem can be solved in less than a day. It is easy to write a test framework that allows for multiple asserts to be aggregated.

Yep like this one here :
http://rauchy.net/oapt/

&gt;And the asserts are wrong anyways. Since you forgot the message parameter it is impossible to tell if documents or documents[0] is null.



Ouch, that is a big mistake from my side here, and propably this example is not the best one.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>91</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[761667082]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[761673620]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>241</wp:comment_id>
			<wp:comment_author><![CDATA[Robert Pająk]]></wp:comment_author>
			<wp:comment_author_email>pellared@o2.pl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>217.153.93.130</wp:comment_author_IP>
			<wp:comment_date>2014-09-10 10:37:00</wp:comment_date>
			<wp:comment_date_gmt>2014-09-10 09:37:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sometimes this is helpful: http://blog.drorhelper.com/2011/02/multiple-asserts-done-right.html]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1582264847]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>295</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>86.6.98.112</wp:comment_author_IP>
			<wp:comment_date>2014-10-12 20:09:00</wp:comment_date>
			<wp:comment_date_gmt>2014-10-12 19:09:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Useful approach when you want to test one logical thing and you might  use multiple asserts.

Thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>241</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1582264847]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1632212808]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>756</wp:comment_id>
			<wp:comment_author><![CDATA[TDD / Unit Testing big list of learning resources from basics to advanced topics | Pragmatic Developer]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/unit-testing/tdd-unit-testing-big-list-of-learning-resources-from-basics-to-advanced-topics/</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.17</wp:comment_author_IP>
			<wp:comment_date>2015-05-09 00:37:11</wp:comment_date>
			<wp:comment_date_gmt>2015-05-08 23:37:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...]  [...]]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1431128231.6528";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1431202419.6222";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1431202419]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Extending git with custom command</title>
		<link>http://www.mfranc.com/tools/git-custom-command/</link>
		<pubDate>Mon, 14 Jan 2013 09:00:32 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1488</guid>
		<description></description>
		<content:encoded><![CDATA[I am really happy that I can use git for my every day job. Earlier I was only using it in hobby projects. Now I can learn and experience git in real projects, with real people and problems. So far, I love it :)

There is one nice 'feature' of git that i found recently : creating git custom commands. It is useful, when I want to automate some repetetive tasks.

<h2>Repetitive Task</h2>
<pre class="lang:sh decode:true">
git add -A
git commit -m '@Projectname'
</pre>
Whenever I want to commit changes to the branch, I have to execute add command and then perform a commit. 'Projectname' is one of the conventions in my company. Each commit needs this variable beacuse we are using it in internal mail service.

One of my practices with source control systems, is to commit a lot, so doing this 'repetition' all the time is a waste of time. 

<h2>Git Custom Command - git c</h2>

Custom command specification :

<ul>
	<li>execute git add</li>
	<li>execute git commit</li>
	<li>commit message with project name</li>
</ul>

All this is simple except the project name variable. Fortunately our projects folders are named after the project. In the Script, I just have to get its name.

<h3>Script</h3>
<pre class="lang:sh decode:true">#!/bin/sh
#
# git-c
#
# Michal Franc
# quick add + commit

git add -A
git commit --message="@${PWD##*/} $1"
</pre>
<h3>Installation process</h3>

<ol>
	<li>go to libexec/git-core folder (@Windows 'C:\Program Files (x86)\Git\libexec\git-core')</li>
	<li>create new file in this folder called 'git-c' (no extension)</li>
	<li>copy paste the script code</li>
</ol>

<h3>Usage</h3>

<pre class="lang:sh decode:true">
git c 'test commit'
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1488</wp:post_id>
		<wp:post_date>2013-01-14 10:00:32</wp:post_date>
		<wp:post_date_gmt>2013-01-14 09:00:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>git-custom-command</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tools"><![CDATA[Tools]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[63]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[git custom command]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1014957316]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>96</wp:comment_id>
			<wp:comment_author><![CDATA[mk]]></wp:comment_author>
			<wp:comment_author_email>mk@mk.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>195.187.80.9</wp:comment_author_IP>
			<wp:comment_date>2013-01-23 09:49:00</wp:comment_date>
			<wp:comment_date_gmt>2013-01-23 08:49:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[nice]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[775468920]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>OAPT - &quot;One Assert Per Test&quot;</title>
		<link>http://www.mfranc.com/unit-testing/multiple-asserts-in-unit-test/</link>
		<pubDate>Wed, 06 Feb 2013 15:00:21 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1525</guid>
		<description></description>
		<content:encoded><![CDATA[In <a href="http://www.mfranc.com/unit-testing/good-unit-test-one-assert/">previous posts</a> we discussed the problem with multiple asserts in the unit test. One of the reasons to create test with only single assert was "Unit Test Misinformation". 

One of the readers of my blog remainded me in the comments that there are frameworks that can help in a situation like this. One example of such a framework is <a href="http://rauchy.net/oapt/">One Assert Per Test - OAPT</a>

What does it do.

<blockquote>Oapt saves you this trouble by running your unit tests several times, each time using one assert and ignoring the rest.</blockquote>

Quite cool idea, that can save a lot of trouble.

 Still I think that unit test should only contain one assert whenever possible. When it's not, frameworks like this are quite helpfull :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1525</wp:post_id>
		<wp:post_date>2013-02-06 16:00:21</wp:post_date>
		<wp:post_date_gmt>2013-02-06 15:00:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>multiple-asserts-in-unit-test</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="unit-testing"><![CDATA[Unit Test]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1067322268]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>97</wp:comment_id>
			<wp:comment_author><![CDATA[mac jed]]></wp:comment_author>
			<wp:comment_author_email>mac.jedrzejewski@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>192.138.111.176</wp:comment_author_IP>
			<wp:comment_date>2013-02-13 08:18:00</wp:comment_date>
			<wp:comment_date_gmt>2013-02-13 07:18:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great, thanks!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[797434082]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Visual Studio - Extensions and Configuration</title>
		<link>http://www.mfranc.com/tools/visual-studio-extensions-and-configuration/</link>
		<pubDate>Mon, 25 Feb 2013 07:00:48 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1533</guid>
		<description></description>
		<content:encoded><![CDATA[In this post, I want to share some details about my Visual Studio 2012 configuration. You can find here a list of plugins, some options and various customization that I am using.

<h2>Some thoughts</h2>

I am not using any GIT integration tool. I don't need it. Console and bash is all, I need.
I am mostly using 2 split window setup. All the tool windows are pinned out if i need them i can use CTRL+TAB.
I am trying to not use mouse at all.

<h2>Extensions</h2>

<h3><a href="http://www.jetbrains.com/resharper/">R#</a></h3>
Tool that you can't live without. Finally i got my personal license thanks to the promotion at the end of the world :). I am mostly using R# to navigation. Ctrl+Shit+T and Alt+Shift+T are the most used shortcut combinations, Unit Test runner is also pretty cool. I am using it with XUnit plugin.

There is one problem with R#. It is very addictive. We have to be carefull to not become too attached to one IDE and one set of tools. I am trying to "fight" some small RoR projects. It is really cool when you are learning new tools ecosystem.

<h3><a href="http://stylecop.codeplex.com/">StyleCop</a></h3>

A set of rules, conventions that that are good practices when creating code. Nicely integrated with Resharper. You really get a lot of feedback and there is even nice explanation of every rule. 

<h3><a href="http://blogs.jetbrains.com/dotnet/2013/01/introducing-fortea-a-t4-templating-plugin-for-resharper/">ForTea - a T4 templating plugin for ReSharper<a/></h3>

If you are using T4 extensively, then you need this plugin. It provides a lot of features available in R# within T4 files.

<h3><a href="http://visualstudiogallery.msdn.microsoft.com/d0265ab0-df51-4100-8e10-1f84403c4cd0">AttachTo</a></h3>

Simplifies the process of attaching debugging to the process. Very Usefull.

<h3><a href="http://visualstudiogallery.msdn.microsoft.com/bdbcffca-32a6-4034-8e89-c31b86ad4813">Hide Main Menu</a></h3>

I hate all the menus, windows and unnecesary stuff, thats why I have the main menu hidden. When i want to use it, I just press alt and navigate with keyboard.

<h3><a href="http://visualstudiogallery.msdn.microsoft.com/4b92b6ad-f563-4705-8f7b-7f85ba3cc6bb">Highlight all occurences of selected word</a></h3>
<img src="http://www.mfranc.com/wp-content/uploads/2013/02/visualstudiosomeoptions.png" alt="Visual Studio Options" />

As you can see on the screen it is a preety usefull extension.

<h3><a href="http://visualstudiogallery.msdn.microsoft.com/e792686d-542b-474a-8c55-630980e72c30">Indent Guides</a></h3>

Previous picture also contains presentation of the Indent Guides. This extension creates really subtle visual "help" that simplifies tracking of the start and end of braces and "scopes" in the code.

<h3><a href="http://visualstudiogallery.msdn.microsoft.com/d0d33361-18e2-46c0-8ff2-4adea1e34fef">Productivity Power Tools</a></h3>

This is a big bundle of different extensions. It is too big, I am only using Enchanced ScrollBar option and Power Commands.
Power Commands are adding nice action - "Open containg folder" It lets you easily navigate to the file on your system.
Scroll Bar shows some useful markers that also help with navigation through bigger files.


<h2>Color Style:</h2>

For the colors I am using 
<a href="http://studiostyl.es/schemes/step-son-of-obsidian">Step Son Of Obsidian</a>

I like the black theme.

<h2>Options</h2>
1. Lines turned on Text Editor -> All Languages
2. On startup show empty enviroment (performance boost) Enviroment -> Startup
3. Source Control Set to None ( I dont need TFS ) Source Control -> Plug-in Selection
4. Package Manager my custom nuget package feed -> http://www.nuget.mfranc.com/nuget/
5. Text Templating -> Show Security set to False i dont need this

<h2>Key Bindings and Remap</h2>

For key Remapping in the system, I am a big fan of <a href="http://webpages.charter.net/krumsick/">KeyTweak</a>

1. CTRL+ALT+J move window to previous split windows
2. CTRL+ALT+K move window to next split windows
3. CAPSLock -> Backspace
   Quite powerfull rebind, but you need to get used to it.
4. Right Ctrl -> Right Mouse Click
   I need this mapping to use VS without the mouse.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1533</wp:post_id>
		<wp:post_date>2013-02-25 08:00:48</wp:post_date>
		<wp:post_date_gmt>2013-02-25 07:00:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>visual-studio-extensions-and-configuration</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-standard"><![CDATA[Standard]]></category>
		<category domain="category" nicename="tools"><![CDATA[Tools]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[78]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[visual studio]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1087432770]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>102</wp:comment_id>
			<wp:comment_author><![CDATA[dotnetomaniak.pl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetomaniak.pl/ENVisual-Studio-Extensions-and-Configuration-Passionate-Programmer</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.2</wp:comment_author_IP>
			<wp:comment_date>2013-02-25 15:30:50</wp:comment_date>
			<wp:comment_date_gmt>2013-02-25 14:30:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>[EN]Visual Studio - Extensions and Configuration | Passionate Programmer...</strong>

Dziękujemy za dodanie artykułu - Trackback z dotnetomaniak.pl...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1361802650.6119";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1362311962.8499";s:7:"message";s:42:"LaM changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>103</wp:comment_id>
			<wp:comment_author><![CDATA[Jarosław Stadnicki]]></wp:comment_author>
			<wp:comment_author_email>jaroslaw.stadnicki@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://jstadnicki.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>89.70.179.174</wp:comment_author_IP>
			<wp:comment_date>2013-02-26 01:45:00</wp:comment_date>
			<wp:comment_date_gmt>2013-02-26 00:45:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Trick with keys rebinding interesting, I will  it a try.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[812240660]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>104</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>83.17.97.234</wp:comment_author_IP>
			<wp:comment_date>2013-02-26 08:33:00</wp:comment_date>
			<wp:comment_date_gmt>2013-02-26 07:33:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[CapsLock as Backspace is pretty usefull, but it takes some time to get used to it ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>103</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[812240660]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[812551779]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>105</wp:comment_id>
			<wp:comment_author><![CDATA[Łukasz K.]]></wp:comment_author>
			<wp:comment_author_email>lkurzyniec@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>78.133.207.130</wp:comment_author_IP>
			<wp:comment_date>2013-02-26 09:51:00</wp:comment_date>
			<wp:comment_date_gmt>2013-02-26 08:51:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Instead of 'Highlight all occurences of selected word' I use 'ProgressiveScroll'. Definitely recommend this extension.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[812599271]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>106</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>83.17.97.234</wp:comment_author_IP>
			<wp:comment_date>2013-02-26 10:49:00</wp:comment_date>
			<wp:comment_date_gmt>2013-02-26 09:49:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I like the idea of more 'advanced scroll' it looks quite cool, I tried something similar before. But it takes too much space. I would have to buy larger display in order to use it comfortably.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>105</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[812599271]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[812646861]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>107</wp:comment_id>
			<wp:comment_author><![CDATA[Jarosław Stadnicki]]></wp:comment_author>
			<wp:comment_author_email>jaroslaw.stadnicki@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://jstadnicki.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>89.70.179.174</wp:comment_author_IP>
			<wp:comment_date>2013-02-26 18:48:00</wp:comment_date>
			<wp:comment_date_gmt>2013-02-26 17:48:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you are using the power tools you can enable it from the right click on scroll bar and choose from there.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>105</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[812599271]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[813114764]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>108</wp:comment_id>
			<wp:comment_author><![CDATA[Łukasz K.]]></wp:comment_author>
			<wp:comment_author_email>lkurzyniec@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>78.88.248.58</wp:comment_author_IP>
			<wp:comment_date>2013-02-26 18:59:00</wp:comment_date>
			<wp:comment_date_gmt>2013-02-26 17:59:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[If you want, you can adjust width of scrollbar in Options window.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>106</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[812646861]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[813124122]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>109</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>83.17.97.234</wp:comment_author_IP>
			<wp:comment_date>2013-02-27 11:20:00</wp:comment_date>
			<wp:comment_date_gmt>2013-02-27 10:20:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ok :) It  is time to try it again. Tnx.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>108</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[813124122]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[813980990]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Hard truths about software developer career</title>
		<link>http://www.mfranc.com/career/software-developer-career-hard-truths/</link>
		<pubDate>Tue, 05 Mar 2013 07:07:26 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1567</guid>
		<description></description>
		<content:encoded><![CDATA[I am a software developer. From my experience I can say, that this is one of the best jobs someone can do. It is creative, demanding and extremely rewarding plus it has an awesome community with friendly and intelligent people. When i was entering the work market in my first company i had various assumptins ans misconceptions that i learned in university. Boy i was soo wrong about a lot of things. In this post i want to dosciss some of them.

<h3>You are passionate, hard working and very engaded, sorry that's not enough</h3>

First of all let me say this. Passion, hard working attitude and engagement this are awesome personality traits, thanks to them you can be really a great addition to a software team. Unfortunately you can't make a difference based solely only on these traits. You need to link them with other important skills like teamwork and communication.

If you want to make a difference and be a crucial part of the team, then simple creation of endless lines of code won't do it. First you need to sell your brilliant ideas to the team and decision makers. Even if you have some awesome ideas you need to convince others that they are awesome. You need to advertise your perception and passion.

In workplace its not like that that everyone wants to work as best as possible. People have their own attitudes and approaches, someone only cares about politics and his carrer advancement other wants to develop himself. You need to know how to convince different parties. If you want to survive you will have to learn complex political environment in your organization. Don't become an idealistic person who thinks that hard working attitude will solve everything.
 
<h3>It's not rocket science ... a lot of the time</h3>

At university i was doing a lot of awesome stuff. Cool algorithms, fun games, low level programming. In most of the jobs you won't find such a "cool" stuff. Sure, there are startups with nice ideas but a there is a big possibility that you will end up maintaining and developing CRUD applications. It might look like this applications are only sending and transforming data from one place to another, but you will get used to this. There are boring tasks but from time to time you will stumble upon a real gem. Job becomes more interesting as you mature up and take more senior responsibilities.

Remember that if you are ambitious and you want to learn you have to fight for this, you have to convince your boss that giving you something new to do, will not only benefit you, but also your company in the long run. Look for companies that understand this and wants to develop their workforce. Avoid places that only want to exploit you. It is best to work under a passionate team leader who thinks about hist team and people. Who understands that people won't leave a company when they are happy. 

<h3>But I am a engineer I don't want to communicate...</h3>

I think that the hardest part of the job is the client and teamwork. Human interactions are not soo simple like 0, 1 deterministic logic. I know that it sucks, we are considered to be mostly introverts that like to sit alone. There is even this old stereotype with programmer sitting in the basement. This perception has changed, we are considered now almost like rock-stars. Today apart from the technical skills you need to be an awesome communicator, negotiator and team player. In a normal workplace you will work in a team, solo ? no way.

Unfortunately working together generates a lot of friction and problems. People have different needs, characters and approaches to the work. It can be really hard. Good team player know how to use those differences for the good of the team, he knows how to approach other people, how to talk to them, how to criticize, how to praise. You can consider these skills as purely managerial stuff. You can even say that you dont need them, but please trust me. You won't go far without them. These skills are needed to advance your carrer and to create a successful track of projects, which is the best measurement of your abilities.

<h3>Whenever you feel like you know a lot ... you are wrong</h3>

Technology is changing too fast. Software developer needs to sacrifice a lot of time to refresh and gain new knowledge. This can be quite difficult. I am always surprised when I learn something only to discover that there is a new world of possibilities waiting for me to explore. Every time I think I know a lot there is always something new waiting for me just as reminder of how little I know.  If you like to learn, you won't be disappointed in this line of job. 

One of the realisation a young developer have to make is to accept the idea that you cant know everything. We have to prioritize a lot and make a strategies about our time investment. It is just like diversify investment of your money. You can learn easy stuff that can get you a little but certain return, but we also have to take a risk and learn something new and trendy. This thing can be dead next year but if you want to stay on top and hopefully become an expert in the future, then you have to do this.


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1567</wp:post_id>
		<wp:post_date>2013-03-05 08:07:26</wp:post_date>
		<wp:post_date_gmt>2013-03-05 07:07:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>software-developer-career-hard-truths</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="career"><![CDATA[Career]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1114230849]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>112</wp:comment_id>
			<wp:comment_author><![CDATA[dotnetomaniak.pl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetomaniak.pl/ENHard-truths-about-software-developer-career-Passionate-Programmer</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.2</wp:comment_author_IP>
			<wp:comment_date>2013-03-05 08:27:04</wp:comment_date>
			<wp:comment_date_gmt>2013-03-05 07:27:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>[EN]Hard truths about software developer career | Passionate Programmer...</strong>

Dziękujemy za dodanie artykułu - Trackback z dotnetomaniak.pl...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1362468424.8368";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1363545358.1326";s:7:"message";s:42:"LaM changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>140</wp:comment_id>
			<wp:comment_author><![CDATA[Saifuddin]]></wp:comment_author>
			<wp:comment_author_email>saif.ouwit@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>110.38.142.86</wp:comment_author_IP>
			<wp:comment_date>2013-08-05 02:14:00</wp:comment_date>
			<wp:comment_date_gmt>2013-08-05 01:14:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Michal,
Thanks for sharing career building thoughts. Worthy reading I must say!.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[988760734]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>143</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>88.156.92.183</wp:comment_author_IP>
			<wp:comment_date>2013-08-05 21:01:00</wp:comment_date>
			<wp:comment_date_gmt>2013-08-05 20:01:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad you liked it :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>140</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[988760734]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[989526241]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>151</wp:comment_id>
			<wp:comment_author><![CDATA[San Trieu]]></wp:comment_author>
			<wp:comment_author_email>trieuuyensan@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>113.172.219.185</wp:comment_author_IP>
			<wp:comment_date>2013-12-08 12:07:00</wp:comment_date>
			<wp:comment_date_gmt>2013-12-08 11:07:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello! I'm considering getting into the Software Engineering field. Do people have a lot of stress and workload in this field? Is it a must to excel at maths? What is the job prospects of this field? Thanks.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1154778833]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>154</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>213.199.218.2</wp:comment_author_IP>
			<wp:comment_date>2013-12-09 23:03:00</wp:comment_date>
			<wp:comment_date_gmt>2013-12-09 22:03:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey,

Software Engineering is a great field. Lots of opportunities and possibilities. If you are passionate about building software or finding solutions to complex problems this is the way to go.

Workload / Stress it varies from one company to another. There are places with a lot of stress and huge quantities of over-time, but there are also companies that are working differently and have their work culture adapted to fight stress and reduce workload. With passion, hard work and willingnes to learn, you will have a lot of companies interested in hiring you. You can choose then a place with work culture that fits your needs, goals and work attitude.

Math. It is a good thing to know something about math especially the logic. As a Software Engineer your task is to implement 'correct' algorithms to solve business problems. You don't need academical knowledge to make your employeer and customer happy. Of course studying math is beneficial in the long run. It broadens your possibilities. I am spending a lot of the time studying different algorithms and approaches to math problems.


You can easily start as a 'Coder' in this field and later develop other skills. Keep in mind that the best Software Engineers are also comfortable with soft skills. They know how to communicate, negotiate and work with other people.


I hope that this comment helped you. Fell free to contact me: michal dot franc at live dot com .]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>151</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1154778833]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1156490933]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>155</wp:comment_id>
			<wp:comment_author><![CDATA[San Trieu]]></wp:comment_author>
			<wp:comment_author_email>trieuuyensan@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>113.172.171.178</wp:comment_author_IP>
			<wp:comment_date>2013-12-10 09:55:00</wp:comment_date>
			<wp:comment_date_gmt>2013-12-10 08:55:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello. Thank you very much for replying to my questions. Your comment has helped me to realize what I want to do. Best regards to you and your family.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>154</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1156490933]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1157015983]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>161</wp:comment_id>
			<wp:comment_author><![CDATA[Guest]]></wp:comment_author>
			<wp:comment_author_email>anonymized-1231948827@disqus.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>115.115.85.90</wp:comment_author_IP>
			<wp:comment_date>2014-02-05 16:46:00</wp:comment_date>
			<wp:comment_date_gmt>2014-02-05 15:46:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey Michal,
I complete agree with thoughts that you have shared.  I was under impression that I am alone in this boat. But after reading your article, I realized that  I am not the only one who face all the challenges that you have mentioned above.

Worth reading....

Thanks...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1231948827]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>162</wp:comment_id>
			<wp:comment_author><![CDATA[Smit Shah]]></wp:comment_author>
			<wp:comment_author_email>aqua.smit@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>115.115.85.90</wp:comment_author_IP>
			<wp:comment_date>2014-02-05 16:46:00</wp:comment_date>
			<wp:comment_date_gmt>2014-02-05 15:46:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey Michal,
I completely agree with thoughts that you have shared.  I was under impression that I am alone in this boat. But after reading your article, I realized that  I am not the only one who face all the challenges that you have mentioned above.

Worth reading....

Thanks...]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1231949445]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>163</wp:comment_id>
			<wp:comment_author><![CDATA[Alex]]></wp:comment_author>
			<wp:comment_author_email>dennerya0@students.rowan.edu</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>68.46.62.220</wp:comment_author_IP>
			<wp:comment_date>2014-02-13 22:55:00</wp:comment_date>
			<wp:comment_date_gmt>2014-02-13 21:55:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Michal, 
First off, thanks for the article it's really helpful. 
Also, I'm currently a freshman studying comp sci and really want to become a software engineer and was wondering what kind of experience you need for this kind of job. How do I build up my resume for something like this? Also, I'm ok at math (not a genius at it) and so is that a required that I be great at it?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1243244210]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>164</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>86.13.101.12</wp:comment_author_IP>
			<wp:comment_date>2014-02-16 17:05:00</wp:comment_date>
			<wp:comment_date_gmt>2014-02-16 16:05:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey,

Cool, it is a great carrer to have and if you "really want to become" a software engineer then that's the first step to make it happen :)

Experience
For a starting position of Junior Developer nobody expects any commercial experience at all. Having one of course is a huge benefit. Don't worry about experience just apply for junior positions and internships.

Resume
Look for internship / entry job as soon as possible. Create your own blog and write about stuff, what you do, what you love. Register on Github, show some code and don't worry if it's not the most super duper code :). Register on Project Euler and do some algorithmic quizes + write about this on your blog.

Math
Don't worry about Math. I am not a genius either and I am alright. What is important is your capacity to quickly learn new things. That's the essential skill that you will develop while studying. Focus on learning as much different things as possible. Study time is a moment to build a fondation for your future growth.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>163</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1243244210]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1246863580]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>188</wp:comment_id>
			<wp:comment_author><![CDATA[Aman Rubey Real]]></wp:comment_author>
			<wp:comment_author_email>aman.rubey@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>14.96.210.220</wp:comment_author_IP>
			<wp:comment_date>2014-05-25 18:12:00</wp:comment_date>
			<wp:comment_date_gmt>2014-05-25 17:12:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[What is the salary and what do you mean by code?sir]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1403684985]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>189</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>86.13.101.12</wp:comment_author_IP>
			<wp:comment_date>2014-05-25 18:46:00</wp:comment_date>
			<wp:comment_date_gmt>2014-05-25 17:46:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Salary is a personal thing. It depends on you and where you want to work. You can have much higher salary in finance than for instance in my current domain "charities".

When it comes to salary I find this site very helpful - http://www.itjobswatch.co.uk/ . Yes its UK market, but you can roughly estimate, based on this data, how much you can earn in your country. I am also checking www.indeed.com from time to time.

As a side note. If you want to develop and be better, choose companies based on opportunities and learning potential instead of salary.

"what do you mean by code" 
In which context ? Code is code :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>188</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1403684985]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1403725997]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>192</wp:comment_id>
			<wp:comment_author><![CDATA[Aman Rubey Real]]></wp:comment_author>
			<wp:comment_author_email>aman.rubey@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>14.96.210.220</wp:comment_author_IP>
			<wp:comment_date>2014-05-25 18:55:00</wp:comment_date>
			<wp:comment_date_gmt>2014-05-25 17:55:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for replying,but my question is still that means ,in india people rush to become engineers so who gets more salary software engineers or those engineers]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>189</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1403725997]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1403736041]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>193</wp:comment_id>
			<wp:comment_author><![CDATA[Aman Rubey Real]]></wp:comment_author>
			<wp:comment_author_email>aman.rubey@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>14.96.210.220</wp:comment_author_IP>
			<wp:comment_date>2014-05-25 18:59:00</wp:comment_date>
			<wp:comment_date_gmt>2014-05-25 17:59:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Previously i didnt knew any programmer with whim i could communicate ,but now i can ask you]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>192</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1403736041]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1403739560]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>194</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>86.13.101.12</wp:comment_author_IP>
			<wp:comment_date>2014-05-25 19:08:00</wp:comment_date>
			<wp:comment_date_gmt>2014-05-25 18:08:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You are being paid based on your abilities, domain and market rules (supply / demand).
You can earn same amount either as Engineer or Software Engineer.

It is really hard to find an answer to your question. If i will tell you that software engineer earns more, you will easily find an example that disapproves my theory. 

Still we can look at some averaged data.

Software Engineer - 120k
http://www1.salary.com/Software-Engineer-V-salary.html  

Engineer - 118k
http://swz.salary.com/SalaryWizard/Engineer-V-Salary-Details.aspx

As you can see the difference is comparable to statistical error.


This data is for US and can be different in yout country and in my country.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>193</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1403739560]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1403749631]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>215</wp:comment_id>
			<wp:comment_author><![CDATA[Talyah]]></wp:comment_author>
			<wp:comment_author_email>talyahr4@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>108.208.190.90</wp:comment_author_IP>
			<wp:comment_date>2014-06-28 22:04:00</wp:comment_date>
			<wp:comment_date_gmt>2014-06-28 21:04:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi. I'm thinking about becoming a software developer. Your article has been super duper helpful!!! But I was wondering if, being a software developer, do you have to work a lot of hours? I would also like to travel the world and see all there is on our beautiful planet. But would I have time to do that? Not just 2 weeks vacation like the average Joe. How are the hours?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1459622059]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>217</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>109.231.194.195</wp:comment_author_IP>
			<wp:comment_date>2014-07-03 11:24:00</wp:comment_date>
			<wp:comment_date_gmt>2014-07-03 10:24:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey, Glad that i could help you a bit.


Working Hours : 
For the last 4 years I had done around 10-20 hours of overtime, not bad right ? 
 It all depends on you and company you are working for. I have heard about places with crazy working hours, with unpaid overtimes. If you want to avoid this you have to research your future companies and even try talking to current, previous employees about this topic.

So in the end it depends. Some of Software Developers work long hours, some work even less than 40 hours per week. 

Note that after work I am also spending a lot of time learning my craft and developing my skills. SO its not like this is a 9-5 Job. 


Travel &amp; Vacations :
Again it depends on how you work and for whom you work. In my previous companies I had 24-26 paid holiday days.This gives you 4-5 weeks worth of vacation. As for travelling, if you want to travel then there are companies that will send you do different parts of the world to do the Job. You just have to look.

There is also other option, you can work online, its becoming quite popular form of doing stuff right now. For instance you can go to some tropical Island with internet access and work from there.

You have to ask yourself if you are passionate about coding/programming/solving problems, if you are and you can force yourself to put crazy amount of hours into learning and practicing your craft then everything is possible.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>215</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1459622059]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1466462016]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>225</wp:comment_id>
			<wp:comment_author><![CDATA[Talyah]]></wp:comment_author>
			<wp:comment_author_email>talyahr4@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>108.208.190.90</wp:comment_author_IP>
			<wp:comment_date>2014-07-06 06:00:00</wp:comment_date>
			<wp:comment_date_gmt>2014-07-06 05:00:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks!! I'm so glad you're someone that actually replies cx 
You may have just created a future software developer ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>217</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1466462016]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1470196898]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>226</wp:comment_id>
			<wp:comment_author><![CDATA[Talyah]]></wp:comment_author>
			<wp:comment_author_email>talyahr4@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>108.208.190.90</wp:comment_author_IP>
			<wp:comment_date>2014-07-06 06:08:00</wp:comment_date>
			<wp:comment_date_gmt>2014-07-06 05:08:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey me again. I was just wondering, what kind of software development do you do/have done. I know there's website development, video game development, app development, and a WHOLE BUNCH of other possibilities. I really like the impression I'm getting for whatever industry you're working in. Ive gotten a lot of bad impressions for the video game industry lately (was thinking about doing that, not anymore though even though I love video games.) In summary, just wondering what specific industry you're in. Thanks (:]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1470200854]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>227</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>5.148.145.14</wp:comment_author_IP>
			<wp:comment_date>2014-07-24 11:03:00</wp:comment_date>
			<wp:comment_date_gmt>2014-07-24 10:03:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey,

Sorry for late response :) I am in a middle of flat moving and my time is limited.

I am a full stack web developer. Its ok in here. Yes video game industry has some bad rep due to working long hours for not competitive pay. Video game field is for people passionate with games :) 

App development is on the rise and might eventually kill the web development. We will see. There is also 'Internet of Things' idea on the horizon and lot of opportunities for new type of developers.

I can't recommend you the best place to start, but it is easy to start as app or web developer, learning curve is a lot lower than video games, in my opinion.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>226</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1470200854]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1501235594]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>228</wp:comment_id>
			<wp:comment_author><![CDATA[ek24]]></wp:comment_author>
			<wp:comment_author_email>catzhv9lives@aol.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>69.234.182.158</wp:comment_author_IP>
			<wp:comment_date>2014-07-25 09:07:00</wp:comment_date>
			<wp:comment_date_gmt>2014-07-25 08:07:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for sharing your thoughts, this was very helpful. What's your opinion on the coding bootcamps that have sprung up everywhere? Do you have any concerns about them? Do you have any in particular that you would recommend?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1502900567]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>230</wp:comment_id>
			<wp:comment_author><![CDATA[Homaira Barez]]></wp:comment_author>
			<wp:comment_author_email>hb1260@mun.ca</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>99.238.234.150</wp:comment_author_IP>
			<wp:comment_date>2014-08-08 05:39:00</wp:comment_date>
			<wp:comment_date_gmt>2014-08-08 04:39:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey, I was wondering if it's a very competitive field. I understand that most engineering fields are but I'm kind of worried about being able to find a job after graduating university. I have to pick what I'm specializing in in the next few months and though I love software engineering, I don't want to be stuck w student loans and no job. Maybe I'm just worrying a lot but I'd like to know what you think :)
Thanks a bunch!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1532954059]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>231</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>82.30.101.243</wp:comment_author_IP>
			<wp:comment_date>2014-08-09 23:51:00</wp:comment_date>
			<wp:comment_date_gmt>2014-08-09 22:51:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey,


I have never been to any boot camp. This is a new 'thing'. The demand for developers is huge, so there are companies that are trying to train more and more people. 


However I am one of those guys that believe in 'fundamental' knowledge ( math, math, math ). Best time to get it is by studying. I think that in order to be the best of the best you need to pursue a degree in Computer Science or Engineering stuff. 



With boot camp you will get practical know how, but you need a basic knowledge to grasp the buildings block of computer software.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>228</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1502900567]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1535450490]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>232</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>82.30.101.243</wp:comment_author_IP>
			<wp:comment_date>2014-08-10 00:03:00</wp:comment_date>
			<wp:comment_date_gmt>2014-08-09 23:03:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey,


First of all, you need to do your own research in your own local / country job market. For instance market in London is a lot different than the one in SV or in other European cities.


Still for 'any' entry job position you shouldn't have problem getting in and starting somewhere. However if you want to work for awesome companies that might boost your career and abilities you need to be really great.


The level of competitiveness raises with your demands. If you are very ambitious and want to work for the best then obviously there will be many great people trying to do the same. Also bear in mind that it is really hard to find great company with culture that will fit you. Unfortunately in my opinion most of the companies are just 'weak' and not interesting at all.

The problem is not finding any company but finding this one great and awesome environment with culture that will boost your experience and skill-set. This is hard :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>230</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1532954059]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1535460349]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>276</wp:comment_id>
			<wp:comment_author><![CDATA[Dim]]></wp:comment_author>
			<wp:comment_author_email>dim_vs@hotmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>137.147.29.2</wp:comment_author_IP>
			<wp:comment_date>2014-10-04 10:43:00</wp:comment_date>
			<wp:comment_date_gmt>2014-10-04 09:43:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks so much for sharing these thoughts,
I am currently in Year 12 (last year of school in Australia) and I was thinking of studying Software Engineering in uni. 
Job prospects seem to be good in Australia but do you think that it's a good idea, considering the fact that I didn't pick up the Information Technology subject in my last years of schooling and I have never learnt how to code, to study this?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1619191193]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>294</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>86.6.98.112</wp:comment_author_IP>
			<wp:comment_date>2014-10-12 19:53:00</wp:comment_date>
			<wp:comment_date_gmt>2014-10-12 18:53:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey Dim,


I started coding on my 3rd year on uni, (22 Years old). I just had to invest a lot of time on learning and developing my skills. It was really a lot of time. This has never stopped and won't end in the future. So its not a question of ... Have I missed it and it'is too late ? ... its more a question of ... Do you really feel that its something that you want to do in your life ?.

How do you feel about coding ? Do you like it ? Does the idea of building something from nothing is compelling to you ? Do you like complex puzzles ?

Coding is fun ... but it's only fun if you enjoy it :) Also coding is just the start, later on you will need to develop soft skills and business skills ( which is beneficial for different career paths )]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>276</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1619191193]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1632193257]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>536</wp:comment_id>
			<wp:comment_author><![CDATA[sourav]]></wp:comment_author>
			<wp:comment_author_email>sourav.satyamsing@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>122.50.233.21</wp:comment_author_IP>
			<wp:comment_date>2015-01-12 13:36:00</wp:comment_date>
			<wp:comment_date_gmt>2015-01-12 12:36:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Michal,

it is very hard to be an Internet entrepreneur these days because it is very tough to develop new ideas which could be helpful for the mass.(tough easy to copy any idea). so how we can get different ideas for the development of any applications or project?

and thanks for your valuable thoughts]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1788295110]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>549</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>82.19.201.169</wp:comment_author_IP>
			<wp:comment_date>2015-01-17 16:20:00</wp:comment_date>
			<wp:comment_date_gmt>2015-01-17 15:20:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey,


A hard question that, I don't know how to answer to.


Sometimes improving old ideas might lead to great products. So maybe instead on focusing on new innovative things, we should look at existing solutions and find a way on how to make them better :) ?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>536</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1788295110]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1798347764]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>795</wp:comment_id>
			<wp:comment_author><![CDATA[Mudassir Vahidy]]></wp:comment_author>
			<wp:comment_author_email>mudassirvahidy.mv@googlemail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>182.178.115.228</wp:comment_author_IP>
			<wp:comment_date>2015-05-28 17:19:00</wp:comment_date>
			<wp:comment_date_gmt>2015-05-28 16:19:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hello hi Michal, your article was quite helpful for me!!!!! But I have some questions of my own because I also want to become a software engineer!! My questions are following:
1:how many hours do I have to work in a day. I know it depends on company but can you tell me approximitly how many hours? 
2:which country will be best for it. I am not asking according to salary. I am asking according to easyness. 
3:Till which class I have to study? 
4:How much approximate salary will be given for it for one month? ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[2049909585]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>IE 7,8 kendo ui binding problem - unknown runtime error</title>
		<link>http://www.mfranc.com/javascript/ie-78-kendo-ui-binding-problem-unknown-runtime-error/</link>
		<pubDate>Mon, 18 Mar 2013 07:00:55 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1581</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>TL;DR; If you are getting unknown runtime error in the kendo javascript code. Check if you are using correct binding methods as per the demo on telerik site.</strong>

You've got to love IE with all the "special behaviors" in it. I have spent recently 10h trying to fix little problem found only in IE. My project have to support version 7, 8 ( you know - "enterprise IT" ). New version number 10 seems to be working really ok, no problems with it ( apart from that it looks almost like chrome ). Thanks to Microsoft and their abandoment effort, I don't have to worry about revolutionary IE 6.

<h2>Problem:</h2>

Project uses kendo ui framework to create elements on the View. There is a support for MVVM pattern with multiple different bindings, just like knockout.js with similar syntax and behavior. One of the bindings is supposed to be changing text value. This binding is normally used with textboxes but we have used it with "label" and "anchor". It worked fine on Chrome, Firefox, IE 10 but then the fun began. Tests on other IE's version caused "runtime error". Indeed very informative message, thanks IE just like "unknown error" on Sharepoint.

This "runtime error" was raied on this line of code.

<pre class="lang:c# decode:true">this.element[innerText] = text;</pre>

After some research, I discovered that earlier versions of microsoft's browser are very restrictive about certain changes performed on DOM elements. In this scenario you can't change 'innerText'.

I tried to create a workaround which removed and added new element, but this instead caused other problem. It seems that here IE is also very restrictive here.

<h2>Solution:</h2>

Fortunately solution is quite simple, instead of 'text' binding use 'value' binding. This one uses code that works fine in IE.

<pre class="lang:c# decode:true">this.element.value = value ;</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1581</wp:post_id>
		<wp:post_date>2013-03-18 08:00:55</wp:post_date>
		<wp:post_date_gmt>2013-03-18 07:00:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ie-78-kendo-ui-binding-problem-unknown-runtime-error</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[Javascript]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1129151995]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CouchDb - getting started on Windows</title>
		<link>http://www.mfranc.com/nosql/couchdb-on-windows-getting-started/</link>
		<pubDate>Tue, 02 Apr 2013 07:00:09 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1602</guid>
		<description></description>
		<content:encoded><![CDATA[This post will be a little note with steps needed to setup a working CouchDb instance on windows machine.

<h3>NoSql</h3>

RDBSM rules the world, it is still a "standard" in the industry. My first Database was used inside a simple rss client written in C. This was the weird world of C programming with weak documentation and Segmentation fault errors everywhere. Now, I am mostly using MSSQL with ORM support ( NHibernate ), but there is another world of databases on the horizon, NoSql movement.

There have been a lot of buzz about NoSql for quite some time, but I had no time to learn and use it for some real thing. Sure, There was a small project with <a href="http://redis.io/">Redis</a> and <a href="http://ravendb.net/">RavenDb</a>, but this was just fun and little playground. I created simple fun projects just to start somewhere, but now the time has come to make the move and start the journey to the NoSql world.

I am going to start with CouchDb. A nice database engine that stores data in JSON format and is accesible through REST based HTTP interface. If you want more info on NoSql check <a href="http://nosql.mypopescu.com/kb/nosql">this</a> site. You can find a lot more detailed explanation here with answers to some important questions like "Why I should consider NoSql ?" or "When is it a better choice ?". Also <a href="http://en.wikipedia.org/wiki/NoSQL">Wikipedia is allways helpfull</a>. 

If you want to check how many different implementations of NoSql philosophy are out there, check this site : <a href="http://nosql-database.org">Big list of NoSql databases.</a>

<h3>Installation</h3>

<h4>Where to download it ?</h4>

Ok so let's start with the most simple step : The download.
You can find all the needed files ( actually there is only one file ) <a href="http://couchdb.apache.org/"> CouchDB here</a>. Installation process is straigthforward ( just click Next ). There is one step that asks you if you want to run the database as a windows service, feel free to do this, I selected 'No', I want to control when and how it is running. 

<h4>How to run it ?</h4>

Go to start menu and look for <b>"Start CouchDB.bat"</b> or go to <b>"-InstallDir-\CouchDB\bin\couchdb.bat"</b>. This is the main bat file that performs all the necessary steps to run database. CouchDB is written in the Erlang so the bat is starting the Erlang emulator. Don't worry if you don't have this 'emulator', it seems that it is installed automaticlly.

Watch the startup process. My first try, ended with "Abnormal termination" error, but if everything went fine you should be able to access the configuration site. <a href="http://127.0.0.1:5984/_utils/">http://127.0.0.1:5984/_utils/</a>

<h4>Errors, Help !!</h4>

If there was an error in the Erlang Emulator Console. Check the <a href="http://wiki.apache.org/couchdb/Error_messages">error messages page</a>.

I had an error <b>"Failure to start Mochiweb: eaddrinuse"</b>. This one is quite simple to fix and was caused by port being closed due to some application already using it. 

To change the port :

<ul>
  <li>Open "-Instal Dir-"\CouchDB\etc\couchdb\local.ini</li>
  <li>Look for [httpd] bookmar</li>
  <li>Uncomment the port section and change it to some free / open port. (8001)</li>
</ul>

Side Note: By default port is set to '5984'. If you have installed CouchDB as a Windows Service you won't be able to start a new instance beacuse the port is already taken. In this case you don't have to run CouchDB manually.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1602</wp:post_id>
		<wp:post_date>2013-04-02 08:00:09</wp:post_date>
		<wp:post_date_gmt>2013-04-02 07:00:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>couchdb-on-windows-getting-started</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nosql"><![CDATA[NoSql]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1169259496]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>121</wp:comment_id>
			<wp:comment_author><![CDATA[Evgenios Skitsanos]]></wp:comment_author>
			<wp:comment_author_email>info@skitsanos.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.facebook.com/skitsanos</wp:comment_author_url>
			<wp:comment_author_IP>195.12.52.18</wp:comment_author_IP>
			<wp:comment_date>2013-04-05 18:05:00</wp:comment_date>
			<wp:comment_date_gmt>2013-04-05 17:05:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You forgot to mention that in order to actually develop something with CouchDB you need some proper IDE, and for Windows you can download Kanapes IDE from http://kanapeside.com ;) Have fun ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[853282437]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>122</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>83.17.97.234</wp:comment_author_IP>
			<wp:comment_date>2013-04-09 10:34:00</wp:comment_date>
			<wp:comment_date_gmt>2013-04-09 09:34:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good to know, It's time to download it and try. Default web interface is very limited.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>121</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[853282437]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[857378915]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>133</wp:comment_id>
			<wp:comment_author><![CDATA[prakash.vishal]]></wp:comment_author>
			<wp:comment_author_email>pcbindian@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>125.16.143.55</wp:comment_author_IP>
			<wp:comment_date>2013-07-05 05:22:00</wp:comment_date>
			<wp:comment_date_gmt>2013-07-05 04:22:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You also have to change the port no to any free port say(8001) in default.ini file which is in CouchDBetccouchdbdefault.ini   directory.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[952541159]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>134</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>88.156.92.183</wp:comment_author_IP>
			<wp:comment_date>2013-07-07 17:48:00</wp:comment_date>
			<wp:comment_date_gmt>2013-07-07 16:48:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There is an information about this in the post :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>133</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[952541159]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[954553721]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>138</wp:comment_id>
			<wp:comment_author><![CDATA[evilripper]]></wp:comment_author>
			<wp:comment_author_email>gigarimini@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.evilripper.net/</wp:comment_author_url>
			<wp:comment_author_IP>77.89.36.53</wp:comment_author_IP>
			<wp:comment_date>2013-07-16 15:12:00</wp:comment_date>
			<wp:comment_date_gmt>2013-07-16 14:12:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thanks I had the same error :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[964315392]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>146</wp:comment_id>
			<wp:comment_author><![CDATA[Java Developer]]></wp:comment_author>
			<wp:comment_author_email>software.wikipedia@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.fromdev.com/</wp:comment_author_url>
			<wp:comment_author_IP>17.198.50.127</wp:comment_author_IP>
			<wp:comment_date>2013-09-19 01:49:00</wp:comment_date>
			<wp:comment_date_gmt>2013-09-19 00:49:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for tip. 


Changing port for "eaddrinuse" error did not work for me. Can there be any other reason for this error?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1050247134]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>259</wp:comment_id>
			<wp:comment_author><![CDATA[Jim]]></wp:comment_author>
			<wp:comment_author_email>james-york@outlook.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>76.189.32.79</wp:comment_author_IP>
			<wp:comment_date>2014-09-29 03:03:00</wp:comment_date>
			<wp:comment_date_gmt>2014-09-29 02:03:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Much obliged for this. I wasn't sure if not running couchDb as a service would have some important ramification down the line.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1610234727]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>CouchDB - First Steps</title>
		<link>http://www.mfranc.com/nosql/couchdb-first-steps/</link>
		<pubDate>Tue, 30 Apr 2013 11:00:59 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1645</guid>
		<description></description>
		<content:encoded><![CDATA[Long long time ago in one of the posts ... I briefly described CouchDB installation process on the local machine.

<h3>IrisCouch</h3>

If you don't want to configure local database you can use <a href="http://www.iriscouch.com/">IrisCouch hosting</a>.
You can get free database for basic tests. I am using this database hosting for one of the projects hosted in heroku. It is free for really basic usage.

Now we can play with our new toy. Let's start with some general concepts.

<h3>Where are my tables ?</h3>

Quick answer there are no tables. Data is stored in a form of documents, which are JSON objects. Each document have properties. Properties are like columns. You can story values, array of objects, custom objects in them. 

<pre class="lang:js decode:true " >{
   "_id": "40e4bddb4071125d6fb2e559c107d91f",
   "_rev": "1-ff557593af8688073e77405d96231a87",
   "type": "feed",
   "url": "http://feeds.feedburner.com/maciejaniserowicz",
   "isActive": true,
   "isApproved": true
}
</pre> 

Here is a simple example. This document has properties : isActive, isApproved, type, url. 

<b>_id</b> is a special value that has to be unique for each document. You can assign it by yourself, but it is also generated automaticly when you add document. Automatic value is a representation of UUID.

<b>_rev</b> is a special identification number which is used for the document versioning. Each time you save changes to the document _rev value is regenerated.

<h2>How to query this freaking thing ?</h2>

With this little introduction it is time create first query. I was using mostly relational databases that used SQL language to write queries. In CouchDB it is not simple like that. There is no SQL language and you don't write queries. Instead you create map/reduce functions that are stored in CouchDB in form of custom views.

Map function is used to filter out the data. We can think of it as QUERY with WHERE clause and SELECT statement.

Reduce function is used to transform data to a new object. You can perform operations like SUM or COUNT here. I will write about this particular function in some later posts. Let's focus now on querying the data.

<h3>Map function</h3>

<pre class="lang:js decode:true " >function (doc) {
              var id = doc._id;
              if(doc.type === 'feed' &amp;&amp; !doc.isApproved) {
                var url = doc.url;
                emit(id, url);
            }
          }
</pre> 

In CouchDB map function  === javascript function. It takes document as a parameter and returns nothing. Instead of return you have to use emit function. Map function iterates through all the documents and tries to match the document based on the if clause. If the document is matched we call the emit function.

emit() function takes two arguments ( key, value). This function can be called mutliple times in one map function and is used to create the view result with rows each containing key and value. View result then is converted to JSON object that contains rows and metadata.

<pre class="lang:js decode:true " >

{
  "total_rows": 0,
  "offset": 0,
  "rows": [
  ]
}
</pre> 

<h2>Accesing data from the browser</h2>

The nice thing about CouchDb is that we can access data by using the HTTP protocol. Simple GET message is all we need to  access data.

For example: GET to - http://localhost:5984/database.name/id 

Returns the document with the id. You can make GET query to views, documents, database. It is quite usefull when you want to access data from javascript without the hassle of installing all the different frameworks. 

In one of the apps on  node.js, I am using nano module to access the database. This module is just a wrapper to the HTTP protocol.

<h3>Summary</h3>

That's it for now. CouchDB is a nice database engine slightly different than Redis engine that I used recently. My experience with NoSql is still little low. But it is a fun thing to learn. I believe in a multiple databases used in the project with specialised database engines used for different things. You can read about this on <a href="http://martinfowler.com/bliki/PolyglotPersistence.html">Martin Fowler blog.</a>. 

Stay tuned for more CoudhDB adventures.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1645</wp:post_id>
		<wp:post_date>2013-04-30 12:00:59</wp:post_date>
		<wp:post_date_gmt>2013-04-30 11:00:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>couchdb-first-steps</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="nosql"><![CDATA[NoSql]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[74]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[couchdb]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1177905582]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>123</wp:comment_id>
			<wp:comment_author><![CDATA[Piotr Sobczak]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/piotrekso</wp:comment_author_url>
			<wp:comment_author_IP>83.7.54.131</wp:comment_author_IP>
			<wp:comment_date>2013-04-09 19:35:00</wp:comment_date>
			<wp:comment_date_gmt>2013-04-09 18:35:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yeap, NoSql databases are interesting thing :D . 
Is there any reason why you choose CouchDb but no other ?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[857827062]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>124</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>89.70.94.98</wp:comment_author_IP>
			<wp:comment_date>2013-05-01 11:41:00</wp:comment_date>
			<wp:comment_date_gmt>2013-05-01 10:41:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I wanted to learn something new and that was suggestion from @gutek to use it :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>123</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[857827062]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[881156972]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>126</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Kubiak]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.facebook.com/michal.kubiak</wp:comment_author_url>
			<wp:comment_author_IP>88.156.5.98</wp:comment_author_IP>
			<wp:comment_date>2013-05-02 18:53:00</wp:comment_date>
			<wp:comment_date_gmt>2013-05-02 17:53:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Great stuff. It's so simple and complex at the same time!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[882483667]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Node.js - simple web server with &#039;express&#039;</title>
		<link>http://www.mfranc.com/node-js/node-js-simple-web-server-with-express/</link>
		<pubDate>Thu, 06 Jun 2013 07:00:25 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1675</guid>
		<description></description>
		<content:encoded><![CDATA[I have been playing with Node.js recently. Mostly doing some small hobby projects. One of them needed server side badly, some of the cool features were not possible with the client side only web app. 

I was thinking about using RoR, Asp.Net Mvc or NancyFX all of these frameworks suitable for the task. Then why Node ? Well, the answer is simple, FUN. There is a lot of hype around it. Community is very dynamic, lots of modules and extensions created on the daily basis. As a Passionate Developer, I also wanted to try something new. I can do .Net stuff at work and it is allways good to try something new and fresh.

<h3>Basic Node.js server</h3>

Let's start with a very basic example, just to see the bare Node without the modules.

<pre class="lang:js decode:true">var http = require("http");
http.createServer(function (request, response) {
      response.writeHead(200, {
         'Content-Type': 'text/plain'
      });
      response.write('Simple Simple Fun')
      response.end();
}).listen(5002);
</pre>

Node is basically a javascript, but this time on the server side ( weeee best language in the world on the server side, how can you not love it ? ). This code is a implementation of a very simple server responding to each get request, with some funky message and code 200. The require statement is the implementation of a internal module system.

<h3>Node.js with express module</h3>

This was a really simple example. Sure you can write whole app like this, but there are modules that provide a nice layer of abstraction with all the the nasty details hidden. I have been using the <a href="http://expressjs.com/">express module</a>. It is a nice web application framework. 

It provides 
<ul>
	<li>better wrappers to the  request and response</li>
	<li>support for view-engines</li>
	<li>routing mechanism</li>
	<li>cookies manipulation</li>
	<li>basic authentication</li>
	<li>more ...</li>
</ul>

<pre class="lang:js decode:true " >
 var express = require("express");
 var app = express();

 /* serves main page */
 app.get("/", function(req, res) {
    res.sendfile('index.htm')
 });

  app.post("/user/add", function(req, res) { 
	/* some server side logic */
	res.send("OK");
  });

 /* serves all the static files */
 app.get(/^(.+)$/, function(req, res){ 
     console.log('static file request : ' + req.params);
     res.sendfile( __dirname + req.params[0]); 
 });

 var port = process.env.PORT || 5000;
 app.listen(port, function() {
   console.log("Listening on " + port);
 });</pre> 

The express module is loaded into app object. It is then used to define the routings, accepting POST and GET verb. The syntax is quite simple. You provide the regexp which matches the route and a function that is executed when the request is matched. Function gives the access to the request and response wrappers. 

Some Notes:
<ul>
	<li>(/^(.+)$/ regexp is not the best one, it matches almost everything and has to be defined as the last route. Still it works ok 	and  all the js, css files are being sent.</li>
	<li>__dirname is a global value containing the name of the main directory with the node script.</li>
</ul>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1675</wp:post_id>
		<wp:post_date>2013-06-06 08:00:25</wp:post_date>
		<wp:post_date_gmt>2013-06-06 07:00:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>node-js-simple-web-server-with-express</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="node-js"><![CDATA[Node.js]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[77]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[node.js]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1366657286]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>127</wp:comment_id>
			<wp:comment_author><![CDATA[dotnetomaniak.pl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetomaniak.pl/EN-Nodejs-simple-web-server-with-express-Passionate-Programmer</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.2</wp:comment_author_IP>
			<wp:comment_date>2013-06-06 08:25:30</wp:comment_date>
			<wp:comment_date_gmt>2013-06-06 07:25:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>[EN] Node.js - simple web server with 'express' | Passionate Programmer...</strong>

Dziękujemy za dodanie artykułu - Trackback z dotnetomaniak.pl...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1370503531.0908";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1430952053.2464";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1430952053]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>159</wp:comment_id>
			<wp:comment_author><![CDATA[Alrik]]></wp:comment_author>
			<wp:comment_author_email>alrik11es@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>80.28.196.103</wp:comment_author_IP>
			<wp:comment_date>2013-12-28 21:23:00</wp:comment_date>
			<wp:comment_date_gmt>2013-12-28 20:23:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Not OK at all you should use the router for the best results.

app.use(app.router);
app.use(express.static(__dirname + '/public'));]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1179546139]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>160</wp:comment_id>
			<wp:comment_author><![CDATA[January Self-Learning: Node.JS + Express + Jade + MongoDB | cuteprogramming]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://cuteprogramming.wordpress.com/2014/01/30/january-self-learning-node-js-express-jade-mongodb/</wp:comment_author_url>
			<wp:comment_author_IP>192.0.83.14</wp:comment_author_IP>
			<wp:comment_date>2014-01-30 13:55:57</wp:comment_date>
			<wp:comment_date_gmt>2014-01-30 12:55:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Node.js – simple web server with &#8216;express&#8217; [...]]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1391086557.3997";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1430952052.9032";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1430952052]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>168</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>86.13.101.12</wp:comment_author_IP>
			<wp:comment_date>2014-03-09 12:25:00</wp:comment_date>
			<wp:comment_date_gmt>2014-03-09 11:25:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good catch thanks. I am just beginner in node.js space :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>159</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1179546139]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1277417035]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>From Dwarf Fortress to Vim - evolution of .Net programmer</title>
		<link>http://www.mfranc.com/tools/from-dwarf-fortress-to-vim-evolution-of-net-programmer/</link>
		<pubDate>Wed, 03 Jul 2013 17:05:22 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1721</guid>
		<description></description>
		<content:encoded><![CDATA[In this post, I want to write about my conversion to Vim, a complex but powerful text editor. It's learning curve is quite step but once grasped, it can increase your productivity.

You can use it almost everywhere, Linux, Windows, Mac, you name it. It is an OSS software, easily moddable and open. You can write your own plugins and change almost every aspect of it. This process is very natural and easier than Visual Studio's extensions and configuration hell.

You won't replace Visual Studio with VIM, that's not the case, you can however enhance your productivity with it. Instead of using new editor you can use Vim inside Visual Studio. Think of it as a new tool in your programming tool belt.

<h3>"My First Time"</h3>

My first "fun time" with Vim was in "git commit" command. This was an awful experience. Vim felt too weird for me. It was confusing and I had to spend a significant amount of time to commit something. 

Steps are like:
<ul>
<li>enter insert mode</li>
<li>write some text</li>
<li>go to command mode</li>
<li>send command :w to save the file</li>
<li>send command :q to finish the process</li>
</ul>

A lot of stuff to remember for such a simple task. Back then "git gui" and "commit -m" saved my day. I wasn't ready for such a shift. I was too attached to tools like Tortoise Svn, Visual Studio and Notepad++. I thought about Vim as another weird editor for all those uber geeks. It doesn't felt powerful, my user experience was bad. 

I wasn't ready then, but now I am writing this blog post in VIM.

<h3>So What happened ?</h3>

Two things changed the game, "Git" and "Dwarf Fortress" (this hardcore game for weirdos). Learning Git and it's command line interface was like a revelation. I felt more productive and done stuff faster without the mouse. I really think about this as a evolution of the programmer. Suddenly you just realize that there is this weird world that looks so different but also feels right. Git was just the begining of the end of my usual mouse and point/click approach. 

Then, I discovered "Dwarf Fortress", weird but awesome and complex strategy game. I hated it's interface and UI. It is a perfect example of unfriendly design. Unfortunately, I am a maniac of all the complex strategy games (War In the Pacific is a perfect example of such a game). In order to play "Dwarf Fortress", I had to force myself into learning it's interface. This was a painful process, but with time I started to get it and was able to play the game normally. Poorly designed UI stopped being the problem.

This got me thinking. If I can learn to play "Dwarf Fortress" then maybe, I am able to grasp this weird  editor "Vim". Prior to this revelation, I approached Vim 4 times, all of them with moserable outcome. After "Dwarf Fortress" experience, I finnaly got it. I don't know why but after the 5th launch and try, I finaly started to se the benefits of Vim and "hjkl" approach. 

<h3>Vim Everywhere</h3>

Now, I am using Vim almost everywhere. Fortunately I didn't have to ditch Visual Studio, there is a nice extension <a href="http://visualstudiogallery.msdn.microsoft.com/59ca71b3-a4a3-46ca-8fe1-0e90e3f79329">VsVim</a> that runs on top of VS editor. It works well, it is somehow limited, but has the most important features like "imap" command. It is a great extension that gives you more possibilities. 

There is even a nice extension to Chrome <a href="https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb">Vimium</a>. I am still researching it's possibilities, but it is nice to navigate website with "hjkl" keys. I like the keyboard only navigation that comes with this extension. You really should try it.

Sublime also supports "vintage mode" but it is very limited. The only thing that encouraged me to work with Sublime was "command + p" feature. Fortunately there are plugins that enabled simillar functionality in Vim. So I switched my Node.js development to it.

<h3>Summary</h3>

Don't give up on Vim, even when you think it's not for you. Someday, sometime there will come a moment that you will get "Vim addiction".

Several Links to help me encourage you to Vim.

<a href="http://yehudakatz.com/2010/07/29/everyone-who-tried-to-convince-me-to-use-vim-was-wrong/">Everyone Who Tried to Convince Me to use Vim was Wrong</a>

<a href="http://www.viemu.com/a-why-vi-vim.html">Why, oh WHY, do those #?@! nutheads use vi?</a>

<a href="http://joelhooks.com/blog/2013/04/23/5-essential-vim-plugins/">5 essential Vim plugins</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1721</wp:post_id>
		<wp:post_date>2013-07-03 18:05:22</wp:post_date>
		<wp:post_date_gmt>2013-07-03 17:05:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>from-dwarf-fortress-to-vim-evolution-of-net-programmer</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tools"><![CDATA[Tools]]></category>
		<category domain="post_tag" nicename="vim"><![CDATA[vim]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1463140292]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>131</wp:comment_id>
			<wp:comment_author><![CDATA[dotnetomaniak.pl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetomaniak.pl/EN-From-Dwarf-Fortress-to-Vim-evolution-of-Net-programmer-Passionate-Programmer</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.2</wp:comment_author_IP>
			<wp:comment_date>2013-07-03 18:06:48</wp:comment_date>
			<wp:comment_date_gmt>2013-07-03 17:06:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>[EN] From Dwarf Fortress to Vim - evolution of .Net programmer | Passionate Programmer...</strong>

Dziękujemy za dodanie artykułu - Trackback z dotnetomaniak.pl...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1372871208.9525";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1430952053.0904";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1430952053]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>132</wp:comment_id>
			<wp:comment_author><![CDATA[Jakub Jedryszek]]></wp:comment_author>
			<wp:comment_author_email>jakub.jedryszek@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>129.130.10.248</wp:comment_author_IP>
			<wp:comment_date>2013-07-03 18:20:00</wp:comment_date>
			<wp:comment_date_gmt>2013-07-03 17:20:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I chose to learn emacs, because I am able to paste code from external source. And some emacs commands are the same on Terminal (e.g.CTRL+A and CTRL+E). 

However there is one, big advantage of master vi(m). It is installed on almost all UNIX machines. It means: to quick edit something, you need to know how to use: 'i' and ':wq' :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[950757904]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>135</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>88.156.92.183</wp:comment_author_IP>
			<wp:comment_date>2013-07-07 17:49:00</wp:comment_date>
			<wp:comment_date_gmt>2013-07-07 16:49:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have used emacs while writing code in asm and c on my university :) Back then, I hated it, maybe now it is a time to try it out again.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>132</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[950757904]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[954554481]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>136</wp:comment_id>
			<wp:comment_author><![CDATA[Krzysztof Morcinek]]></wp:comment_author>
			<wp:comment_author_email>krzysztof.morcinek@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>178.36.229.216</wp:comment_author_IP>
			<wp:comment_date>2013-07-11 22:05:00</wp:comment_date>
			<wp:comment_date_gmt>2013-07-11 21:05:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Vim is great tool. I was working with it for 2 years editing test scripts (not connected with .NET).

@MichalFranc:disqus  Are you using VsVim together with R#? I tried this extension about 2 years ago, but it didn't work so smoothly, and later I started using power of R#, and forget about VsVim.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[959113715]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>137</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>83.17.97.234</wp:comment_author_IP>
			<wp:comment_date>2013-07-12 07:06:00</wp:comment_date>
			<wp:comment_date_gmt>2013-07-12 06:06:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yes, VsVim with R#, this combo works 'ok'. There are little problems and annoyances with shortcuts mapping and 'external edit' problem, but in the end you can live with it ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>136</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[959113715]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[959494193]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Why Something &gt; null is false - C# and Lifted Operators</title>
		<link>http://www.mfranc.com/programming/something-null-is-false-c-and-lifted-operators/</link>
		<pubDate>Sun, 04 Aug 2013 09:35:21 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1790</guid>
		<description></description>
		<content:encoded><![CDATA[In the project, I am working with, there is a simple feature that imports data from external source. Import is only interested in new records. This condition is fulfilled with 'DateTime' comparision.

<pre class="lang:c# decode:true " >if (data.CreateDate =&gt; this.LastUpdateDate)
{
     DoSomething();
}
</pre>

Looks simple, Unfortunately I have encountered a nice 'bug' :). On the first run, import got 0 records and I was sure that this number should be around couple of thousands. It seemed like the if clause returned false. In this scenario, on the first run, LastUpdateDate value is undefined.

The comparision looks like.

<pre class="lang:c# decode:true " >Something =&gt; Nothing == false</pre>

Weird, especially when you know that 'DateTime' is a struct and can't be null. It's default value is '0001-01-01 00:00:00'. This comparision should evaluate to true right ? Sadly there is one catch. LastUpdateDate is a 'DateTime?' type. I assumed that both operands are of 'DateTime' type. Nullable DateTime is whole different story.

The comparision changes to

<pre class="lang:c# decode:true " >DateTime &gt; DateTime?</pre>

Default value of DateTime? is null, It is then.

<pre class="lang:c# decode:true " >DateTime.Now &gt; null</pre>

Let's see what the result of this comparision.

<pre class="lang:c# decode:true " >public class DateTimeTest
{
        public DateTime Date { get; set; }
}

void Main()
{
     var result = DateTime.Now &gt; new DateTimeTest().Date;
       Console.WriteLine(result);
}</pre>

Simple class, with only one property a 'DateTime' struct. Result is <strong>'True'</strong>, because DateTime.Now > default(DateTime).

Now let's check what happens if there is a DateTime? property.

<pre class="lang:c# decode:true " >public class NullableDateTimeTest
{
        public DateTime? Date { get; set;}
}

void Main()
{
     var result = DateTime.Now &gt; new NullableDateTimeTest().Date;
       Console.WriteLine(result);
}</pre>

Default Date value is null and the result is <strong>'False'</strong>.

<h3>What is happening when we want to compare Non-nullable type with Nullable type ?</h3>

There is a special kind of behaviour for this case. <a href="http://en.csharp-online.net/ECMA-334%3A_14.2.7_Lifted_operators">In C# specification 14.2.7 Lifted Operators</a>

<blockquote>Lifted operators permit predefined and user-defined operators that operate on non-nullable value types to also be used with nullable forms of those types.</blockquote>

Check out this excellent description of lifted operators <a href='http://stackoverflow.com/a/3370150'>by Jon Skeet</a>.

<h3>Why something > null is false</h3>

It seems like this is a design choice. In the <a href="http://en.csharp-online.net/ECMA-334%3A_14.2.7_Lifted_operators">specification</a> you can find this:

<blockquote> The lifted operator produces the value false if one or both operands are null.</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1790</wp:post_id>
		<wp:post_date>2013-08-04 10:35:21</wp:post_date>
		<wp:post_date_gmt>2013-08-04 09:35:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>something-null-is-false-c-and-lifted-operators</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[c#]]></category>
		<category domain="post_format" nicename="post-format-standard"><![CDATA[Standard]]></category>
		<category domain="category" nicename="programming"><![CDATA[Programming]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[1567544598]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>139</wp:comment_id>
			<wp:comment_author><![CDATA[dotnetomaniak.pl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetomaniak.pl/EN-Why-Something-null-is-false-C-and-Lifted-Operators-Passionate-Programmer</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.2</wp:comment_author_IP>
			<wp:comment_date>2013-08-04 10:39:09</wp:comment_date>
			<wp:comment_date_gmt>2013-08-04 09:39:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>[EN] Why Something &gt; null is false - C# and Lifted Operators | Passionate Programmer...</strong>

Dziękujemy za dodanie artykułu - Trackback z dotnetomaniak.pl...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1375609149.7456";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1430952052.9968";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1430952053]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>141</wp:comment_id>
			<wp:comment_author><![CDATA[Błażej Matuszewski]]></wp:comment_author>
			<wp:comment_author_email>bmatuszewski@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>194.181.155.156</wp:comment_author_IP>
			<wp:comment_date>2013-08-05 08:54:00</wp:comment_date>
			<wp:comment_date_gmt>2013-08-05 07:54:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Funny thing is that if you look for four cases you realize that none of them is true (so its not greater, it's not lesser and it's not equal)... that's really sad ;-)
---

internal class NullableDateTimeTest
{
public DateTime? Date { get; set; }
}

    internal class Program
{
private static void Main(string[] args)
{
var result_a = DateTime.Now &gt; new NullableDateTimeTest().Date;
var result_b = DateTime.Now &lt; new NullableDateTimeTest().Date;
var result_c = DateTime.Now.Equals(new NullableDateTimeTest().Date);
var result_d = DateTime.Now == new NullableDateTimeTest().Date;

            Console.WriteLine(result_a);
Console.WriteLine(result_b);
Console.WriteLine(result_c);
Console.WriteLine(result_d);

}

    }

-----

Prints out:
False
False
False
False]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[988950790]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>142</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>83.17.97.234</wp:comment_author_IP>
			<wp:comment_date>2013-08-05 09:29:00</wp:comment_date>
			<wp:comment_date_gmt>2013-08-05 08:29:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yeah, logically at least one option should return true :)


Eric Lippert in this answer gives a nice backgorund on this 'weird' behaviour.
http://stackoverflow.com/a/4400231/104135]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>141</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[988950790]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[988964269]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>182</wp:comment_id>
			<wp:comment_author><![CDATA[ling maaki]]></wp:comment_author>
			<wp:comment_author_email>lingmaaki@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>202.164.129.165</wp:comment_author_IP>
			<wp:comment_date>2014-05-18 12:26:00</wp:comment_date>
			<wp:comment_date_gmt>2014-05-18 11:26:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You can solve this problem in two ways, either make it a nullable type, or use the System.DateTime.MinValue.

Source....<a href="http://net-informations.com/q/faq/nullable.html" rel="nofollow">C# Datetime null</a>

ling]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1391711530]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>191</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>86.13.101.12</wp:comment_author_IP>
			<wp:comment_date>2014-05-25 18:55:00</wp:comment_date>
			<wp:comment_date_gmt>2014-05-25 17:55:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks.
Equality operator is a different story. This post was mainly around the '&gt;' operator.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>182</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1391711530]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1403735323]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>My 100th post .... Welcome to London</title>
		<link>http://www.mfranc.com/career/my-100th-post-welcome-to-london/</link>
		<pubDate>Sat, 25 Jan 2014 00:31:09 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1856</guid>
		<description></description>
		<content:encoded><![CDATA[It have been a while, but my blog is not dead ... yet. Finally, I have found motivation to write my 100th post.

A lot has changed recently and I am spending most of the time stabilizing my life after "breaking" changes ^^.  I have planned to move abroad for quite a while and due to various personal reasons I had to wait.  But Finally, I have decided to move on. Time to get out of my "comfort zone" and face new challenges.

My new home - London.  Never thought that this would happen, I was supposed to be in Germany or Sweden, that was the plan :) But I am glad that I am here, really glad.

<h3>Why Sweden ?</h3>
I have a very close family in there. I had a brief work experience in this great country, really liked it. Friendly people, good opportunities, IT is very strong. Weather could be problematic, but at least colder climate motivates you to work harder. If there is nothing to do you just go back to productive activities ;).

I was thinking about sending my CV to <a href="http://www.tretton37.com">tretton37</a> but it didn't happen. They do look like a fantastic company with passionate developers. There is also <a href="http://www.dice.se">DICE</a> in Stockholm, I love BF series and was considering even to move into gaming industry, but nah web development and agile + business is the way to go for me :) 

<h3>Why Germany ?</h3>
The IT is also strong. Berlin looks like a vibrant city with emerging startup ecosystem. I have noticed a lot of companies in games industry using Unity framework, Cool. Germany is quite cheap when you compare cost of living in the Europe. Houses and apartments prices are very similar to Polish cities like Krakow and Warsaw. It is close to my hometown which is always nice but with flights it is not a problem anymore.

<h3>UK / London</h3>
So why I am in London ;) Yeah ... 
Great community, great companies, great city, rent is quite expensive but its not that bad. I have analyzed the Dev community. Lots of meetups, conferences, there is allways something to do almost every day, 6 Amazing!. I think that this is the place to be for a passionate Dev, if he wants to develop your career. I will be working for <a href="http://www.justgiving.com/">JustGiving</a>. Great company with work culture that is reflecting my approach and the way I think. Great staff with very bright people. We will see how it goes. So far so good ;) At the moment I am focusing on my productivity, to be ready as soon as possible to get stuff done. 

<h3>"The Plan"</h3>

Thanks to these changes, I have found my motivation and passion. It got missing somewhere, but here I have it again :)

For the next 6 months in technical area I want to focuse on:

<b>F#</b>
The time has come and I am 'mature' enough to finally start using F# for some serious stuff. More to come soon.

<b>TDD / DDD / BDD</b>
I have been using TDD, love this approach but still there is a lot to learn. With TDD naturally I thought about BDD and to just go with the flow DDD thinking is something I need to get a serious grasp on.

<b>Open Source</b>
It's time to get some pull requests accepted :)

<b>English language + social activities in the London Dev community</b>

<h3>My Book List for the next months</h3>
- <a href="http://www.growing-object-oriented-software.com/">Growing Object-Oriented Software Guided by Tests</a>
- <a href="http://www.amazon.co.uk/Test-Driven-Development-Addison-Wesley-Signature/dp/0321146530">Test Driven Development</a>
- <a href="https://leanpub.com/software-architecture-for-developers">Software Architecture for Developers</a>
- <a href="http://joelonsoftware.com/articles/BestSoftwareWriting.html">The Best of Software Writing</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1856</wp:post_id>
		<wp:post_date>2014-01-25 01:31:09</wp:post_date>
		<wp:post_date_gmt>2014-01-25 00:31:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-100th-post-welcome-to-london</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="career"><![CDATA[Career]]></category>
		<category domain="post_format" nicename="post-format-standard"><![CDATA[Standard]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[2170585213]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Pragmatic Developer</title>
		<link>http://www.mfranc.com/blog/pragmatic-developer/</link>
		<pubDate>Thu, 27 Feb 2014 22:36:22 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1872</guid>
		<description></description>
		<content:encoded><![CDATA[I have changed the Blog name from "Passionate Programmer" to "Pragmatic Developer". Why this change you could ask ? :)

<h3>From Programmer to Developer</h3>

Coder / Ninja / Hacker / Programmer / Developer / Engineer even Rock star.  Quite a big list of names used to describe someone in our field. Why then it is really important for me feel as a "Developer" instead of a "Programmer" ?

My first job. I am sitting at the desk, bashing the keyboard, creating code someone else thought about. Simple code monkey duty, but I am happy as a Coder. One Year later different company, I can finally influence the code. I get more responsibilities. I finally feel that I am becoming a real programmer. Still a junior one but there is a progress. Another Year, another company. I am leaving technical domain from time to time, making workshops, advising my fellow team-mates. I am starting to feel the importance of soft skills. Negotiation, Communication, Team-Play even kindness. Instead of focusing on the code, I am becoming all around, problem solver. New feature can do this, influence organization can do this, change deployment procedure can do this, chat with client sure can do this, provide on site support yep this too :). I have developed and my responsibilities changed a lot since I started. Programmer is just not enough to describe the things I do. Developer it is better. I develop products, teams, even myself. Wonder what's next ;) 

<h3>From Passionate to Pragmatic</h3>

I always thought that Passion is the single most important trait of a successful programmer. Now I think it is crucial but pragmatism took the leading role. I had to try a lot of different technologies and tools to really appreciate this attitude. I have stopped participating in technological 'flame wars'. I do know that each technology has its pros / cons. My only drive is how much 'value' can this provide. I am just interested in how easily I do solve the problems. Also I could tell you a lot of stories about how crazy I was when it came to the code quality. Now I do strongly believe in the 'Good Enough Software'. There is always a middle-ground to be found and We have to find. That's why I recently discovered the value of code-review process. 2nd pair of eyes can greatly influence your code, design and can influence your way of thinking.

Pragmatism also changed the way I approach my career. I was 'Chasing new Technologies'. I wanted to be the cool kid, that's why I have changed jobs quite a lot. Now I know that when you are looking for place to work the single most important thing is the 'Culture'. It's the factor that can make your live happy or quite sad. And there is the thing about politics. I always thought that politics sucks, I am an engineer why do I need to engage in this messy managerial stuff. This perception changed a lot. If you want to influence your organisation, culture, company, you need to gain political power. You can't be an insignificant peon in our IT world that is driven by the huge EGOs :)

My evolution was quite surprising to me. Wonder how I will think in the next 4 years. I would really like to read your programming path, don't be shy add a comment ;)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1872</wp:post_id>
		<wp:post_date>2014-02-27 23:36:22</wp:post_date>
		<wp:post_date_gmt>2014-02-27 22:36:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>pragmatic-developer</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="blog"><![CDATA[Blog]]></category>
		<category domain="category" nicename="career"><![CDATA[Career]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[2332174142]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>165</wp:comment_id>
			<wp:comment_author><![CDATA[dotnetomaniak.pl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetomaniak.pl/EN-Pragmatic-Developer</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.2</wp:comment_author_IP>
			<wp:comment_date>2014-02-27 23:39:00</wp:comment_date>
			<wp:comment_date_gmt>2014-02-27 22:39:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>[EN] Pragmatic Developer...</strong>

Dziękujemy za dodanie artykułu - Trackback z dotnetomaniak.pl...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1393540740.7998";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1430952052.8252";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1430952052]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>166</wp:comment_id>
			<wp:comment_author><![CDATA[Jakub Jedryszek]]></wp:comment_author>
			<wp:comment_author_email>jakub.jedryszek@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.jj09.net</wp:comment_author_url>
			<wp:comment_author_IP>129.130.18.60</wp:comment_author_IP>
			<wp:comment_date>2014-02-28 03:11:00</wp:comment_date>
			<wp:comment_date_gmt>2014-02-28 02:11:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I am not sure what you mean by ‘Chasing new Technologies’, but I in my opinion knowledge/experience in many of them can be only a good thing. E.g. by learning dynamic languages like Ruby and Python you can see that they are cool, but they also introduce new problems like maintainability. In the other hand, you can understand why something is done like that in C# and which problem it solves.
I enjoy learning new things all the time. After 1 year work as ASP.NET developer, I switched to Python, Scala, and Ada(SPARK) environment. Totally different World. I work with language, which is not yet finished (SPARK), IDE which is not yet released (we have access to private Beta) and still much worse than Visual Studio or Eclipse. However good enough for Ada developers who build planes:O I think I have wider spectrum of knowledge now. I also gain much more respect for Visual Studio (how much good work is done over there) and when I hear people complaining about it, I just smile :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1263873515]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>167</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>109.231.194.195</wp:comment_author_IP>
			<wp:comment_date>2014-02-28 10:51:00</wp:comment_date>
			<wp:comment_date_gmt>2014-02-28 09:51:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey, Sure knowledge is a good thing, but there is one resource that is just limited .... time :) You have to prioritise a bit.

By chasing technologies I want to say that I did some carrer decision based solely on technical part of the job. You know "I need to work for a company that uses this and this and that".  Now, I think that If you want to grow in more senior areas like managing, leading, working in a team, big picture etc. you need a place that has also a 'Culture' that feels right for you and does support your work-attitude.


So instead of looking for a particular technology used in one of the companies, I do focus now on different things like.


- Is the work-culture open
- at start do you get a huge credit of trust or you are not being trsuted at all
- is the team passionate about stuff they do
- is the product interesting and is it used ? who is the consumer ? how does it affect other people ?


I am not against learning and trying stuff. If you want to be pragmatic about something you need to know a lot of stuff, so you can choose which path is the right one. 


Visual Studio .... vim for life :) I just hate the loading times and how huge the VS is. Also solution files and csproj are crazy.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>166</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1263873515]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1264182188]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>TDD - commit by commit String Calculator (I)</title>
		<link>http://www.mfranc.com/tdd/tdd-commit-by-commit-string-calculator-i/</link>
		<pubDate>Mon, 10 Mar 2014 07:00:08 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1913</guid>
		<description></description>
		<content:encoded><![CDATA[In this series I want to share my approach to TDD. I will do a simple TDD kata, sharing with you all my decisions and thoughts. It's called commit by commit beacuse you will find here links to github with each step. There will be a commentary to each one of these. I encourage you to comment and show me the flaws in my "style" of TDD coding. I also want to learn from you. I do know that my approach has its problems and there is allways a way to do  something better.
<h3>String Calculator Kata</h3>
First Kata is quite simple. You can find all the details on the <a href="http://osherove.com/tdd-kata-1/">Roy Oshevore's site</a>. Just to be brief, I am going to implement string calculator that parses values from the string and sums all of them. For example for an input of "1,2,3" the end result will be "6". This simple kata is a good problem, to present you the way I do approach the coding with TDD.

If you don't know the concept of "Coding Kata", no worries, have fun reading this <a href="http://codekata.com/kata/codekata-how-it-started/">blog post by Dave Thomas</a> the guy who coined the term.
<h4>Step I - Empty Project</h4>
Let's start simple with an empty project containing one test class. Yes test class with a default name Class1. Why Class1 ? Right now, I don't want to decide on the naming of the class under test. Also just to start, first lines of code are going to be inside the Test Method. I am not creating class or method, just a code inside the Test Method.

Thats one of the approaches, I've learned recently. Start as soon as possible with anything and check all the assumptions about the problem you are trying to solve. Don't waste time over-thinking stuff not related to the problem at hand. I know that as engineers we do have a tendency to be mad about code quality from the start. But let's forget about it for a while and this time do it differently ;) 

Approach like this is ok for not so overcomplicated and self-contained problems. With more complex stuf, I tend to think about design for a while before I write the code. <a href="http://codemanship.co.uk/parlezuml/blog/?postid=987">You can read more about classic and london school approach to TDD here.</a>

Here is a <a href="https://github.com/michal-franc/BlogStuff/commit/32bef5ef7416bd337bf2cce9d20588be0639e1a8">link to the commit</a> with my first step. I will post links like this at the end of the steps.
<h4>Step II - The most obvious string</h4>
First requirement : for input string with numbers separated by ',' return sum of these numbers.

I approached TDD previously with tendency to start with tests for edge cases, null checks, exceptions. It is a very tempting approach. You can allways write something fast and make some easy "red/green/refactor happy" points. No, no, no. Start with a solution to The most basic requirement, that way you can check the requirements and the context of the problem before even touching edge cases.
<a href="https://github.com/michal-franc/BlogStuff/commit/0ad433b022b131f056c67336881f15a71b314fb4">Simple solution to the first requirement.</a>
<pre class="lang:c# decode:true">[Test]
public void ICanParseString_AndSumUpValues()
{
   var input = "1,2,3,4,5";
   var expectedSum = 15;

   var values = input.Split(',');

   var actualSum = values.Select(x =&gt; int.Parse(x)).Sum();

   Assert.That(actualSum, Is.EqualTo(expectedSum));
}</pre>
The code uses Split method on string to get all the values. Values are then parsed and summed up. Beacuse, at this moment I don't care about the edge cases, the "Parse" method is used instead of "TryParse". This is just a start, a first step that will influence next steps. Right now I want to start as simple as possible and prove that solution like this works and I do have a meaningfull result.

<h4>Step III - Introduce Class and Method</h4>
With a simple solution that fullfills the first simple case. I can now create a class with a method.
<a href="https://github.com/michal-franc/BlogStuff/commit/8341b36964b192214c246c3189cbc2ee0017b189">Commit</a>
<pre class="lang:c# decode:true">public class StringCalculator
{
    public object SumFromString(string input)
    {
       var values = input.Split(',');
       return values.Select(x =&gt; int.Parse(x)).Sum();
    }
}</pre>
This is a start. With class in place I can think of some simple edge cases.
<h4>Step IV - Edge Cases</h4>
The time has come for some edge cases. I can define at least two of these now:
- What happens if input is empty or null ?
- What to do when input is not formatted correctly ? How to check it ?

Lets try to do the first one with empty, null, whitespace input scenario. What to do ? I can treat it as a wrong input throwing an exception ? or just return a zero value hiding the problem. Answer to this hard question is hidden inside the context around your problem. I have to ask a question, How is this code going to be used ? Who is going to call it ?. To keep things simple, I will stick with the return 0 option.

<a href="https://github.com/michal-franc/BlogStuff/commit/c1c173a5c1a7aeb3c95f9bf2e2cfe4d717289efb">Commit</a>
<pre class="lang:c# decode:true">        [Test]
        public void IfInputNullEmptyWhiteSpace_Return_0()
        {
            var input = string.Empty;
            var expectedSum = 0;

            var actualSum = new StringCalculator().SumFromString(input);

            Assert.That(actualSum, Is.EqualTo(expectedSum));
        }</pre>
These is the test. Right now it is failing, to make it green I just added simple if clause. Due to simplicity no code in here <a href="https://github.com/michal-franc/BlogStuff/commit/3563df620a9edd6f353f1641505c6bfa777ae7d2">just commit link</a>.

<h4>Step V - Next edge case</h4>

What to do when input is not formatted correctly ? How to check it ?

I am using split, in this simple form, the code does expect string in a correct format. I am assuming that if I can't parse the string with the split function, then the input string is not correctly formated.

<a href="https://github.com/michal-franc/BlogStuff/commit/6233dc9a063bb6b31318e9c0a80f2cc5d776946b">Commit</a>
<pre class="lang:c# decode:true">[Test]
public void IfInputNotFormatted_throws()
{
    var input = "1,2,3,4,,,5";

    Assert.Throws&lt;InputStringNotFormatedProperly&gt;(
         () =&gt; new StringCalculator().SumFromString(input));
}</pre>
As you can see the test is expecting custom exception. To be honest. I don't know if the CustomException is needed here, maybe it would be better to just have a FormatException throwed here.
<a href="https://github.com/michal-franc/BlogStuff/commit/ee3ebc827ed9ce8a61acc02bfaef4a25a5635ae2">Commit</a>
<pre class="lang:c# decode:true">try
{
     var values = input.Split(',');
     return values.Select(x =&gt; int.Parse(x)).Sum();
}
catch (FormatException ex)
{
      throw new InputStringNotFormatedProperly(
         string.Format("Unexpected format input - {0}", input), ex);
}</pre>

<h4>Things To note</h4>

- all of the code is in one file, there is no need to separate anything, at least right now
- my file still has a name of Class1.cs, I don't want to rename it in this early stage. Of course, I have to make sure that this mess won't leak into codebase later.

<h4>Summary</h4>
- don't create class and methods on the start, write stuff inside the test method
- start simple with code fulfilling the most basic requirmenet, don't focus on edge cases]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1913</wp:post_id>
		<wp:post_date>2014-03-10 08:00:08</wp:post_date>
		<wp:post_date_gmt>2014-03-10 07:00:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tdd-commit-by-commit-string-calculator-i</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tdd"><![CDATA[TDD]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[81]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[TDD]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[TDD approach presented by simple string calculator kata. You can read all my design decision commit by commit.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[2390044520]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>169</wp:comment_id>
			<wp:comment_author><![CDATA[dotnetomaniak.pl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetomaniak.pl/EN-TDD-commit-by-commit-String-Calculator-I-Pragmatic-Developer</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.2</wp:comment_author_IP>
			<wp:comment_date>2014-03-10 10:41:09</wp:comment_date>
			<wp:comment_date_gmt>2014-03-10 09:41:09</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>[EN] TDD - commit by commit String Calculator (I) | Pragmatic Developer...</strong>

Dziękujemy za dodanie artykułu - Trackback z dotnetomaniak.pl...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1394444469.2348";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1430952052.7628";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1430952052]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>170</wp:comment_id>
			<wp:comment_author><![CDATA[Arek Benedykt]]></wp:comment_author>
			<wp:comment_author_email>arkadiusz@benedykt.net</wp:comment_author_email>
			<wp:comment_author_url>http://www.benedykt.net/</wp:comment_author_url>
			<wp:comment_author_IP>188.117.147.82</wp:comment_author_IP>
			<wp:comment_date>2014-03-10 11:28:00</wp:comment_date>
			<wp:comment_date_gmt>2014-03-10 10:28:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[interesting approach, I think I've never wrote an implementation in a test method, looks like I might speed the things in some cases]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1278437953]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>171</wp:comment_id>
			<wp:comment_author><![CDATA[Jakub Jedryszek]]></wp:comment_author>
			<wp:comment_author_email>jakub.jedryszek@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.jj09.net</wp:comment_author_url>
			<wp:comment_author_IP>129.130.11.229</wp:comment_author_IP>
			<wp:comment_date>2014-03-10 16:53:00</wp:comment_date>
			<wp:comment_date_gmt>2014-03-10 15:53:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks Michal!


It is nice 101 TDD. Could you make a post (or another series) about "TDD in CRUD apps" (when you finish this series)? CRUD apps is something what 90% of .NET developers are doing :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1278728015]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>172</wp:comment_id>
			<wp:comment_author><![CDATA[Adam Kosiński]]></wp:comment_author>
			<wp:comment_author_email>still.adam.k@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>81.93.224.250</wp:comment_author_IP>
			<wp:comment_date>2014-03-10 17:33:00</wp:comment_date>
			<wp:comment_date_gmt>2014-03-10 16:33:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Good work! 

The idea of starting with code written in test method is nice for starting, though I have my doubts about it. Some itching at the back of my head, that it will hurt me badly somewhat :) I will have to check it out myself.

On a side note, I don't think this kata is best to illustrate TDD as it has no clearly visible Refactor step - the main solution you came up with is good enough for entire kata.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1278782026]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>173</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>86.13.101.12</wp:comment_author_IP>
			<wp:comment_date>2014-03-10 22:12:00</wp:comment_date>
			<wp:comment_date_gmt>2014-03-10 21:12:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I tried it couple of times and it really is helpfull. There is allways a temptation to create boilerplate stuff first :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>170</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1278437953]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1279179084]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>174</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>86.13.101.12</wp:comment_author_IP>
			<wp:comment_date>2014-03-10 22:15:00</wp:comment_date>
			<wp:comment_date_gmt>2014-03-10 21:15:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There will be soome posts likle this, with examples resembling production code changes. This is the way I am heading with this serie. The biggest advantage of TDD is design improvements so more complex and real life examples are coming.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>171</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1278728015]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1279182802]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>175</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>86.13.101.12</wp:comment_author_IP>
			<wp:comment_date>2014-03-10 22:19:00</wp:comment_date>
			<wp:comment_date_gmt>2014-03-10 21:19:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sure it can hurt you badly. For instance Pawel Sawicz noticed that I am returning an object instead of int... a rookie mistake caused by R#.

There will be a different kata focused more on designing code with help of TDD. Nevertheless this kata also have nice refactorization examples. More to come soon.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>172</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1278782026]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1279188437]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>176</wp:comment_id>
			<wp:comment_author><![CDATA[TDD – commit by commit String Calculator Kata (II) | Pragmatic Developer]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/tdd/tdd-commit-by-commit-string-calculator-ii/</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.17</wp:comment_author_IP>
			<wp:comment_date>2014-04-02 07:02:34</wp:comment_date>
			<wp:comment_date_gmt>2014-04-02 06:02:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Posted on 2014/04/02 2014/03/31 by Michal Franc   Previous post in the series &#8211; TDD commit by commit String Calculator (I). [...]]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1396418555.0369";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1430952052.638";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1430952052]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>758</wp:comment_id>
			<wp:comment_author><![CDATA[TDD / Unit Testing big list of learning resources from basics to advanced topics | Pragmatic Developer]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/unit-testing/tdd-unit-testing-big-list-of-learning-resources-from-basics-to-advanced-topics/</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.17</wp:comment_author_IP>
			<wp:comment_date>2015-05-09 00:40:14</wp:comment_date>
			<wp:comment_date_gmt>2015-05-08 23:40:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...]  [...]]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1431128414.0307";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1431202419.4662";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1431202419]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>TDD – commit by commit String Calculator Kata (II)</title>
		<link>http://www.mfranc.com/tdd/tdd-commit-by-commit-string-calculator-ii/</link>
		<pubDate>Wed, 02 Apr 2014 06:00:40 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=1969</guid>
		<description></description>
		<content:encoded><![CDATA[Previous post in the series - <a href="http://www.mfranc.com/tdd/tdd-commit-by-commit-string-calculator-i/">TDD commit by commit String Calculator (I)</a>.

Last part ended with the basic functionality of string calculator. My "class" can parse numbers and sum them up. I have started with an empty project, slowly adding code with features. This post is the 2nd part of the series.
<h3>Step VI - Clean up</h3>
Before I can start adding new stuff, I need to make a little re-factorization. There are couple of issues in the code.
<pre class="lang:c# decode:true ">public class StringCalculator
{
   public object SumFromString(string input)
   {
      if (string.IsNullOrWhiteSpace(input)) return 0;

      try
      {
         var values = input.Split(',');
         return values.Select(x =&gt; int.Parse(x)).Sum();
      }
      catch (FormatException ex)
      {
        throw new InputStringNotFormatedProperly(string.Format("Unexpected format input - {0}", input), ex);
      }
   }
}</pre>
&nbsp;
<h4>R#, var and other fun</h4>
One of the issue, thanks to <a href="http://pawel.sawicz.eu/">Pawel Sawicz</a> for pointing this out, is the type of "object" returned by the main function. There is an "object type" instead of "int". This problem, probably, was caused by R# auto method extraction (that's one of the reasons why I have disabled R# for a while just to check how it affects my work. Blog post about my observations coming soon). SAdly, This issue wasn't caught by the unit tests, I am not asserting the expecting "type" just the "value". This problem is related to the excessive "var" keyword usage. With explicit "int" instead of "var", there would be an error on compilation. This error is also an assertion, that's why I think it is beneficial to use explicit types on the expected "object / value".
<h4>Class name + one file</h4>
I also noticed that the main class name is "Class1.cs". Well, what can I say, not a good file-name, when I started implementing features this wasn't a problem but now when I do know the name of my main class, I don't see a reason to leave it like this. It's time to rename the file to match the "class name". With this change in mind it would be also great to split up the file into multiple files. One big file with code is a big "NO NO". I don't want to see the Custom exception or other not-relevant code, especially when I know that it won't be modified in the foreseeable future. Little note. I am not introducing a new project for tests 'Yet'.
<h4>Test first - first class citizen</h4>
Quality of the tests could also be slightly better. Right now each test contains code to create "new StringCalculator()". It's not that problematic but it creates an unwanted noise that distorts the readability of code. Unit test has to be clean, readable and easy to follow. I do believe in an idea of treating unit tests as "First Class Citizens".
<blockquote>"The bottom line of all this is that we should consider our tests as being first. We already know we should write them first; but we should also clean them first, maintain them first, think of them first, and keep them first. We should give our tests the highest priority.
That is what "Test First" really means. The Tests Come First!"

<a href="http://blog.8thlight.com/uncle-bob/2013/09/23/Test-first.html">Robert C Martin - http://blog.8thlight.com/uncle-bob/2013/09/23/Test-first.html</a></blockquote>
This is quite radical, I don't agree with everything said here, but there is one thought that I do like. Take care of your tests, maintain them, clean and re-factor them. They are the description and the best documentation you have.

After this "brief" introduction time for some code changes.

<a href="https://github.com/michal-franc/BlogStuff/commit/3b7141bac1c533d6cb377a0d3c6388c1f70f4d14">Commit - test cleanup</a>
I have changed the "expected" value declaration from var to int and automatically compilation error popped up. Now, I can change the "value type" and check if the error is gone and test are passing. Also, I have changed the name of the Test Class, but I am not splitting files yet. I don't want to create noise and bloat up the commit diff. I introduced the "SetUp" function that is responsible for creating instance of "StringCalcualtor".

<a href="https://github.com/michal-franc/BlogStuff/commit/cff5261ddb30c6fbacf3a8d7c8da2e160e536a12">Commit - split file</a>
Finally the split is finished and I am happy ;)
<h3>Step VII - Newline character as deli-meter</h3>
New requirement, allow the new lines between number (instead of commas). Treat them as deli-meters. Simple example: for input "1\n2,3\n4", calculator should return "10".
<pre class="lang:c# decode:true">[Test]
public void Newline_character_treated_as_delimeter()
{
    var input = "1\n2,3\n4";
    var expectedSum = 10;

    int actualSum = stringCalculator.SumFromString(input);

    Assert.That(actualSum, Is.EqualTo(expectedSum));
}</pre>
<a href="https://github.com/michal-franc/BlogStuff/commit/b8eed2dea2b2f2d3a6f1a2612e18d6df2dd4e753">Commit - Newline character test</a>

Test is pretty straightforward, nothing to explain here. This now throws my custom exception, the input is not correct due to the "\n" characters.
<pre class="lang:c# decode:true">var values = input.Split(',','\n');</pre>
<a href="https://github.com/michal-franc/BlogStuff/commit/705dc92b91e3c9df4a4eab8c7e2438c73fd68504">Commit - Newline character test</a>

Implementation is very simple. Do I need to create fancy code with "sparkles"? Not for this requirement. Split function accepts more separators and it's just "Good Enough".

Can I refactor the code and tests ? I don't think so. Code is still quite straightforward.

In this part I just implemented one new feature.

Summary:
- on expected value use explicit "type" instead of "var", compilation error is your friend
- refactor your code and tests, "Test First" and treat your "Tests as First class citizens"
- create "Good enough" software, don't overcomplicate solutions.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1969</wp:post_id>
		<wp:post_date>2014-04-02 07:00:40</wp:post_date>
		<wp:post_date_gmt>2014-04-02 06:00:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tdd-commit-by-commit-string-calculator-ii</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tdd"><![CDATA[TDD]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[79]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[tdd]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[2nd part of the serie about applied TDD with examples on commit by commit basis, with commentary about decision making process.. String Calculator TDD Kata.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[2537301508]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>177</wp:comment_id>
			<wp:comment_author><![CDATA[dotnetomaniak.pl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetomaniak.pl/ENTDD-commit-by-commit-String-Calculator-Kata-II-Pragmatic-Developer</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.2</wp:comment_author_IP>
			<wp:comment_date>2014-04-02 07:57:35</wp:comment_date>
			<wp:comment_date_gmt>2014-04-02 06:57:35</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>[EN]TDD – commit by commit String Calculator Kata (II) | Pragmatic Developer...</strong>

Dziękujemy za dodanie artykułu - Trackback z dotnetomaniak.pl...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1396421855.8876";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1430952052.56";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1430952052]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>183</wp:comment_id>
			<wp:comment_author><![CDATA[TDD commit by commit String Calculator Kata III | Pragmatic Developer]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/tdd/tdd-commit-by-commit-string-calculator-kata-iii/</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.17</wp:comment_author_IP>
			<wp:comment_date>2014-05-20 09:01:47</wp:comment_date>
			<wp:comment_date_gmt>2014-05-20 08:01:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Posted on 2014/05/20 2014/05/19 by Michal Franc   Previous post in the series – TDD – commit by commit String Calculator Kata (II) [...]]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1400572908.0399";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1430952052.4352";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1430952052]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>759</wp:comment_id>
			<wp:comment_author><![CDATA[TDD / Unit Testing big list of learning resources from basics to advanced topics | Pragmatic Developer]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/unit-testing/tdd-unit-testing-big-list-of-learning-resources-from-basics-to-advanced-topics/</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.17</wp:comment_author_IP>
			<wp:comment_date>2015-05-09 00:41:02</wp:comment_date>
			<wp:comment_date_gmt>2015-05-08 23:41:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...]  [...]]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1431128462.8432";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1431202419.357";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1431202419]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>TDD – commit by commit String Calculator Kata (III)</title>
		<link>http://www.mfranc.com/tdd/tdd-commit-by-commit-string-calculator-kata-iii/</link>
		<pubDate>Tue, 20 May 2014 08:00:22 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=2015</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.mfranc.com/tdd/tdd-commit-by-commit-string-calculator-ii/">Previous post in the series – TDD – commit by commit String Calculator Kata (II)</a>

In the previous post I did a cleanup phase and added one feature to the String Calculator. The kata is not finished yet.

<h3>Step VIII - Different Delimiters</h3>
String Calculator should support different delimiters. Previous solution was just a hard-coded hack, still it was good enough solution. There wasn't any requirement that would suggest a need for something more sophisticated. Now I need to modify my main function so it accepts input - <strong>//;\n</strong> where the first line char ';' is delimiter.

The test
<pre class="lang:c# decode:true">
var input = "//;\n1;2;3;4";
var expectedSum = 10;

int actualSum = stringCalculator.SumFromString(input);

Assert.That(actualSum, Is.EqualTo(expectedSum));</pre>

<a href="https://github.com/michal-franc/BlogStuff/commit/47865834461f63245609f5a6c1aeabb1b8bd2777">Commit - Parametrized Delimeter Test</a>

Just an extension to previous tests and simpliest solution below.

<pre class="lang:c# decode:true">var delimeterIndex = input.IndexOf("//");

var delimeters = new List&lt;char&gt;();

if (delimeterIndex &gt;= 0)
{
    delimeters.Add(input[delimeterIndex + 2]);
    input = input.Substring(4);
}
else
{
    delimeters.Add(',');
    delimeters.Add('\n');
}</pre>
<a href="https://github.com/michal-franc/BlogStuff/commit/a971acec8552436379c6ec3745bb97fc2f1dbc76">Commit - Parametrized Delimeter Implementation</a>

IndexOf just checks if the input string does contains sign of parametrisied delimiter. If that's true, code tries to extract delimiter in a very crude way. List of default delimiters is provided in case of missing parametrisied delimiter. This is hard-coded code, not a beautiful solution but I don't have other requirements. I can assume that I don't have to support anything else. I am assuming that data will be provided in one particular format, that's why solution is pretty naive Still it does work and all the existing tests are green, I don't need anything else. 

<h3>Step IX - Clean up</h3>

So now I have a very naive solution. It's time for my favorite part 'The Cleanup'. The main method has some complexity, for the first time. It seems that it has two responsibilities: extracting the delimiters and summing up the values. In order to make this cleaner, I am going to extract those two behaviors into separate methods.

<h4>Extract Delimeters</h4>
<a href="https://github.com/michal-franc/BlogStuff/commit/2405afa256d3941ea1c375b482330e518a5c6e2b">Commit: Extract Delimeters</a>

<h4>Extract Sum</h4>
<a href="https://github.com/michal-franc/BlogStuff/commit/bae9ac101b649790f059d42105125d3bf66266e1">Commit: Sum Method</a>

<pre class="lang:c# decode:true">var delimeters = ExtractDelimeters(ref input);
return this.ParseSumValues(delimeters, input);</pre>

It's not perfect, but this is just one step. I don't like 'ref' keyword, it's a huge code-smell. This needs to be changed in the 'future'. Another problem is that the 'ExtractDelimeters' function is returning 'List' collection. This is also a code smell, especially when I am only using this list to enumerate through its values. Why then provide type of List, if I am not using its functions like Sort, Add ? There is even a better question, shouldn't I restrict the user of code and communicate to him that this collection should only be used to enumerate ?. I am going to change it to IEnumerable. 

<a href="https://github.com/michal-franc/BlogStuff/commit/63cc1aeacbe64e3e6b60a9479341f42b8ce21895">Refactor: List to IEnumerable</a>

So that was the final cleanup, no revolutions here. Still, same creepy code that is haunting my eyes. More changes will come naturally with new requirements.

<h3>Step X - Negative Values</h3>

Next requirement, all the negative values are not supported and I need to throw exception with all the negative values.

 <pre class="lang:c# decode:true">[Test]
 public void Negative_values_not_supported_throws()
 {
    var calculator = new StringCalculator();
    var value = "1,2,-3,-4";

    var ex = Assert.Throws<ArgumentException>(() => calculator.SumFromString(value));
    Assert.That(ex.Message, Is.EqualTo("values '-3,-4' not supported"));
 }</pre>

<a href="https://github.com/michal-franc/BlogStuff/commit/99a89842834d7d1be63e3c5a0e43b6f30ba6b3b3">Commit - Test negative values</a>

Another iteration of previous tests. In order to keep the test simple, I am not using the parametrisied delimiters.

 <pre class="lang:c# decode:true">var values = input.Split(delimeters.ToArray()).Select(x => int.Parse(x));

 var negativeValues = values.Where(x => x < 0);

 if (negativeValues.Any())
 {
     throw new ArgumentException(string.Format("values '{0}' not supported", string.Join(",", negativeValues)));
 }

 return values.Sum();</pre>

<a href="https://github.com/michal-franc/BlogStuff/commit/b825538bb0edef7cdd1588e434b722e3f61199c9">Commit - negative values implementation</a>

I had to move 'int.Parse' step so i could enumerate through the parsed values instead of raw strings. With this I can just collect all the negative values and throw an exception if there are any. Little note, I am using 'Any()' instead of 'Count() > 0' with IEnumerables. Count needs to enumerate whole list, any will stop on first matching element. It also looks better.

Question:

- Are you a fan of 'Count() > 0' or 'Any()' ?
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2015</wp:post_id>
		<wp:post_date>2014-05-20 09:00:22</wp:post_date>
		<wp:post_date_gmt>2014-05-20 08:00:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tdd-commit-by-commit-string-calculator-kata-iii</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tdd"><![CDATA[TDD]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[TDD]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[77]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[tdd]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[TDD commit by commit String Calculator Kata III | Pragmatic Developer]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[3rd part in the series about TDD commit by commit example, solving String Calculator Kata]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[2698920763]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>184</wp:comment_id>
			<wp:comment_author><![CDATA[dotnetomaniak.pl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetomaniak.pl/EN-TDD-commit-by-commit-String-Calculator-Kata-III-Pragmatic-Developer</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.2</wp:comment_author_IP>
			<wp:comment_date>2014-05-20 10:19:08</wp:comment_date>
			<wp:comment_date_gmt>2014-05-20 09:19:08</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>[EN] TDD commit by commit String Calculator Kata III | Pragmatic Developer...</strong>

Dziękujemy za dodanie artykułu - Trackback z dotnetomaniak.pl...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1400577548.7107";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1430952052.3728";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1430952052]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>185</wp:comment_id>
			<wp:comment_author><![CDATA[Łukasz Kurzyniec]]></wp:comment_author>
			<wp:comment_author_email>lkurzyniec@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://kurzyniec.pl/</wp:comment_author_url>
			<wp:comment_author_IP>85.219.228.230</wp:comment_author_IP>
			<wp:comment_date>2014-05-20 15:21:00</wp:comment_date>
			<wp:comment_date_gmt>2014-05-20 14:21:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[There is only one truth - Any() !]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1395721262]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>186</wp:comment_id>
			<wp:comment_author><![CDATA[jedmac]]></wp:comment_author>
			<wp:comment_author_email>mac.jedrzejewski@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>93.105.8.169</wp:comment_author_IP>
			<wp:comment_date>2014-05-20 18:19:00</wp:comment_date>
			<wp:comment_date_gmt>2014-05-20 17:19:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Any() ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1395974512]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>187</wp:comment_id>
			<wp:comment_author><![CDATA[Piotr Perak]]></wp:comment_author>
			<wp:comment_author_email>piotrperak@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>46.151.137.115</wp:comment_author_IP>
			<wp:comment_date>2014-05-22 22:01:00</wp:comment_date>
			<wp:comment_date_gmt>2014-05-22 21:01:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[It's not a question of preference. With IEnumerable use Any().]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1400001568]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>190</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>86.13.101.12</wp:comment_author_IP>
			<wp:comment_date>2014-05-25 18:51:00</wp:comment_date>
			<wp:comment_date_gmt>2014-05-25 17:51:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You are right.


I do remember that I used .Count() because of habit. Then I found .Any(). It took me some time to realize that .Any() is the way to go.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>187</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1400001568]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1403731859]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>195</wp:comment_id>
			<wp:comment_author><![CDATA[TDD – commit by commit String Calculator Kata IV | Pragmatic Developer]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/tdd/tdd-commit-by-commit-string-calculator-kata-iv/</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.17</wp:comment_author_IP>
			<wp:comment_date>2014-05-28 03:29:54</wp:comment_date>
			<wp:comment_date_gmt>2014-05-28 02:29:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] Posted on 2014/05/28 by Michal Franc   Previous part in the series TDD – commit by commit String Calculator Kata (III) [...]]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1401244194.7521";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1430952052.2792";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1430952052]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>760</wp:comment_id>
			<wp:comment_author><![CDATA[TDD / Unit Testing big list of learning resources from basics to advanced topics | Pragmatic Developer]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/unit-testing/tdd-unit-testing-big-list-of-learning-resources-from-basics-to-advanced-topics/</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.17</wp:comment_author_IP>
			<wp:comment_date>2015-05-09 00:42:17</wp:comment_date>
			<wp:comment_date_gmt>2015-05-08 23:42:17</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...]  [...]]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1431128537.2053";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1431202419.2322";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1431202419]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>TDD – commit by commit String Calculator Kata (IV)</title>
		<link>http://www.mfranc.com/tdd/tdd-commit-by-commit-string-calculator-kata-iv/</link>
		<pubDate>Wed, 28 May 2014 02:29:49 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=2103</guid>
		<description></description>
		<content:encoded><![CDATA[Previous part in the series <a href="http://www.mfranc.com/tdd/tdd-commit-by-commit-string-calculator-kata-iii/">TDD – commit by commit String Calculator Kata (III)</a>

Last time I finished on negative values requirement. This will be the "almost" last part of the series about String Calculator Kata. There was some interest in more practical TDD examples in business context with services, layers, mocks and external dependencies like database. I will start next series to cover scenarios like that. Current kata is quite simple and was just a start.

<h3>Step - Ignore numbers greater or equal to 1000</h3>

<pre class="lang:c# decode:true">[Test]
public void Sum_ignores_number_greater_than_1000()
{
    var calculator = new StringCalculator();
    var value = "1,2000,1000,1003";

    var actual = calculator.SumFromString(value);

    var expected = 1;

    Assert.That(actual, Is.EqualTo(expected));
}</pre>

I am expecting 1 here, all the other values are above 1000.

<a href="https://github.com/michal-franc/BlogStuff/commit/0bfd7712708ae01dd3dc5eb74fe87c0cc40e7524">Commit - Test</a>

Based on changes from previous steps, I can just use .Where() clause to filter out the values.

<pre class="lang:c# decode:true">
return values.Where(x => x < 1000).Sum();
</pre>

<a href="https://github.com/michal-franc/BlogStuff/commit/90640c798257cecd6ea6814a85b48f73e914a659">Commit - Implementation</a>

<h3>Step - Support for delimiters with any length</h3>

Delimiters can be of any length with the following format <b>"//;;;\n"</b>. Based on this input delimiter would be ';;;', of course previous requirements are still supported.

<pre class="lang:c# decode:true">[Test]
public void MultiCharDelimeter_Is_Supported()
{
     var calculator = new StringCalculator();
     var value = "//;;;\n1;;;2;;;3;;;4";

     var actual = calculator.Sum(value);

     var expected = 10;

     Assert.That(actual, Is.EqualTo(expected));
}</pre>
<a href="https://github.com/michal-franc/BlogStuff/commit/60695c28ed128c31402622510fd75287d6c268e0">Commit - Test</a> 

There are two options. I can either use brute force customised index based parsing, or I can use Regular expression. I know that if you have a problem and solve it with regexp, you suddenly have two problems :) Still I think that regexp should be fine in here.

<pre class="lang:c# decode:true">
Regex DelimeterRegex = new Regex("//(?<delimiter>.*)\n(?<value>.*)", RegexOptions.Compiled);
</pre>

This regexp matches two groups 'delimiter' and 'value'. I need 'value' to extract the string with all the values.

As an examples, given "//;;;\n1;;;2;;;3;;;4"
delimiter - ;;;
value -1;;;2;;;3;;;4

With this solution I will remove substring based extraction which was not that good.

<a href="https://github.com/michal-franc/BlogStuff/commit/ffe6520929658973a8bec7a4e254f600b7b8da99">Commit - Implementation</a> 

To support delimiter of multiple chars, I changed all of the collections from 'IEnumerable char' to 'IEnumerable string'. You can notice that there is a .Single(), that's because, based on current format and requirement, I expect only single value and delimiter.

I still don't like ref keyword in 'ExtractDelimiters' method, it's an anti pattern. The only place I can think positively about 'ref / out' usability is '.TryParse()' method. To avoid 'ref', 'ExtractDelimiters' function must return more than only single string. I can either use Tuple or create new class that would encapsulate both extracted delimiters and value. To make this simple, I decided to use 'Tuple'.

<a href="https://github.com/michal-franc/BlogStuff/commit/bd05a0d885d4e2cd1622f03200d1dd8ad6677002">Commit - Ref to Tuple</a>

I also don't like this line of code. It just too complicated and unreadable.
<pre class="lang:c# decode:true">
matches.OfType<Match>().Select(m => m.Groups["delimeter"].Value).Single();
</pre>

Much nicer solution would be to hide this logic and extract the method.

<pre class="lang:c# decode:true">
var delim = this.ExtractRegexpGroup(matches, "delimeter");
extractedInput = this.ExtractRegexpGroup(matches, "value");
</pre>

<a href="https://github.com/michal-franc/BlogStuff/commit/f36f9744000af4243b27019e28a52662fe1794e7">Commit - extract regexp matches method</a>

<h3>Step - multiple delimiters</h3>

<pre class="lang:c# decode:true">[Test]
public void Multiple_Delimeters_Test()
{
    var calculator = new StringCalculator();
    var value = "//[*][%]\n1*2%3";

    var actual = calculator.Sum(value);

    var expected = 6;

    Assert.That(actual, Is.EqualTo(expected));
}</pre>

<a href="https://github.com/michal-franc/BlogStuff/commit/5f5b2d5c9d47dcb659ba3e9821af492fa4117fc0">Commit - Test</a>

Previous solution supports only one delimiter, now We can have many delimiters separated by brackets. Current regexp in this scenario treats  "[*][%]" as single delimiter. i just need to add method / regexp that will extract delimeters from this string.

<pre class="lang:c# decode:true">
new Regex("\\[(.?)\\]"))
</pre>

This Regexp will take [&][*] string and extract both  '&' and '*'. 

<a href="https://github.com/michal-franc/BlogStuff/commit/13a3bf60a045d94fdf499aed08cde775eeca58a4">Commit - Implementation</a>
 
It is easy to make a mistake with regexp, I am not sure if all the extractions work fine, that's why i want to explore more test cases with mutliple delimiters, and multi char delimiters. To do this I ll just convert previous Test to TestCases with variables.

<pre class="lang:c# decode:true">[TestCase(";;;")]
[TestCase("x")]
[TestCase("-----")]
[TestCase("123456789")]
[TestCase("              ")]
[TestCase("\r")]
[TestCase("()()()")]
[TestCase("((()))")]
[TestCase("!@#$%^^&*()_+/|`~")]
public void MultiCharDelimeter_Is_Supported(string delimiter)
{
    var calculator = new StringCalculator();
    var value = string.Format("//{0}\n1{0}2{0}3{0}4", delimiter);

    var actual = calculator.SumFromString(value);

    var expected = 10;

    Assert.That(actual, Is.EqualTo(expected));
}</pre>

<a href="https://github.com/michal-franc/BlogStuff/commit/3422fa015188e7e624a599c2b37648c4f66d7225">Commit - Test</a>

Some of the delimiters looks werid, but still all the tests pass, thats a good message.

<pre class="lang:c# decode:true">[TestCase(";;;","   ")]
[TestCase("x"," u")]
[TestCase("-----", "---123")]
[TestCase("123456789", "090()")]
[TestCase("              ", "")]
[TestCase("\r", "12x")]
[TestCase("()()()", "^^&*")]
[TestCase("!@#$%^^&*()_+/|`~", "123456")]
public void Multiple_Delimeters_Test(string delimiter1, string delimeter2)
{
    var calculator = new StringCalculator();
    var value = string.Format("//[{0}][{1}]\n1{0}2{1}3{0}4", delimiter1, delimeter2);

    var actual = calculator.SumFromString(value);

    var expected = 6;

    Assert.That(actual, Is.EqualTo(expected));
}</pre>

<a href="https://github.com/michal-franc/BlogStuff/commit/38f45328dfbd8748c8cdcbf00799597d4b31e21f">Edge cases mutliple chars.</a>

Wow with this change ale the tests are red. There has to be some problem with regexp. The extraction of single delimiters does only work for single char delimiters. I had to do little change. 

<pre class="lang:c# decode:true">new Regex("\\[(.+?)\\]"))</pre>

<a href="https://github.com/michal-franc/BlogStuff/commit/a0169989f14232bf275ae7544eb9707e8ec41904">Fix for edge cases</a>

That would be all for now. In the last post of this serie, I will do a little cleanup with some summary of whole series.

I need some advice from you dear reader:
- how do you feel about using regexp, any other cool solution to do all the extractions ?
- do you think that usage of Tuple is ok here, or should I create a new container class in this scenario ?]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2103</wp:post_id>
		<wp:post_date>2014-05-28 03:29:49</wp:post_date>
		<wp:post_date_gmt>2014-05-28 02:29:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tdd-commit-by-commit-string-calculator-kata-iv</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-standard"><![CDATA[Standard]]></category>
		<category domain="category" nicename="tdd"><![CDATA[TDD]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[TDD]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[79]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[tdd]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[TDD – commit by commit String Calculator Kata IV | Pragmatic Developer]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Fourth part in the commit by commit string calculator tdd kata. Last steps in the kata with solution using regexp and Tuples. Tdd kata from Roy Osherowe.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[2717634700]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>196</wp:comment_id>
			<wp:comment_author><![CDATA[dotnetomaniak.pl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetomaniak.pl/EN-TDD-commit-by-commit-String-Calculator-Kata-IV-Pragmatic-Developer</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.2</wp:comment_author_IP>
			<wp:comment_date>2014-05-28 09:54:59</wp:comment_date>
			<wp:comment_date_gmt>2014-05-28 08:54:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>[EN] TDD – commit by commit String Calculator Kata IV | Pragmatic Developer...</strong>

Dziękujemy za dodanie artykułu - Trackback z dotnetomaniak.pl...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1401267299.2085";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1430952052.17";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1430952052]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>197</wp:comment_id>
			<wp:comment_author><![CDATA[Jakub Jedryszek]]></wp:comment_author>
			<wp:comment_author_email>jakub.jedryszek@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.jj09.net</wp:comment_author_url>
			<wp:comment_author_IP>98.172.126.112</wp:comment_author_IP>
			<wp:comment_date>2014-05-29 03:47:00</wp:comment_date>
			<wp:comment_date_gmt>2014-05-29 02:47:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[One small inconsistency(IMO): 1000 is not above 1000. It is equal to 1000. Thus x &lt; 1000 should be referred as &#039;ignore greater or equal than 1000&#039;.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1409424895]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>198</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>86.13.101.12</wp:comment_author_IP>
			<wp:comment_date>2014-05-30 01:39:00</wp:comment_date>
			<wp:comment_date_gmt>2014-05-30 00:39:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yup nice catch, thanks Jakub.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>197</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1409424895]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1411416778]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>199</wp:comment_id>
			<wp:comment_author><![CDATA[Krzysztof Seroka]]></wp:comment_author>
			<wp:comment_author_email>k.s.seroka@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://chrisseroka.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP>89.66.134.24</wp:comment_author_IP>
			<wp:comment_date>2014-06-08 06:15:00</wp:comment_date>
			<wp:comment_date_gmt>2014-06-08 05:15:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I'll share my thoughts about further refactoring of tests (they may depend on personal dev-taste):
- Move "new StringCalculator()" to "SetUp". I know that big "SetUp" block is a kind of anti-pattern, but I try to reduce it to "this.sut = new Sut();" (if constructor changes, I need to change in one place)
- Do not use "expected" variable (for simple values). Assert syntax is beautiful without other variables.
- Same goes for "input values". Rule of thumb: Less code, better readability. With this we will get three lines of code that relates to AAA without any comment tags.

What do you think?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1424890078]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>200</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>86.13.101.12</wp:comment_author_IP>
			<wp:comment_date>2014-06-09 21:05:00</wp:comment_date>
			<wp:comment_date_gmt>2014-06-09 20:05:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[1st. I like the idea of this.sut = new Sut() it really looks great. However when its simple I tend to leave it simple without Setup method. I only introduce setup when i really need it and I want to configure complex context for scenarios.
2nd. I think that this is just my habit to use expected variable, it is also tightly linked to my actual / expected naming convention. 
3rd. So you mean that you would just use Assert with an execute method on sut and input values ?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>199</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1424890078]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1427380442]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>201</wp:comment_id>
			<wp:comment_author><![CDATA[Krzysztof Seroka]]></wp:comment_author>
			<wp:comment_author_email>k.s.seroka@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://chrisseroka.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP>89.66.134.24</wp:comment_author_IP>
			<wp:comment_date>2014-06-10 04:44:00</wp:comment_date>
			<wp:comment_date_gmt>2014-06-10 03:44:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I thought of something like that (if possible):

[Test]
public void Sum_ignores_number_greater_than_1000()
{
   var result = calculator.SumFromString("1,2000,1000,1003");

   Assert.That(result, Is.EqualTo(1));
}



where "calculator" is initialized in [SetUp]]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>200</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1427380442]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1427939822]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>205</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>86.13.101.12</wp:comment_author_IP>
			<wp:comment_date>2014-06-10 21:52:00</wp:comment_date>
			<wp:comment_date_gmt>2014-06-10 20:52:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[You know this is a personal preference. For me my convention is the most readable :)
However i might change it in the future.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>201</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1427939822]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1429236687]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>761</wp:comment_id>
			<wp:comment_author><![CDATA[TDD / Unit Testing big list of learning resources from basics to advanced topics | Pragmatic Developer]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/unit-testing/tdd-unit-testing-big-list-of-learning-resources-from-basics-to-advanced-topics/</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.17</wp:comment_author_IP>
			<wp:comment_date>2015-05-09 00:42:56</wp:comment_date>
			<wp:comment_date_gmt>2015-05-08 23:42:56</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...]  [...]]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1431128576.7046";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1431202419.1074";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1431202419]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>F# where to start</title>
		<link>http://www.mfranc.com/f/f-where-to-start/</link>
		<pubDate>Tue, 10 Jun 2014 07:00:58 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=2179</guid>
		<description></description>
		<content:encoded><![CDATA[I have started learning F# again, thanks to @isaac_abraham and his great presentation in my company. This time hopefully, I will move past the "WTF", barrier and move to "AHA" moment. I am ready to finally start serious F# learning with couple of milestones like: project euler, tool, web-app, complex project. I will try to document whole process on the blog.

I want to force myself and learn new functional paradigm. Hopefully it will give me a new way to look at problems and solutions for them. To this day I have spent most of the time in OO world, meh, it gets boring, really. I might also get a chance to do something cool with F# for my company. Me and 3 of my coworkers, we are trying to explore together DDD with F# and find a better way to model our code/

To start somewhere, I was given a link to a great site with a list of advices <a href="http://fsharpforfunandprofit.com/learning-fsharp/">http://fsharpforfunandprofit.com/learning-fsharp/</a> Do's and Don'ts section is very helpful. You can consider this as "House rules" constraining you with a form of "force yourself to think differently".  

<h3>Project Eueler 1</h3>
As usual, when I don't know where to start with new language I go to <a href="https://projecteuler.net/">Project Euler site</a>. I am thinking about doing 10 problems just to get a hold on the syntax and features.

<blockquote>If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23. Find the sum of all the multiples of 3 or 5 below 1000.</blockquote>

The first problem it's not that hard. You can do it by a brute force loop. there is also a better solutions that has lower complexity. My solution is just a loop.

<pre class="lang:c# decode:true " >let ismultiplier div x = (x % div) = 0

let numbers = seq { for n in 0 .. 999 do if (ismultiplier 5 n || ismultiplier 3 n) then yield n  }

let euler1 = Seq.sum numbers</pre> 

I like the syntax, it looks really nice.

1st  : I am declaring new function 'ismultiplier'.
2nd : I am creating a sequence with filter in form of if. From my understating sequence is similar concept to a loop over some elements but its being lazy loaded. The data is created on the fly, while code iterates through it.
3rd : I am using Seq method to sum up the yielded values.

This is a simple algorithm, it won't be enough to learn F# properly. That's when some practical project will come in. It's still planned, I have couple of ideas. It has to be something useful and complex enough project so can I learn how to structure code properly and how to use OOP inside F# world.

<h4>Twitter</h4>
<ul>
<a href="https://twitter.com/ScottWlaschin">@ScottWlaschin</a> - his great presentation convinced me even more that F# is the language I WANT to learn.
<a href="https://twitter.com/isaac_abraham">@isaac_abraham</a> - F# MVP, Issac's presentation create first ripple that forced me to consider F# again.
<a href="https://twitter.com/eulerfx">@eulerfx</a></ul>

<h4>Blogs</h4>
<ul>
<a href="http://gorodinski.com/">http://gorodinski.com/</a>
<a href="http://fsharpforfunandprofit.com ">http://fsharpforfunandprofit.com/</a>
<a href="http://cockneycoder.wordpress.com/">http://cockneycoder.wordpress.com/</a></ul>

<h4>Talks</h4>
<ul>
<a href="http://vimeo.com/channels/ndc2014/page:9">Railway Oriented Programming</a> - unfortunately there is no direct link
<a href="https://skillsmatter.com/skillscasts/4971-domain-driven-design-with-scott-wlaschin">Domain Driven Design, F# and Types</a> - Beautifully explained how you can leverage F# to model your domain.
<a href="https://www.youtube.com/watch?v=MHvr71T_LZw">Domain-Driven Design, Event Sourcing and CQRS with F# and EventStore</a>
</ul>

<h4>Last Minute</h4>
@ScottWlaschin created a nice list of all the talks from NDC Oslo 2014 that are touching the functional programming paradigm. Thanks Scott
<a href="https://gist.github.com/swlaschin/269faaf27c405a808064">NDC Fp Track</a>

<h4>Questions</h4>
- Have you tried any functional language before ? What do you think about them ?
- I need some advice's on how to approach this language and paradigm, any tips ?
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2179</wp:post_id>
		<wp:post_date>2014-06-10 08:00:58</wp:post_date>
		<wp:post_date_gmt>2014-06-10 07:00:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>f-where-to-start</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="f"><![CDATA[F#]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[73]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[F#]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[2747915001]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>202</wp:comment_id>
			<wp:comment_author><![CDATA[dotnetomaniak.pl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetomaniak.pl/ENF-where-to-start-Pragmatic-Developer</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.2</wp:comment_author_IP>
			<wp:comment_date>2014-06-10 09:52:31</wp:comment_date>
			<wp:comment_date_gmt>2014-06-10 08:52:31</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>[EN]F# where to start | Pragmatic Developer...</strong>

Dziękujemy za dodanie artykułu - Trackback z dotnetomaniak.pl...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1402390351.9755";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1430952052.0452";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1430952052]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>203</wp:comment_id>
			<wp:comment_author><![CDATA[Michał Łusiak]]></wp:comment_author>
			<wp:comment_author_email>mlusiak@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>94.254.90.21</wp:comment_author_IP>
			<wp:comment_date>2014-06-10 09:58:00</wp:comment_date>
			<wp:comment_date_gmt>2014-06-10 08:58:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Two good places to start, you didn't mention: https://github.com/ChrisMarinos/FSharpKoans and http://www.tryfsharp.org/. Good luck!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1428165938]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>204</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>86.13.101.12</wp:comment_author_IP>
			<wp:comment_date>2014-06-10 21:50:00</wp:comment_date>
			<wp:comment_date_gmt>2014-06-10 20:50:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ahh, right I did F# koans :) Its a good start and fun start too.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>203</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1428165938]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1429232568]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>206</wp:comment_id>
			<wp:comment_author><![CDATA[Robert Pająk]]></wp:comment_author>
			<wp:comment_author_email>pellared@o2.pl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>89.79.41.78</wp:comment_author_IP>
			<wp:comment_date>2014-06-15 22:12:00</wp:comment_date>
			<wp:comment_date_gmt>2014-06-15 21:12:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sacha Barber is now writing his tutorial on F# http://sachabarbs.wordpress.com/ I do not know its quality but I have always liked his articles so probably it is good :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1436907174]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>207</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>86.13.101.12</wp:comment_author_IP>
			<wp:comment_date>2014-06-15 23:45:00</wp:comment_date>
			<wp:comment_date_gmt>2014-06-15 22:45:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Added to learning list. I also got this link http://www.devjoy.com/series/learning-to-think-functionally/ which is nice.

A lot to learn ... Today i started defining types and some simple data flows for simple game ... lots of problems and blockers :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>206</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1436907174]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1436998654]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Get out of your comfort zone - Vim the social connector</title>
		<link>http://www.mfranc.com/uncategorized/get-out-of-your-comfort-zone-vim-the-social-connecto/</link>
		<pubDate>Thu, 19 Jun 2014 07:00:39 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=2269</guid>
		<description></description>
		<content:encoded><![CDATA[I am a .Net developer, mostly. Sure, I am exploring Python, node.js and other technologies, still my work is mostly related to C# and recently I am having fun with F#. I can say that as of now I am tied to one platform and I mostly attending meetups and conferences slightly related to it.

<img class="aligncenter" src="http://imagizer.imageshack.us/scaled/landing/876/l8oiu.jpg" alt="comfort zone" />

Recently I have gone to one of the meetups and I had opportunity to chat with awesome PHP programmers. Boy that was fun. MS technology stack for them is considered as an evil one, with evil solutions and evil approach to opensource. Just like my image of PHP is full of 'script kids' lack of software engineering etc. Of course that image is far from reality.

I was really surprised how .Net developers are perceived :
<ul>
	<li>we don't know framework details because intelisense is doing everything for us</li>
	<li>editor is doing everything for us, we are just drag n dropping controlsa</li>
	<li>MS stack is an evil panda</li>
	<li>we are using TFS because that's a technology from MS</li>
	<li>we are not trying other tools that the MS approved ones</li>
</ul>
As you can see the gap is huge. Now the problem is how to find a connection with someone from the other platform ? There is always a topic about domain,or other technologically independent stuff like DDD, TDD, BDD. But what about other stuff like tools ? Well we have Visual Studio and I have heard that PHPStorm from JetBrains is quite popular. Ahh there is git, yes git is fun and could be a source of endless discussion. What else ... VIM, ha I am using Vim. It is so unusual that a .Net dev is a Vim fanatic that it might be this little cherry on top of the cake. They were really surprised. Even better I used emacs extensively on my university so legendary emacs vs vim discussion started. We shared our thought on vim, emacs tooling, I told them why i prefer Vim than Visual Studio.

What I learned. Hmm, I have to get out of my comfort zone more. One platform approach is a dead end. There are soo many people using different technologies that i might miss them or i wont be able to find a topic to talk to them. I have been also trying to follow rule, "Always say yes!" :) this one is hard to follow.

So whats next ? 
<ul>
  <li>Swift - I would need a mac ... but finally i would have a nice topic to talk with @mihcall</li>
  <li>Rails and Ruby - this would give me a basis to talk to @andrzejkrzywda and @mpraglowski</li>
</ul>

A lot of choices, a lot people. In the end no matter what you choose there will always be someone interesting to talk to. So get up and learn some new technology, move out of your comfort zone.
As a follow up to this topic, watch <a href="https://www.youtube.com/watch?v=FPBVxpl8NMo">Martin Mazur talk from dev day 2012.</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2269</wp:post_id>
		<wp:post_date>2014-06-19 08:00:39</wp:post_date>
		<wp:post_date_gmt>2014-06-19 07:00:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>get-out-of-your-comfort-zone-vim-the-social-connecto</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[Get out of your comfort zone Vim social connector|Pragmatic Programmer]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[2773167752]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>208</wp:comment_id>
			<wp:comment_author><![CDATA[dotnetomaniak.pl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetomaniak.pl/EN-Get-out-of-your-comfort-zone-Vim-social-connectorPragmatic-Programmer</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.2</wp:comment_author_IP>
			<wp:comment_date>2014-06-19 12:03:02</wp:comment_date>
			<wp:comment_date_gmt>2014-06-19 11:03:02</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>[EN] Get out of your comfort zone Vim social connector|Pragmatic Programmer...</strong>

Dziękujemy za dodanie artykułu - Trackback z dotnetomaniak.pl...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1403175782.9605";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1430952051.9828";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1430952052]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>209</wp:comment_id>
			<wp:comment_author><![CDATA[Pawel]]></wp:comment_author>
			<wp:comment_author_email>pawel@klimczyk.pl</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>188.122.3.250</wp:comment_author_IP>
			<wp:comment_date>2014-06-19 12:32:00</wp:comment_date>
			<wp:comment_date_gmt>2014-06-19 11:32:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[And this is what .NET programmer thinks about PHP tools:
https://fbcdn-sphotos-a-a.akamaihd.net/hphotos-ak-xap1/t1.0-9/562568_354569481256431_1269739089_n.jpg]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1443609485]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>210</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>86.13.101.12</wp:comment_author_IP>
			<wp:comment_date>2014-06-21 00:04:00</wp:comment_date>
			<wp:comment_date_gmt>2014-06-20 23:04:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's why we need to explore other platforms :) 


I talked today to one of my coworkers and I learned a lot by exploring RoR or node.js World.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>209</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1443609485]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1446641875]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Game programming with F#, C# and SFML - GameLoop</title>
		<link>http://www.mfranc.com/uncategorized/game-programming-with-f-c-and-sfml-gameloop/</link>
		<pubDate>Tue, 24 Jun 2014 07:00:09 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=2294</guid>
		<description></description>
		<content:encoded><![CDATA[I am a F# apprentice. The best way to learn new language is to do some project. That's why I have started to code one game idea that was following me for some time. 

Core concept: 
<ul>
	<li>sci-fi setting</li>
	<li>roguelike</li>
	<li>inspired by:
		<ul>
			<li>dwarf fortress</li>
			<li>prison architect</li>
			<li>cataclysm dda</li>
		</ul>
	</li>
</ul>

Because I don't care about the graphics but the game-play, the graphic I am going to use will be an ASCII styles tile set. You know symbols, characters, letters and some simple graphic, just like in old MUD games.

For graphic layer, I am going to use SFML and it's .NET wrapper. It's quite good and I know a bit about it. In the past I have been using SDL wrapper which was also fine. At the beginning I am mostly going to focus on 2D tile rendering and some ray casting to calculate field of view. I really like the way it's done in Cataclysm DDA, so I ll try to emulate it.

Apart from coding the game and its logic, the most difficult part will be to use F#. I am a little worried about its stateless world. I have heard about monads and how you can manage state with them, but still its going to be difficult for apprentice like me.

To start with something, I have decided to do my first simple game loop and render window.

 
<pre class="lang:c# decode:true " >[&lt;EntryPoint&gt;]
let main argv = 

    let mainWindow = new RenderWindow(new VideoMode(600ul, 600ul), "EmptySpace")
    mainWindow.SetFramerateLimit(40ul);
    mainWindow.Closed.AddHandler(fun sender args -&gt; (sender :?&gt; RenderWindow).Close())

    let rec mainLoop() = 
        mainWindow.Clear()
        mainWindow.DispatchEvents()
        mainWindow.Display()

        match mainWindow.IsOpen() with
        | true -&gt;  mainLoop() |&gt; ignore
        | false -&gt;  ()
    
    mainLoop()

    0</pre> 

Couple of interesting things in this code.

<h4> ":?>" operator </h4>

If I have some class that inherits the System.Object ( Default behavior in .NET ).

<pre class="lang:c# decode:true " >public class Something : Object {}</pre> 

":?>" downcast - it will cast Object to Something. This operation is performed on run time.

<blockquote>
The ":?>" operator performs a dynamic cast, which means that the success of the cast is determined at run time. A cast that uses the ":?>" operator is not checked at compile time; but at run time, an attempt is made to cast to the specified type.
</blockquote>

":>" upcast - it will cast Something to Object. This operation is performed on compile time.

<blockquote>
The ":>" operator performs a static cast, which means that the success of the cast is determined at compile time. If a cast that uses ":>" compiles successfully, it is a valid cast and has no chance of failure at run time.
</blockquote>

<a href="http://msdn.microsoft.com/pl-pl/library/dd233220.aspx">More about casting in F# world</a>

<h4>Pattern matching ( F# switch )</h4>
 
<pre class="lang:c# decode:true " > 
  match mainWindow.IsOpen() with
     | true -&gt;  mainLoop() |&gt; ignore
     | false -&gt; ()
</pre> 

From my understating it's something like a switch but with more powerful options and possibilities. My example is a simple true, false switch.

() is an empty method just to do nothing and stop recurrence.

|> is a pipe lining operator, concept i know from the unix world, ignore is just information that i want to ignore the value that mainLoop() is returning. 

<a href="http://msdn.microsoft.com/pl-pl/library/dd547125.aspx">More about pattern matching</a>

<h4>Recurrent loop - rec keyword</h4>

The Game Loop has to be infinite. In functional approach you don't use loops, like while(true), instead you have to use recurrence. In C# you can just call function from within the function. In F# you can do the same, however you need to mark function with rec keyword ? Why ? The answer is complex and if you want to know it check this <a href="http://stackoverflow.com/questions/3739628/whats-the-reason-of-marking-a-recursive-function-as-rec-in-f">link</a> and this <a href="http://stackoverflow.com/questions/900585/why-are-functions-in-ocaml-f-not-recursive-by-default">one</a>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2294</wp:post_id>
		<wp:post_date>2014-06-24 08:00:09</wp:post_date>
		<wp:post_date_gmt>2014-06-24 07:00:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>game-programming-with-f-c-and-sfml-gameloop</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[2789796197]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>211</wp:comment_id>
			<wp:comment_author><![CDATA[dotnetomaniak.pl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetomaniak.pl/EN-Game-programming-with-F-C-and-SFML-GameLoop-Pragmatic-Developer</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.2</wp:comment_author_IP>
			<wp:comment_date>2014-06-24 10:11:24</wp:comment_date>
			<wp:comment_date_gmt>2014-06-24 09:11:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>[EN] Game programming with F#, C# and SFML - GameLoop | Pragmatic Developer...</strong>

Dziękujemy za dodanie artykułu - Trackback z dotnetomaniak.pl...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1403601084.933";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1430952051.858";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1430952051]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>212</wp:comment_id>
			<wp:comment_author><![CDATA[Marek Stój]]></wp:comment_author>
			<wp:comment_author_email>marek.stoj@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>217.30.159.22</wp:comment_author_IP>
			<wp:comment_date>2014-06-24 10:38:00</wp:comment_date>
			<wp:comment_date_gmt>2014-06-24 09:38:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Don't you get StackOverflowException when calling mainLoop() recursively an "infinite" number of times? Maybe you get away with this because it's a "tail recursion" - are you aware of this?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1451379959]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>213</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>109.231.194.195</wp:comment_author_IP>
			<wp:comment_date>2014-06-24 12:32:00</wp:comment_date>
			<wp:comment_date_gmt>2014-06-24 11:32:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I get away with it because exactly it's a tail recursion :) I had a initial code that was causing StackOverFlow Exception. In current implementation there is nothing else to execute after 'stop', I am just calling a method and i don't care about its results.



I think compiler, in the background, is changing this code to GOTO statement, so we don't need to change the stack.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>212</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1451379959]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1451456546]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>214</wp:comment_id>
			<wp:comment_author><![CDATA[Marek Stój]]></wp:comment_author>
			<wp:comment_author_email>marek.stoj@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>217.30.159.22</wp:comment_author_IP>
			<wp:comment_date>2014-06-24 12:46:00</wp:comment_date>
			<wp:comment_date_gmt>2014-06-24 11:46:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Risky - you're depending on compiler implementation details ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>213</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1451456546]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1451467643]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>218</wp:comment_id>
			<wp:comment_author><![CDATA[Jürgen Heiling]]></wp:comment_author>
			<wp:comment_author_email>juergen.heiling@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>84.113.249.134</wp:comment_author_IP>
			<wp:comment_date>2014-07-03 14:12:00</wp:comment_date>
			<wp:comment_date_gmt>2014-07-03 13:12:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Actually it's not an implementation detail, it's part of the language specification.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>214</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1451467643]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1466626310]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>219</wp:comment_id>
			<wp:comment_author><![CDATA[Marek Stój]]></wp:comment_author>
			<wp:comment_author_email>marek.stoj@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>89.72.57.81</wp:comment_author_IP>
			<wp:comment_date>2014-07-03 15:26:00</wp:comment_date>
			<wp:comment_date_gmt>2014-07-03 14:26:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[That's interesting but I couldn't find anything about what you're saying in the language spec. There's a discussion about tail calls here: http://stackoverflow.com/a/5915647 Can you point me to the exact place in the spec where what you're saying is stated?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>218</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1466626310]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1466748921]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>220</wp:comment_id>
			<wp:comment_author><![CDATA[Jürgen Heiling]]></wp:comment_author>
			<wp:comment_author_email>juergen.heiling@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>84.113.249.134</wp:comment_author_IP>
			<wp:comment_date>2014-07-03 17:39:00</wp:comment_date>
			<wp:comment_date_gmt>2014-07-03 16:39:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[My apologies, I thought it was part of the language specification, but it seems my memory has failed me... You are right, it is not.
But tail call optimization is implemented in .net (http://blogs.msdn.com/b/fsharpteam/archive/2011/07/08/tail-calls-in-fsharp.aspx) and mono (http://www.mono-project.com/Mono_Project_Roadmap), so that's not really a problem.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>219</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1466748921]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1466943673]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>221</wp:comment_id>
			<wp:comment_author><![CDATA[Jürgen Heiling]]></wp:comment_author>
			<wp:comment_author_email>juergen.heiling@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>84.113.249.134</wp:comment_author_IP>
			<wp:comment_date>2014-07-03 17:42:00</wp:comment_date>
			<wp:comment_date_gmt>2014-07-03 16:42:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Just a minor thing I've just noticed: the "|&gt; ignore" is not needed.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1466948133]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>222</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>86.13.101.12</wp:comment_author_IP>
			<wp:comment_date>2014-07-03 23:15:00</wp:comment_date>
			<wp:comment_date_gmt>2014-07-03 22:15:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[your links are broken :) delete ')' char]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>220</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1466943673]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1467463562]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>223</wp:comment_id>
			<wp:comment_author><![CDATA[Jürgen Heiling]]></wp:comment_author>
			<wp:comment_author_email>juergen.heiling@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>84.113.249.134</wp:comment_author_IP>
			<wp:comment_date>2014-07-04 01:51:00</wp:comment_date>
			<wp:comment_date_gmt>2014-07-04 00:51:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Sorry, fixed it.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>222</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1467463562]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1467645394]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>224</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>62.133.13.247</wp:comment_author_IP>
			<wp:comment_date>2014-07-04 12:34:00</wp:comment_date>
			<wp:comment_date_gmt>2014-07-04 11:34:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I have just checked it and you are right :)
Hmm, I think I left it there from previous code iteration that was throwing errors at me.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>221</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1466948133]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1468114754]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>dotnetconf.pl 2014</title>
		<link>http://www.mfranc.com/uncategorized/dotnetconf-pl-2014/</link>
		<pubDate>Thu, 23 Oct 2014 21:21:11 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=2338</guid>
		<description></description>
		<content:encoded><![CDATA[I feel empowered and motivated, <a href="http://dotnetconf.pl/">dotnetconf.pl</a> and also <a href="http://software-architect.co.uk/">Software Architects</a> conf gave me a huge energy boost. <span style="line-height: 1.5;">Thank you everyone for being with us on </span><a style="line-height: 1.5;" href="http://dotnetconf.pl/">dotnetconf.pl</a><span style="line-height: 1.5;">. For those of you who don’t know, </span><a style="line-height: 1.5;" href="http://dotnetconf.pl/">dotnetconf.pl</a><span style="line-height: 1.5;"> is an online conference, from Polish speakers to Polish developers. </span><a style="line-height: 1.5;" href="https://www.youtube.com/channel/UCs3oPPpRdETQTsxVF-Wvqbg">You can watch presentations here.</a>

Last Saturday we have organized 2nd edition of this event and it looks like there will be another one. We don't know when, I know that ideally, you the viewers, would like it to be sooner than later. As of now the plan is to do them yearly, but we might consider a conference on a 6 month basis plus smaller events per 3 months. It all depends on the demand and the audience. Pawel has also an idea to start audio cast, something like hanselminutes, with speakers discussing various topics from our dev world.
<blockquote><span style="line-height: 1.5;">While, I was writing this post someone else was also thinking about audio cast idea and ... today </span><a style="line-height: 1.5;" href="http://www.maciejaniserowicz.com/2014/10/23/devtalk-01-teraz-cos-z-zupelnie-innej-beczki/">Maciej Aniserowicz</a><span style="line-height: 1.5;"> has started his podcast ( Check it out it's great ). Due to this we might pursue a different idea, maybe something like pair programming on stream, twitch, we might try it on 15th November doing game of life in Haskell / F# for Global Code Retreat. Would there be any interest in something like that ?</span></blockquote>
The conference chat was full of discussions. That’s great, really great and there is this small idea, proposed by one of the attendees, to start a conference a week before a live event like <a href="http://devday.pl/">DevDay</a>. With such a date, all the topics started online, could be followed in real life. Wouldn't that be great ? The soo called “Hallway Track” doesn’t fit to the online format. However if you have any ideas on how to do something like that, then PM me :)

Unfortunately you weren’t able to watch Basia's talk, we had issues with google hangout. We have been testing everything twice and it was ok and the suddenly it stopped being ok. <span style="line-height: 1.5;">Basia’s talk is going to be recorder and sent to all of you, soon be patient :)</span>

Overall conference was great, I hope that you also enjoyed it. Still there are things that we can change / improve.
<ul>
	<li><span style="line-height: 1.5;">backup speakers, ready to step up if there is a problem</span></li>
	<li><span style="line-height: 1.5;">backup option for streaming, that might be hard, any suggestions ?</span></li>
	<li><span style="line-height: 1.5;">missed opportunities to attract bigger audience</span></li>
	<li><span style="line-height: 1.5;">Q/A system, some semi automated script</span></li>
	<li><span style="line-height: 1.5;">implement a way to quickly notify everyone that there are issues</span></li>
	<li><span style="line-height: 1.5;">some script to notify all the channels that new stream is starting</span></li>
	<li><span style="line-height: 1.5;">because of SignalR and static pages we weren’t able to update the agenda</span></li>
	<li><span style="line-height: 1.5;">simple voting system on the site</span></li>
</ul>
We might do more, we are open for suggestions. Feel free to send us a message with anything. Even comment that my thumbs ups and down on camera are childish, is a helpful one :)

Thank you for all the feedback. You are the best :)
Feel free to comment here and discuss some of the things that i just mentioned.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2338</wp:post_id>
		<wp:post_date>2014-10-23 22:21:11</wp:post_date>
		<wp:post_date_gmt>2014-10-23 21:21:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dotnetconf-pl-2014</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3149160320]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>F# and Nancy - beyond Hello World</title>
		<link>http://www.mfranc.com/f/f-and-nancy-beyond-hello-world/</link>
		<pubDate>Mon, 24 Nov 2014 07:00:24 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=2363</guid>
		<description></description>
		<content:encoded><![CDATA[<p lang="pl">I have been trying to find some examples on how to create a web app using F# with Nancy. Most of the tutorials on the web cover simple "Hello World!" app, only the basics. In this post, I want to go beyond "Hello World" and show real life examples.</p>

<h3>F# and Nancy - Where to start ?</h3>
Most basic app "Hello World", is simple.
<pre class="lang:c# decode:true">type App() as this =
    inherit NancyModule()
    do
        this.Get.["/"] &lt;- fun _ -&gt; "Hello World!" :&gt; obj</pre>
<pre class="lang:c# decode:true">[&lt;EntryPoint&gt;]
let main args =

    let nancy = new Nancy.Hosting.Self.NancyHost(new Uri("http://localhost:" + "8100"))
    nancy.Start()
    while true do Console.ReadLine() |&gt; ignore
    0</pre>
Nancy will automatically load up the App class. To those familiar with Nancy on C# it looks almost the same. The only noticeable difference is the lambda function declaration, plus different syntax for inheritance. Also there is this weird smile face ':&gt;' at the end. This is just a up-casting operator. For some reason Get function has to return object. In F# you also use different syntax for list / array indexing. Instead of Get["/"], you need to use Get.["/"]
<h3>GET Examples</h3>
<pre class="lang:c# decode:true">this.Get.["/Fsharp"] &lt;- fun _ -&gt; "I can into F#" :&gt; obj
this.Get.["/Json"] &lt;- fun _ -&gt; this.Response.AsJson([ "Test" ]) :&gt; obj
this.Get.["/Complex"] &lt;- fun _ -&gt; 
     let response = this.Response.AsJson(["This is my Response"])
     response.ContentType &lt;- "application/json"
     response.Headers.Add("Funky-Header", "Funky-Header-Value")
     response :&gt; obj</pre>
<h3>POST</h3>
<pre class="lang:c# decode:true ">this.Post.["/Post/{test}"] &lt;- fun parameters -&gt; 
      let value = (parameters :?&gt; Nancy.DynamicDictionary).["test"]
      let response = this.Response.AsJson([ sprintf "test %O" value ])
      response :&gt; obj</pre>

To extract the parameters I had to cast the input param, which is of obj type, to Nancy.DynamicDictonary. It doesn't look great but there is other way.
 
<pre class="lang:c# decode:true " >this.Post.["/Post/{name}"] &lt;- fun parameters -&gt; 
      let response = this.Response.AsJson([ sprintf "name %O" parameters?name ])
      response :&gt; obj</pre> 

How to achieve syntax like that - parameters?name ?

<pre class="lang:c# decode:true " >let (?) (parameters:obj) param =
    (parameters :?&gt; Nancy.DynamicDictionary).[param]
</pre> 

This part of code is creating new "let-bound operator". It hides the casting logic and makes the code look cleaner.

<h3>Error Codes</h3>
<pre class="lang:c# decode:true " >this.Get.["/500"] &lt;- fun _ -&gt; 500 :&gt; obj
this.Get.["/404"] &lt;- fun _ -&gt; 500 :&gt; obj</pre> 

<h3>Views</h3>
<pre class="lang:c# decode:true " >this.Get.["/View"] &lt;- fun _ -&gt;
    this.View.["View.html"] :&gt; obj
</pre> 

Syntax is simple and looks basically the same as in C#. There is only one little detail. By default Nancy looks for views in /Views folder. Currently in VS F# project there is no way to create folders from within VS. In order to do this I had to manually, create folder, add file and edit *.fsproj file. Hopefully this will be fixed in the future.

<pre class="lang:c# decode:true " >&lt;None Include="Views/View.html"&gt;
  &lt;CopyToOutputDirectory&gt;Always&lt;/CopyToOutputDirectory&gt;
&lt;/None&gt;
</pre> 

<a href="https://web.archive.org/web/20120116085906/http://cultivatingcode.com/2010/02/12/folders-in-f-projects/">More details</a>

<h3>ModelBinding</h3>

In C# syntax, you would normally use the base method Bind<T> to perform the binding. This method is an extension method and in order to have an access to it, I had to include ModelBinding.

<pre class="lang:c# decode:true " >open Nancy.ModelBinding</pre> 

The type to bind
 
<pre class="lang:c# decode:true " >type TestModel = { TestValue1:string }</pre> 

And the code to bind to the model.

<pre class="lang:c# decode:true " >this.Post.["/Model"] &lt;- fun parameters -&gt;
   let model = this.Bind&lt;TestModel&gt;()
   this.Response.AsJson(model) :&gt; obj
</pre> 

Unfortunately, it won't work like that. My "TestModel" type is missing default parameter-less constructor and  Nancy is throwing "No parameter less constructor defined for this object" Exception.

<pre class="lang:c# decode:true " >type TestModel = 
   val TestValue1:string
   new () = {
      TestValue1 = ""
   }</pre> 

There is a constructor, no Exception, but the value is not bound and is always empty. To fix this, I had to go and look through <a href="https://github.com/NancyFx/Nancy/blob/6ceb54daec2dc230ab6fe55b367d3837e262c1db/src/Nancy/ModelBinding/DefaultBinder.cs
">Nancy code</a>. By default Nancy is binding to property. My val declaration is not a property.
 
<pre class="lang:c# decode:true " >type TestModel() =

   let mutable testValue = ""

   member this.Testvalue1
      with get () = testValue
      and set (value) = testValue &lt;- value
</pre> 

Syntax for properties is a little different, but nothing serious here. I need to make my value mutable so I can modify the state.

<h3>The Application OnError pipeline</h3>

To modify the Pipeline I had to add include Nancy.Bootstrapper it has IApplicationStartup interface which can be used to hook into OnError pipeline

<pre class="lang:c# decode:true " >type AppStartup =
    interface IApplicationStartup with 
            member this.Initialize pipelines = 
                pipelines.OnError.AddItemToStartOfPipeline(new Func&lt;NancyContext, exn, Response&gt;(fun ctx _ -&gt; new Response()))
</pre> 

Nancy will automatically pick-up this class. The syntax for interface implementation is different, a lot. There is no += operator when working with Events and I had to use ADD method. With this example I got an exception "unable to resolve type AppStartup". It was a problem of missing parameter less constructor.

<pre class="lang:c# decode:true " >type AppStartup() =
    interface IApplicationStartup with 
            member this.Initialize pipelines = 
                pipelines.OnError.AddItemToStartOfPipeline(new Func&lt;NancyContext, exn, Response&gt;(fun ctx _ -&gt; new Response()))
</pre> 

<h3>The End</h3>

Those examples are not really showing the power of F#. This power lays in domain-business logic, not in simple endpoint declaration. It is also the OOP approach with F# syntax. There are other web frameworks that have more functional approach. You can check <a href="https://github.com/simonhdickson/Fancy">Fancy</a> which is a nice wrapper around Nancy. In a future, I might do a comparison with some purely functional web framework.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2363</wp:post_id>
		<wp:post_date>2014-11-24 08:00:24</wp:post_date>
		<wp:post_date_gmt>2014-11-24 07:00:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>f-and-nancy-beyond-hello-world</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="f"><![CDATA[F#]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[68]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[f# nancy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Most of the tutorials on the web cover simple "Hello World!" app. In this post, I want to go beyond "Hello World" and show real life examples]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3254785935]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>418</wp:comment_id>
			<wp:comment_author><![CDATA[dotnetomaniak.pl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetomaniak.pl/EN-F-and-Nancy-beyond-Hello-World-Pragmatic-Developer</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.2</wp:comment_author_IP>
			<wp:comment_date>2014-11-24 11:26:28</wp:comment_date>
			<wp:comment_date_gmt>2014-11-24 10:26:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>[EN] F# and Nancy - beyond Hello World | Pragmatic Developer...</strong>

Dziękujemy za dodanie artykułu - Trackback z dotnetomaniak.pl...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1416824788.6124";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1430952051.7956";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1430952051]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>546</wp:comment_id>
			<wp:comment_author><![CDATA[liammclennan]]></wp:comment_author>
			<wp:comment_author_email>liam.mclennan@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.170.96.116</wp:comment_author_IP>
			<wp:comment_date>2015-01-16 01:21:00</wp:comment_date>
			<wp:comment_date_gmt>2015-01-16 00:21:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Instead of creating the TestModel class you could have used the [] attribute on a record. 

[]
type TestModel = {Testvalue1:string}]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1794957475]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>548</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>82.19.201.169</wp:comment_author_IP>
			<wp:comment_date>2015-01-17 14:36:00</wp:comment_date>
			<wp:comment_date_gmt>2015-01-17 13:36:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Cool! Will test it out and add it to blog post.
Thanks]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>546</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1794957475]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1798241983]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>From 2014 into 2015 - tech plans</title>
		<link>http://www.mfranc.com/uncategorized/from-2014-into-2015-review-and-plans/</link>
		<pubDate>Sun, 04 Jan 2015 22:39:05 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=2385</guid>
		<description></description>
		<content:encoded><![CDATA[A lot has happened in the last year 2014.
<ul>
	<li><span style="line-height: 1.5;">I moved to London which was not that easy task. Moving abroad proofed more difficult than, I thought and those estate agents ... I don't want to start.</span></li>
	<li><span style="line-height: 1.5;">Started working for an awesome company <a href="https://home.justgiving.com/">JustGiving</a>. I am glad and happy that, I can work with so many awesome people on projects that have an impact. It is really good to work for Tech4Good company.</span></li>
	<li><span style="line-height: 1.5;">Finally, I invested heavily into learning about functional programming.</span></li>
	<li><span style="line-height: 1.5;">Spent a lot of time organizing my TDD knowledge, couple of books + one nice workshop with Roy Osherove.</span></li>
	<li><span style="line-height: 1.5;">I did some talks in <a href="https://www.youtube.com/watch?v=95fhFUuQ9u0">Polish</a> / English dev groups.</span></li>
	<li>Organized <a href="http://dotnetconf.pl/">dotnetconf.pl</a> with Pawel and Jakub.</li>
</ul>
What I want to do in 2015 ?
<ul>
	<li><span style="line-height: 1.5;">Again, functional programming all the way. This is the 'thing', I want to go for now and see what happens. It was really refreshing to learn about it and use it in some practical projects.</span></li>
	<li><span style="line-height: 1.5;">DDD, I need to gain more knowledge about it. It was always there, I have read <a href="http://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215">blue book by EE</a> but I think, I wasn't mature enough to really grasp it. I have heard good things about <a href="http://www.amazon.com/Implementing-Domain-Driven-Design-Vaughn-Vernon/dp/0321834577">Implementing DDD by VV</a>, probably will start with this book.</span></li>
	<li><span style="line-height: 1.5;">Speaking activities, I need to do more speaking to learn from my mistakes and get better.</span></li>
	<li><span style="line-height: 1.5;">Artificial Intelligence, AI will be a great source of problems complex enough so that, I can use functional programming with it. I always wanted to start learning about AI, it is something that really interests me, apart from history and sci-fi. Will see what happens, I have already started last year by refreshing my knowledge from uni and gaining little 'foothold' in this broad and complex subject. You will see some posts about AI for sure.</span></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2385</wp:post_id>
		<wp:post_date>2015-01-04 23:39:05</wp:post_date>
		<wp:post_date_gmt>2015-01-04 22:39:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>from-2014-into-2015-review-and-plans</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3390237891]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Fuel your personal growth with feedback</title>
		<link>http://www.mfranc.com/uncategorized/fuel-your-personal-growth-with-feedback/</link>
		<pubDate>Sun, 01 Feb 2015 15:52:29 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=2396</guid>
		<description></description>
		<content:encoded><![CDATA[TL;DR; Feedback is crucial for your career. Be proactive, get out of your closet and ask for it!

Last week, I have read Michal Sliwon post <a href="http://blog.mihcall.com/2014/12/21/A-recipe-for-a-happy-software-development-team">"A recipe for a happy software development team"</a>. It's a great read with some eye opening thoughts. I encourage you to read it.

One of the things that stood out for me, is how Michal and his team use feedback. As chance would have it, 2 weeks ago I asked for a feedback in my Company. It has been a year, since I joined the team. Surely, that’s enough time to tell me if I am a good team player and problem solver. In a year, you can make just enough mistakes, and good stuff too, to show who you are.

Before I started in IT, all the feedback I got were 'grades' at University / School. Grades are fine if you need a system for fast evaluation of multiple people but it always felt naive and ‘not enough’. How can you evaluate someone based on simple predefined grade system ? How can you help someone 'find the way' using this system ? I always imagined that on Uni, I would have some 1-on-1 meetings with teachers or at-least someone will try to mentor me. Nope, education system is like a factory. You get in, you get out and in the end you enter the dangerous world of grown ups, not knowing the importance of giving and receiving ‘Feedback’. Some people are even expecting similar grade systems in workplace. You know do this and that and you will be there ? There are some companies that are very transparent in their 'promotion' system ( <a href="https://open.bufferapp.com/introducing-open-salaries-at-buffer-including-our-transparent-formula-and-all-individual-salaries/">Buffer</a>, <a href="http://www.joelonsoftware.com/articles/fog0000000038.html">Fog Creek Software</a>  ). That's just compensation systems, even with it there is still place for proper feedback process. Btw, I am all into transparent workplaces, this is the way to go. Lack of feedback greatly lowers your chances and negatively affects your growth. By growth, I don’t only mean career related things but also your growth as a human being.

In my first company, I was quite keen to receive my first feedback. Being a Junior Dev felt like a little kid in a maze, not knowing really what is happening around you. Feedback was important to me, I was waiting for it. Now, imagine my surprise when I got no feedback at all. And so you work without any guidance, trying to figure out on your own what kind of ‘team-player’ you are. There was one message, company did not fire me so, "hey they have to be happy right" ? Wrong! Approach like that is similar to grading system, it’s not enough. What kind of lesson you can get from just knowing that you are good enough to stay at your company ? Probably none. Back then I was just a ‘kid’, having proactive attitude was something completely alien to me. I was hoping that my first manager, would be my guide in this dangerous world of all these grown-ups and their politics. Sadly it did not happen. I felt betrayed and started managing career on my own. Yeah you can do that to a certain degree, but it's not the same. You can't evaluate yourself. Your point of view is flawed. You know ego, ego, ego. There is also impostor syndrome which causes different anomalies and can affect the way you are thinking about the world. So in short you need feedback from someone else. Now, I was lucky, I found mentors in the community, in form of books, blogs, I have talked to people on twitter, facebook, meetups etc. but it would be a lot simpler if I would ask for feedback on my own. What’s the lesson here ? Being pro active is really crucial, no one will manage your career for you. Get out of your closet and ask for Feedback!

<h3>Why</h3>

So much talking about feedback and there was no why. Here it is.

1. IT is changing really fast, you can't keep up with all these technologies. Ideally me and you, we would have a lot of time to research and explore various technologies, but yep time is a limited resource and we can't do everything at once. But hey two heads are better than one. Having someone who could give you some feedback about various techs is really beneficial.

2. Technical expertise. You can't be an expert in all of the technologies. Having someone, somewhere with experience in certain technology can save your time and money ( and hundreds of 'F' words for sure ).

3. To consider yourself as a mature person, you need to 'nurture' your personality. Yes, It is a hard, long process, you might not even see the changes. That's where you need external feedback. Ideally someone close to you. Friend ? Team-mate ? Friend can influence you personal life while team-mate can pinpoint career related stuff. For instance if you are dreaming about becoming senior / tech lead or architect, ideally you would find someone in this position. Hist tips and suggestion will speed up your growth into that position. 

4. Life is full of dangers and those dark caves that you don't want to go in. Having a mentor and guide that could give you some feedback is really beneficial. Imagine how much time and effort you would save if someone would told you that some route in career is a waste of time.

5. Getting feedback is a great way to learn how to give feedback. This can lead to awesome opportunities to meet intelligent people. If you are a person who is pro active in giving feedback, there are people that will greatly appreciate that. In the end you can gain contacts, friends, new opportunities. We are a social creatures and building your personal network is one of the most important things in your career.

<del datetime="2015-02-02T21:57:21+00:00">In next post, how and where to get feedback ?
</del>
Little fix. In next post, I will write about how to get feedback and where to look for it.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2396</wp:post_id>
		<wp:post_date>2015-02-01 16:52:29</wp:post_date>
		<wp:post_date_gmt>2015-02-01 15:52:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>fuel-your-personal-growth-with-feedback</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[85]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[feedback]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[If you want to become super Software Developer, you need Feedback. Feedback is crucial for your career. Be proactive, get out of your closet and ask for it!]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3475519129]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>572</wp:comment_id>
			<wp:comment_author><![CDATA[dotnetomaniak.pl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetomaniak.pl/Fuel-your-personal-growth-with-feedback-Pragmatic-Developer</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.2</wp:comment_author_IP>
			<wp:comment_date>2015-02-01 16:53:23</wp:comment_date>
			<wp:comment_date_gmt>2015-02-01 15:53:23</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Fuel your personal growth with feedback | Pragmatic Developer...</strong>

Dziękujemy za dodanie artykułu - Trackback z dotnetomaniak.pl...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:14:"1422806003.151";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1430952051.7332";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1430952051]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>573</wp:comment_id>
			<wp:comment_author><![CDATA[Michał Śliwoń]]></wp:comment_author>
			<wp:comment_author_email>m.sliwon@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>31.183.117.13</wp:comment_author_IP>
			<wp:comment_date>2015-02-02 22:39:00</wp:comment_date>
			<wp:comment_date_gmt>2015-02-02 21:39:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Glad you found feedback part of my post worth commenting on your blog! I love idea of people exchanging their opinions in a longer form as here. Thanks for your view.

Being proactive in getting feedback is a great advice you're giving in your post.

Are you asking at the end how and where to get feedback or you're announcing next post?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1831267754]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>574</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>82.19.201.169</wp:comment_author_IP>
			<wp:comment_date>2015-02-02 22:56:00</wp:comment_date>
			<wp:comment_date_gmt>2015-02-02 21:56:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Announcing next post, this topic still has some unanswered questions.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>573</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1831267754]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1831321704]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Docker here docker there docker everywhere - Getting started with docker in .NET with F#</title>
		<link>http://www.mfranc.com/f/docker-here-docker-there-docker-everywhere-getting-started-with-docker-in-net-and-f/</link>
		<pubDate>Sat, 07 Feb 2015 08:00:58 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=2435</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="line-height: 1.5;">If you are in IT world, you surely heard or read about docker. There was / is a huge hype about this technology. It looks like this one might actually survive the initial 'It's awesome phase'. I was looking for some info about docker. It was confusing to get to know what docker really is. Too much marketing buzz words everywhere. In this post I will sum up all my notes about how to start with docker in .NET and F#. It will be like learning journey that might end as a simple tutorial on where to start.</span>
<h3>Docker ?<span style="font-size: 1.5em; font-weight: 300; line-height: 1.5;"> </span></h3>
My first encounter with docker was through simple <a href="https://www.docker.com/tryit ">tutorial </a>. It's a online interactive shell emulation that lets you execute some of the commands and get the basics of docker. Sadly, after finishing it you are left out with more questions than answers.

You can start by reading <a href="https://www.docker.com/whatisdocker/">official site docs</a>. The most important thing to note is that docker is a kind of a runtime that enables you to create images that you can run on top of it.<span style="line-height: 1.5;">This concept is just like Virtual Machines, there are however differences. Docker is not creating full complete OS instance, instead it is creating lightweight containers that do share the kernel but are still isolated and separated from each other </span><a style="line-height: 1.5;" href="http://stackoverflow.com/questions/16047306/how-is-docker-io-different-from-a-normal-virtual-machine">more</a><span style="line-height: 1.5;">. This process is more efficient both in time and memory space. It is easier and faster to create smaller containers instead of full VM's. There are however some cons, you won't get full isolation but who really needs that ? Other problem is ... Windows is currently not supporting those small containers, we can only run Unix beacuse docker is using '<a href="https://linuxcontainers.org/">Linux Containers</a>'. You can still run docker on Windows, but you can't create windows images. Microsoft promised to provide this support in new Win version.</span>
<h3>Running Docker on Windows</h3>
To start using docker on windows go to - <a href="https://docs.docker.com/installation/windows">https://docs.docker.com/installation/windows/</a>. Boot2Docker is all you need to get started. This tool will install VirtualBox, configure small Unix VM that you will use docker from and there is also a nice utility tool that will connect you to your virtual machine.

Boot2Docker is a little unstable, while testing I encountered one issue with never ending docker loading. It looks like there are some with issues - https://forums.docker.com/t/boot2docker-hangs-then-crashes/401 . I had to reinstall Boot2Docker multiple times to get it working.
<h3>F# + docker</h3>
I want to create my first simple image that I will be able to use and write some F# code, compile and run it.There are existing images with F# that you can just download and start using, but in order to learn I want to create my own image. In order to do this I will define a docker file with set of instructions that define how to construct an image. <span style="line-height: 1.5;">Those instructions are stored in </span><a style="line-height: 1.5;" href="https://docs.docker.com/reference/builder/">DockerFile</a><span style="line-height: 1.5;"> without extensions or dots. Thankfully Boot2Docker does have vi on board so I can use it to create this file.</span>

<strong>1. touch DockerFile - </strong>will create me a file

First instruction would be to get me a Unix distro that I will run everything on top off.
<pre class="lang:c# decode:true">DockerFile
FROM debian</pre>
<strong>2. To build image</strong>
<pre class="lang:c# decode:true">sudo docker build .</pre>
Yey it works, behind the scenes it gets the debian DockerFile and goes from instruction to instruction creating a debian runtime. I could possibly write my own 'debian' image, but that would involve me learning about how to build Unix distro. Instead of that I can just point to external image and build on top of it. That is one of the beautiful things about docker. You can mix / match different images and build more complex ones using the basic ones.

<strong>3. In order to compile F# app i will need mono and fsharp compiler</strong>
<pre class="lang:c# decode:true">DockerFile
FROM debian
RUN apt-get -y -q install mono-complete
RUN apt-get -y -q install fsharp</pre>
-y - "Always Yes" so if there is any prompt in 'apt-get' installer just say yes
-q - Quiet - makes the log less verbose

<strong>4. Building image</strong>

I got some errors from apt-get missing packages and the logs says to add - 'apt-get update'. This is supposed to update the 'apt-get' list of packages.
<pre class="lang:c# decode:true">DockerFile
FROM debian
RUN apt-get update
RUN apt-get -y -q mono-complete
RUN apt-get -y -q fsharp</pre>
'sudo docker build' - and couple minutes later you should have a nice image with debian + mono + fsharp.

<strong>5. Switching to more specialized image </strong>

Sadly in my case I got lot of errors while downloading 'mono-complete'. Instead of building mono on my own, I have decided to change the base image and use some Unix distro with mono on board. Running 'docker search mono'. Gave me a list of all the potential images, I decided to use 'mono'.
<pre class="lang:c# decode:true">DockerFile
FROM mono
RUN apt-get update
RUN apt-get -y -q install fsharp
RUN apt-get -y -q install vim</pre>
Notice that I installing vim, I need some basic text editor to create first F# hello world app.

<strong>6. What now ? - <strong>Starting container</strong></strong>
I have base image, there is no container yet. What is a container you may ask ? <a href="http://stackoverflow.com/questions/23735149/docker-image-vs-container">Container is a running instance of image</a>. <span style="line-height: 1.5;">To start interacting with container, you need to start some app on it. Most basic one is interactive shell, that will also enable me to work on top of container</span>
<pre class="lang:c# decode:true crayon-selected">sudo docker run -i -t &lt;id_of_built_image&gt; /bin/bash</pre>
<strong>7. Testing out F#</strong>

Lets see if fsharp is here fsharpi should start F# interactive.
<pre class="lang:c# decode:true">fsharpi</pre>
Yey, it's here. To exit just type quit#;;

<strong>8</strong><span style="line-height: 1.5;"><strong>.  Creating folder + hello world source file</strong></span>

<span style="line-height: 1.5;"><strong></strong> I need folder and hello.fsx file</span>
<pre class="lang:c# decode:true">mkdir fsharp-hello
touch hello.fsx</pre>
<strong>9. Hello World App</strong>
<pre class="lang:c# decode:true">open System

[&lt;EntryPoint&gt;]
let main argv =
   printfn "Hello World"
   0</pre>
<strong>10. Compiling app</strong>
<pre>fsharpc hello.fsx</pre>
<strong>11. Running Hello World App</strong>
<pre>mono hello.exe</pre>
Uff, done. That wasn't that hard. Now, you might ask so what ? You just compiled Hello World app ... I can do this on my local machine, yep but this <span style="line-height: 1.5;">brief tutorial is just a starting point, I have started exploring docker, because, I want to play with akka.net and F#. In next posts I will post more things about how to use docker to create multiple akka actors and how to write some simple distributed app. That will be fun, cause it is a new world for me. Docker is more complicated than that. It is quite </span>sophisticated<span style="line-height: 1.5;"> and you can create complex images with many </span>dependencies<span style="line-height: 1.5;">. </span>

&nbsp;

edit:
<a href="https://www.vagrantup.com/blog/feature-preview-vagrant-1-6-docker-dev-environments.html">You can use vagrant with docker</a>
<a href="https://devopsu.com/blog/docker-misconceptions/">Docker Misconceptions</a>
<a style="line-height: 1.5;" href="http://pawel.sawicz.eu/">Pawel Sawicz</a><span style="line-height: 1.5;"> just send me a nice link with </span><a style="line-height: 1.5;" href="http://iops.io/blog/docker-hype/">some anty-hype opinion about docker</a>
Another nice link <a href="http://phusion.github.io/baseimage-docker/">with some docker problems + a solution </a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2435</wp:post_id>
		<wp:post_date>2015-02-07 09:00:58</wp:post_date>
		<wp:post_date_gmt>2015-02-07 08:00:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>docker-here-docker-there-docker-everywhere-getting-started-with-docker-in-net-and-f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="devops"><![CDATA[devops]]></category>
		<category domain="category" nicename="f"><![CDATA[F#]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[88]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[docker]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[Getting started with docker in .NET with F# | Pragmatic Programmer]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Docker here docker there docker everywhere - Getting started with docker in .NET and F# If you are in IT world, you surely heard or read about docker.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3494207528]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>579</wp:comment_id>
			<wp:comment_author><![CDATA[dotnetomaniak.pl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetomaniak.pl/EN-Getting-started-with-docker-in-NET-with-F-Pragmatic-Programmer</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.2</wp:comment_author_IP>
			<wp:comment_date>2015-02-07 22:50:39</wp:comment_date>
			<wp:comment_date_gmt>2015-02-07 21:50:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>[EN] Getting started with docker in .NET with F# | Pragmatic Programmer...</strong>

Dziękujemy za dodanie artykułu - Trackback z dotnetomaniak.pl...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1423345839.2285";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1430952051.6708";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1430952051]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>620</wp:comment_id>
			<wp:comment_author><![CDATA[Alan Kucheck]]></wp:comment_author>
			<wp:comment_author_email>akucheck@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>98.164.195.38</wp:comment_author_IP>
			<wp:comment_date>2015-04-11 17:15:00</wp:comment_date>
			<wp:comment_date_gmt>2015-04-11 16:15:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[thanks for the post! am i the only one having difficulty seeing your snippets? http://www.screencast.com/t/kWbf32wV]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1959113572]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>623</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>82.19.201.169</wp:comment_author_IP>
			<wp:comment_date>2015-04-25 12:36:00</wp:comment_date>
			<wp:comment_date_gmt>2015-04-25 11:36:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Wow, yeah something happened to the crayon addon for wordpress. I just found out the problem after 2 hrs wasted on trying to write a new blog post with code snippets. Thanks to you comment, I realized that the plugin is broken :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>620</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1959113572]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1986615261]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Boost your dev productivity with cmder + ConEmu</title>
		<link>http://www.mfranc.com/uncategorized/boost-your-dev-productivity-with-cmder-conemu/</link>
		<pubDate>Mon, 09 Mar 2015 07:00:58 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=2465</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>Unix world and awesome tmux</h3>
In unix world there is a nice 'tool' <a href="http://tmux.sourceforge.net/">'tmux'</a> - terminal multiplexer.
<p style="text-align: center;"><img class="aligncenter" src="http://www.mfranc.com/wp-content/uploads/2015/02/tmux3.png" alt="" width="463" height="287" /></p>
With 'Terminal Multiplexer', you can nicely split up screen and have multiple terminals visible in front of your eyes. While working with python, on one of the screens I had vim running, then there was a screen for interactive Python plus small terminal to issue git commands. I could easily jump between 'screens' and also have different work spaces hidden behind the tabs. This setup can be then stored in the file and loaded up on demand. It provides a similar functionality to *.sln and *.csproj files in Visual Studio, but without big IDE that tends to crash and have a painful start up speed.

<span style="line-height: 1.5;">It's a pretty neat tool to work with. The user experience is something you need to get used to, but if you are spending some time in command line world, the learning curve won't be that big.</span>
<h3>Windows world with cmder / ConEmu</h3>
In windows world, a single window with cmd.exe / msysgit running is mostly all you need. There is a powerful Visual Studio ( with <a href="https://www.visualstudio.com/en-us/products/visual-studio-community-vs.aspx">Community</a> edition we don't even have to worry about complex MS licensing ). Using VS and it's extension you can just use GUI like interface to do many different tasks. I was surprised that some of my colleagues, for git management, do use either VS extension or <a href="http://www.sourcetreeapp.com/">SourceTree</a> (recommended). I am using mostly cmd line + git gui.

At <a href="https://home.justgiving.com/">JustGiving</a> we are using <a href="https://www.chef.io/chef/">chef</a> to maintain our infrastructure code, I also need to modify <a href="https://www.varnish-cache.org/">varnish</a> files from time to time. I could do all of that in Notepad++ or even Visual Studio, but in my drive to become 'friends' with cmd line i really got used to the 'gui-less' world. I don't want to say that this approach is a must have for productive work, because it would be a lie. Gui interfaces are fine and great, it is just a matter of preference.

Tmux on Unix made a great impression on me and I wanted similar experience in the MS world. First stop, running tmux on Windows. It is doable, <a href="https://www.cygwin.com/">cygwin</a> environment gives you that, but colleagues at work showed me a better tool - <a href="http://bliker.github.io/cmder/">cmder</a>. Cmder is an extension for <a href="http://sourceforge.net/projects/conemu/">ConEmu</a> which is a console emulator. After some configuration it looks like this. <span style="line-height: 1.5;">Pretty neat eh ?</span>

&nbsp;
<p style="text-align: center;"><img class="aligncenter" src="http://www.mfranc.com/wp-content/uploads/2015/02/cmder.jpg" alt="" width="691" height="389" /></p>
My current config has 2 tabs.
<ul>
	<li><span style="line-height: 1.5;">1st with </span><span style="line-height: 1.5;">vim instance running, to edit notes stored on dropbox  </span></li>
	<li><span style="line-height: 1.5;">2nd with </span><span style="line-height: 1.5;">vim for editing files and coding + 2 msysgit instances and 1 cmd line running</span></li>
</ul>
<span style="line-height: 1.5;">This setup gives me a nice environment for editing files not related to Visual Studio and .NET. Another neat functionality are </span>customized<span style="line-height: 1.5;"> Tasks. I am using those to store different project workspaces.  One task equals one workspace. Thanks to that I can </span>easily<span style="line-height: 1.5;"> start another 'project' and initialize it by opening specific folders and specific files in Vim. It is a lot faster than doing everything manually.</span>

To get this setup:
<ul>
	<li><span style="line-height: 1.5;">Settings -&gt; Startup -&gt; Tasks</span></li>
	<li><span style="line-height: 1.5;">create new predefined task with + sign</span></li>
	<li><span style="line-height: 1.5;">And add this code</span></li>
</ul>
<pre class="nums:true lang:c# decode:true">-new_console:d:C:\Users\mfranc\Dropbox "%ProgramFiles(x86)%\Vim\vim74\vim.exe" /k 
-new_console:d:D:\ "%ProgramFiles(x86)%\Vim\vim74\vim.exe" /k -cur_console:n
-cur_console:d:D:\ "%ProgramFiles(x86)%\Git\bin\sh.exe" --login -i -cur_console:n:sT25V
-cur_console:d:D:\ "%ProgramFiles(x86)%\Git\bin\sh.exe" --login -i -cur_console:n:sT66H
cmd.exe -new_console:d:D:\ -i -cur_console:n:sT50H</pre>
What does those commands do ?

1. Creates new screen and opens Vim in my Dropbox folder context
2. Creates new screen with Vim pointing to D:\
3. Initializes shell in new window and splits current screen into 75%/25% Horizontaly
<p style="text-align: center;"><img class="aligncenter" src="http://www.mfranc.com/wp-content/uploads/2015/03/75_25.jpg" alt="" width="300" height="225" /></p>
4. Initializes shell in new window and splits up the existing window into 33.3%/66.6% Vertically
<p style="text-align: center;"><img class="aligncenter" src="http://www.mfranc.com/wp-content/uploads/2015/03/75_25_66.jpg" alt="" width="300" height="225" /></p>
5. Initializes shell in new window and splits up the existing window into 50%/50% Vertically

<img class="aligncenter" style="margin-top: 30.3551120758057px; margin-bottom: 30.3551120758057px; line-height: 21.8181819915772px;" src="http://www.mfranc.com/wp-content/uploads/2015/03/75_25_66_50.jpg" alt="" width="300" height="225" />

&nbsp;

I have barely scratched the surface of the ConEmu and cmder awesomeness. Its functionality is more powerful than just split screen functionality.
<h3>EDIT:</h3>
<a href="http://jj09.net/">Jakub Jedryszek</a> asked a couple of good questions:

<strong>How to install cmder as an extension to ConEmu ?</strong>

It is simple. Standalone version of cmder already contains ConEmu. Installation is simple, download, unpack run -&gt; <a href="http://bliker.github.io/cmder/">http://bliker.github.io/cmder/</a>

<strong>How to configure vim with plugins on windows and which version to use ?</strong>

You can install <a href="http://www.vim.org/download.php#pc">GVim</a> which is vim with Gui-like interface for Windows. One of the plugins in the screen is <a href="https://github.com/scrooloose/nerdtree">NerdTree</a>. To install it you just need to copy paste this file <a href="https://github.com/scrooloose/nerdtree/tree/master/plugin">NERD_tree.vim</a> to C:\Program Files (x86)\Vim\vimfiles\plugin. If you have multiple plugins then pathogen.vim is also recommended. 

For starters with vim, it is better to start with <a href="http://www.openvim.com/">vim-tutorial</a> then move to vim as a Notepad replacement. Another step is <a href="https://visualstudiogallery.msdn.microsoft.com/59ca71b3-a4a3-46ca-8fe1-0e90e3f79329">VsVim</a>. It is really a great, stable extension for Visual Studio that plays nicely with R#. I have been using VsVim for past 3 years and it was always great. I am also using <a href="https://chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb">Vimium</a> which adds vim like feel to Chrome.

<strong>Are you using vim to amend / create commits description in git ?</strong>
If you have msysgit installed and you use cmd line then by default you will use vim, and yes I am using it 85% of the time, around 15% is done with git gui and rarely tortoise-git. Tortoise is mostly handy for git history checkup or blame, but lately it has been replaced by github :)

<h3>EDIT 2:</h3>

It is recommended by <a href="https://github.com/Maximus5/ConEmu">Maximus5</a> to update ConEmu to new version. Current cmder contains ConEmu version 140707(preview) while the newest ConEmu is 150309.
List of <a href="https://code.google.com/p/conemu-maximus5/wiki/Whats_New">changes is massive.</a>. To update ConEmu, get the new package from <a href="https://code.google.com/p/conemu-maximus5">https://code.google.com/p/conemu-maximus5/</a> and copy its content to 'your cmder installation'/vendor/conemu-maximus5 folder.


More Links:
<ul>
	<li>http://www.hanselman.com/blog/ConEmuTheWindowsTerminalConsolePromptWeveBeenWaitingFor.aspx</li>
	<li><a style="line-height: 1.5;" href="https://code.google.com/p/conemu-maximus5/wiki/TableOfContents?tm=6">ConEmu</a> docs</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2465</wp:post_id>
		<wp:post_date>2015-03-09 08:00:58</wp:post_date>
		<wp:post_date_gmt>2015-03-09 07:00:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>boost-your-dev-productivity-with-cmder-conemu</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-standard"><![CDATA[Standard]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[65]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[productivity]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[Boost your dev productivity with ConEmu, cmder | Pragmatic Developer]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3576415344]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>601</wp:comment_id>
			<wp:comment_author><![CDATA[dotnetomaniak.pl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetomaniak.pl/EN-Boost-your-dev-productivity-with-ConEmu-cmder-Pragmatic-Developer</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.2</wp:comment_author_IP>
			<wp:comment_date>2015-03-09 22:50:39</wp:comment_date>
			<wp:comment_date_gmt>2015-03-09 21:50:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>[EN[ Boost your dev productivity with ConEmu, cmder | Pragmatic Developer...</strong>

Dziękujemy za dodanie artykułu - Trackback z dotnetomaniak.pl...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1425937839.8582";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1430952051.5616";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1430952051]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>602</wp:comment_id>
			<wp:comment_author><![CDATA[Maximus]]></wp:comment_author>
			<wp:comment_author_email>ConEmu.Maximus5@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>109.188.126.17</wp:comment_author_IP>
			<wp:comment_date>2015-03-10 13:41:00</wp:comment_date>
			<wp:comment_date_gmt>2015-03-10 12:41:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[After installing with cmder first thing you need to do - update ConEmu to latest preview or alpha build.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1898829545]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>603</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>82.19.201.169</wp:comment_author_IP>
			<wp:comment_date>2015-03-10 20:54:00</wp:comment_date>
			<wp:comment_date_gmt>2015-03-10 19:54:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I haven't done that. My current version is 140... . I can see on SourceForge that there is 1503.. available. Any serious changes in new preview ?

Wow actually there are a lot of changes.
https://code.google.com/p/conemu-maximus5/wiki/Whats_New]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>602</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1898829545]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1899657356]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Akka.NET simple example with Github Api</title>
		<link>http://www.mfranc.com/uncategorized/akka-net-simple-example-with-github-api/</link>
		<pubDate>Mon, 27 Apr 2015 08:00:06 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=2540</guid>
		<description></description>
		<content:encoded><![CDATA[In this post I want to a simple introduction to Akka.NET using an example app based on Github api.

I have been diving into Akka .NET lately. My first encounter with this technology was on <a href="https://vaughnvernon.co/">Vaughn Vernon</a> workshop in Krakow. The main event had couple of side presentation and one of them was about <a href="http://akka.io/">Akka project in Java world</a>. It was a magic to me. Couple years later, I accidentally found ( probably on twitter ) <a href="http://bartoszsypytkowski.com/blog/2014/07/09/fsharp-akka-map-reduce/ ">Bartosz Sypytkowski</a> blog and decided that now is the time to learn something about it.
<blockquote><a href="http://akka.io/">Akka is a toolkit and runtime for building highly concurrent, distributed, and resilient message-driven applications on the JVM. The power of Akka is also available on the .NET Framework and Mono via the Akka.Net project.</a></blockquote>
It is achieved thanks to actor model pattern.
<blockquote><a href="http://en.wikipedia.org/wiki/Actor_model">The actor model in computer science is a mathematical model of concurrent computation that treats "actors" as the universal primitives of concurrent computation: in response to a message that it receives, an actor can make local decisions, create more actors, send more messages, and determine how to respond to the next message received. The actor model originated in 1973.</a></blockquote>
<a href="http://www.slideshare.net/drorbr/the-actor-model-towards-better-concurrency">More info on actor model.</a>

Where, I have started with Akka :
<ul>
	<li>http://akka.io/</li>
	<li>http://getakka.net/</li>
	<li>Akka.NET BootCamp - https://petabridge.com/bootcamp/ ( highly recommended )</li>
	<li>Github - https://github.com/akkadotnet/akka.net</li>
</ul>
<h4>Example - Github commit counter</h4>
As with all the technical learning, the best way to do it is through example projects. I had couple of ideas and have decided to got with a simple app for counting commits in all the repos on Github. It's straightforward, simple and I can use a non-complicated hierarchy of actors to achieve that. There are many examples on how to use Github Api, I won't go into details here. I am gonna use <a href="https://github.com/octokit/octokit.net">Octokit - nuget package</a> which is a official SDK for Github in .NET. This package provides nice and easy to use GitHub client.

 
<pre class="nums:true lang:c# decode:true">var login = "michal-franc";
var github = new GitHubClient(new ProductHeaderValue("AkkaCounter"), new InMemoryCredentialStore
             (new Credentials("hidden_number")));</pre> 


hidden_number - has to be generated on your GitHub profile config page, there is also a possibility to call GitHub using anonymous user. However, with the latter option, keep in mind that this is only for testing and there is very small request limit of <a href="https://developer.github.com/v3/#rate-limiting">60 per hour compared to 5000 per hour for authenticated user</a>.

Using Octokit I can create a github-client what can be used to easily get all the commits for the public repos.
 
<pre class="nums:true lang:c# decode:true">
public class GithubApi
{
   [Test]
   public async void CountCommitsSimpleTest()
   {
     var sw = new Stopwatch();

     var github = new GitHubClient(new ProductHeaderValue("AkkaCounter"), new InMemoryCredentialStore
     (new Credentials("hidden_number")));

     var repos = await github.Repository.GetAllForUser("michal-franc");

     var countCommits = 0;

     foreach (var repository in repos)
     {
        var commits = await github.Repository.Commits.GetAll(repository.Owner.Login, repository.Name);
        countCommits = countCommits + commits.Count;
     }

     sw.Stop();

     Console.WriteLine("Time it took to get the data - " + sw.ElapsedMilliseconds);

      Console.WriteLine(countCommits);
     }
}</pre> 
<ul>
<li>line 11 - getting all the public repos using github client for my user.</li>
<li>line 15 - getting through all the repos and getting the commits count</li>
<li>line 25 - displaying the final number of commits</li>
</ul>

Full procedure takes around <strong>100458 ms ~ 1.66 minute</strong>. Quite long, considering it's somehow a simple task + all the hard work is done on the Github side. How to make it faster then ? The main problem here is the server response time. I am sequentially asking the server to get all the commits for single repo. Because the 'number crunching' happens on the server side, the github client is waiting for the response. This wait time is wasted. Instead of this approach, I could make multiple requests. That for sure will speed things up. It could be done with threads but this blog post is about Akka so lets do this using actors.

The pseudo code for new solution.

<ul>
<li>Create one actor that does a request for all the public repos associated to my user.</li>
<li>For each repo create a child actor that will do request getting all the commits.</li>
<li>All the child actors will inform the parent actor about the number of commits in the repo.</li>
<li>Count the number of commits received by the main Actor.</li>
</ul>

<img src="http://www.mfranc.com/wp-content/uploads/2015/04/Actors-graph.png" alt="Graph of Actors" />

<h4>The Code</h4>
 
<pre class="nums:true lang:c# decode:true " >
public static void Main(string[] args)
{
   var actorSystem = ActorSystem.Create("main");

   var githubRepoActor = actorSystem.ActorOf(Props.Create(() => new MainGithubRepoActor()), "ReporeadingActor");

   githubRepoActor.Tell(null);

   actorSystem.AwaitTermination();
}</pre> 

<ul>
<li>line 3 - <a href="http://getakka.net/wiki/ActorSystem">ActorSystem</a> is a root for all the stuff related to actors. It does a lot of different tricks behind the scenes and its something like a base actor for all the other actors.</li>
<li>line 5 - Creation of MainGithubRepo. Never ever create actors using 'new', always use ActorSystem or Context ( from withing the other actor ). Props object is a concept of a blueprint with instructions on how to create actors. In this scenario it is just a boilerplate code but Props can be used to share actor specification across different ActorSystems, this system can even be on some other machine. It's a concept simillar to DockerFile or VagrantFile. 'ReporeadingActor' parameter is a name for my main Actor. Always name your actors accordingly.
<li>line 7 - To start actor, I need to send a message to him. I am sending null because this actor doesn't support any customized command. You can image here a list of commands like 'start', 'stop' that could be used to control the actor.</li>
<li>line 9 - Await Termination will block main thread until all the actors have terminated.</li>
</ul>

<h4>Repo Reader</h4>
 
<pre class="nums:true lang:c# decode:true " >public class MainGithubRepoActor : ReceiveActor
{
    public MainGithubRepoActor()
    {
        ActorRef notifyActor = Context.ActorOf(Props.Create(() => new WritetToConsoleActor()));

        ActorRef comitCounterActors = Context.ActorOf(Props.Create(() => new CountCommitsActor())
                                      .WithRouter(new RoundRobinPool(20)), "CommitCounters");

        var github = new GitHubClient(new ProductHeaderValue("AkkaCounter"), new InMemoryCredentialStore(new Credentials("hidden_number")));

        var repos = github.Repository.GetAllForUser("michal-franc").Result;

        notifyActor.Tell(new NotifyUserMessage(string.Format("Found {0} repos.", repos.Count)));

        foreach (var repository in repos)
        {
            comitCounterActors.Tell(new CountCommitsForRepo(repository.Name));
        }

        var countedCommits = 0;

        this.Receive(x =>
        {
            countedCommits += x;
            notifyActor.Tell(new NotifyUserMessage(string.Format("Received {0} commits count.\r\n CurrentCount : {1}", 
                                x, countedCommits)));
        });
    }
}</pre> 

<ul>
<li>line 1 - This Actor inherits from ReceiveActor. This is a special kind of actor that has a nice 'this.Receive' convention to write its logic. There are of course all the different types of actors.<a href="http://getakka.net/wiki/ReceiveActor">More info on Receive Actor</a></li>
<li>line 3 - for ReceiveActor, all the logic is implemented in constructor.
<li>line 5 - The first thing to do is to define child actors. One of them is 'WriteToConsoleActor'. This a special actor that just writes the messages to console. It is potentially unnecessary logic but just to show some general idea I have it here. I could create a list of different actors that write messages to different places.</li>
<li>line 7 - Then I create commit reading actors. I want to create one actor per repo. My Github account currently have 31 public repos. In here, instead of creating one Actor, I am creating a collection of 20 Actors.</li>
<li>I used ActorRef in the code instead var to show what is ActorRef and what is created when creating Actors. No matter of what type of actor you create and it doesn't matter if its a single actor or a collection the result is always ActorRef. This is an object that is close to concept of 'pointer'. The main Actor parent, doesn't have to know what is behind the ActorRef he is just sending a messages and awaits a response, from something behind 'pointer'. This is a very awesome way to handle this. This ActorRef can also point to different machine / server. A neat abstraction.</li>
<li>line 18 - I am getting all the repos then send a message to ActorRef. As you can see the parent doesn't care what will happen with the message and whats behind it.</li>
<li>line 26 - At the end I am awaiting responses of type int. My commit reading actors will notify this parent back with a number. Those numbers are then counted and there is the result.</li>
</ul>

<h4>WriteToConsoleActor</h4>

 
<pre class="nums:true lang:c# decode:true " >public class WritetToConsoleActor : ReceiveActor
{
   public WritetToConsoleActor()
   {
      Receive(x => Console.WriteLine(x.Message));
   }
}</pre> 


This is a simple actor that just writes the received messages to console. NotifyUserMessage is just a dto with Message property.

<h4>Commit Counter</h4>
 
<pre class="nums:true lang:c# decode:true " >public class CountCommitsActor : ReceiveActor
{
   public CountCommitsActor()
   {
      var login = "michal-franc";
      var github = new GitHubClient(new ProductHeaderValue("AkkaCounter"), 
                   new InMemoryCredentialStore(new Credentials("hidden_number")));

      this.Receive(x =>
      {
         var commits = github.Repository.Commits.GetAll(login, x.RepoName).Result;
         this.Sender.Tell(commits.Count);
      });
   }
}</pre> 

Commit counter just gets the list of comments, then sends the parent the number of commits.

Using Akka counting commits took - <strong>0.72 minutes</strong>. 

This example is simple and there are all the different problems and quirks with it. For instance:
- What will happen if there is a connection issue ?
- What will happen if i will use my request limit in github api ?
- How to handle some orchestration ?

Those and other problems I will describe in another post. For now this is a simple example that i used to start exploring the Akka world. This technology is quite promising and i am happy that awesome team lead by created it. Thanks to that i don't have to learn Scala to use it.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2540</wp:post_id>
		<wp:post_date>2015-04-27 09:00:06</wp:post_date>
		<wp:post_date_gmt>2015-04-27 08:00:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>akka-net-simple-example-with-github-api</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[78]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[akka.net]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[Brief introduction to Akka.Net with sample project based on github api.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3704313583]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>637</wp:comment_id>
			<wp:comment_author><![CDATA[dotnetomaniak.pl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetomaniak.pl/EN-AkkaNET-simple-example-with-Github-Api-Pragmatic-Developer</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.2</wp:comment_author_IP>
			<wp:comment_date>2015-04-27 12:10:14</wp:comment_date>
			<wp:comment_date_gmt>2015-04-27 11:10:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>[EN] Akka.NET simple example with Github Api | Pragmatic Developer...</strong>

Dziękujemy za dodanie artykułu - Trackback z dotnetomaniak.pl...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1430133014.4888";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1430952051.4524";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1430952051]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>640</wp:comment_id>
			<wp:comment_author><![CDATA[Andrew Skotzko]]></wp:comment_author>
			<wp:comment_author_email>andrew.skotzko@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.andrewskotzko.com</wp:comment_author_url>
			<wp:comment_author_IP>104.32.104.69</wp:comment_author_IP>
			<wp:comment_date>2015-04-27 17:45:00</wp:comment_date>
			<wp:comment_date_gmt>2015-04-27 16:45:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Nice demo here, Michal! Couple suggestions to look into as you explore some of the problems/quirks further:

- consider using `ReceiveAny` in your receive actors as well as an actual pattern match receive, since you're not actually using the match predicates in this one example
- depending on what supervision / failure behavior you want, can look at having the coordinator ("MainGithubRepoActor") do the supervision of the routees failures by making your router escalate in its `SupervisionStrategy`. Alternatively, you could route to a per-repo coordinator that could then create/supervise another child to do the actual requests, and have per-repo restarts / error handling that way.



Anyway, nice stuff here! Keep it up!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1990124763]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>649</wp:comment_id>
			<wp:comment_author><![CDATA[Michael Manning]]></wp:comment_author>
			<wp:comment_author_email>manningmichael@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>208.75.144.8</wp:comment_author_IP>
			<wp:comment_date>2015-04-28 15:58:00</wp:comment_date>
			<wp:comment_date_gmt>2015-04-28 14:58:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[This line is the one that makes things really "pop" because I have not gotten around to it yet:

.WithRouter(new RoundRobinPool(20))



Thanks for the nice write-up.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1991846618]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>652</wp:comment_id>
			<wp:comment_author><![CDATA[GomathiNayagam]]></wp:comment_author>
			<wp:comment_author_email>gomes.uma@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>72.32.115.234</wp:comment_author_IP>
			<wp:comment_date>2015-04-28 19:35:00</wp:comment_date>
			<wp:comment_date_gmt>2015-04-28 18:35:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[do you have source code shared any where]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1992278812]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>664</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>82.19.201.169</wp:comment_author_IP>
			<wp:comment_date>2015-04-29 22:44:00</wp:comment_date>
			<wp:comment_date_gmt>2015-04-29 21:44:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Let me finish another blog post about Akka.NET and I will drop code samples on github :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>652</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1992278812]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1994822531]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>665</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>82.19.201.169</wp:comment_author_IP>
			<wp:comment_date>2015-04-29 22:45:00</wp:comment_date>
			<wp:comment_date_gmt>2015-04-29 21:45:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Yeah,


I am planning to get into more details about Actor Pools. For now it's also a mystery for me. It works, so I am happy.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>649</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1991846618]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1994824303]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>666</wp:comment_id>
			<wp:comment_author><![CDATA[Michal Franc]]></wp:comment_author>
			<wp:comment_author_email>lam.michal.franc@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.mfranc.com/</wp:comment_author_url>
			<wp:comment_author_IP>82.19.201.169</wp:comment_author_IP>
			<wp:comment_date>2015-04-29 22:51:00</wp:comment_date>
			<wp:comment_date_gmt>2015-04-29 21:51:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thanks for all the suggestions Andrew.

I am currently getting my head around all the supervision scenarios. The biggest problem is to find a nice set of errors that I could simulate to really see how they work.

Maybe you could point me at some nice examples or ideally some open sourced repos with Akka.NET ?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>640</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1990124763]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1994833359]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>668</wp:comment_id>
			<wp:comment_author><![CDATA[Andrew Skotzko]]></wp:comment_author>
			<wp:comment_author_email>andrew.skotzko@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.andrewskotzko.com</wp:comment_author_url>
			<wp:comment_author_IP>23.243.168.89</wp:comment_author_IP>
			<wp:comment_date>2015-04-29 23:17:00</wp:comment_date>
			<wp:comment_date_gmt>2015-04-29 22:17:00</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hmm, yeah. Really the pattern I'd suggest thinking about for supervision is commander pattern. So you'd have a stateful actor who is responsible for tracking the completed status of a task,  and a stateless actor who carries out the actual execution of the command. 

If the stateless actor fails, it has to notify the commander to tell it that the job has failed and let it decide what to do. 

You can see an example of this in our PipeTo sample here: https://github.com/petabridge/akkadotnet-code-samples/tree/master/PipeTo. 

That example includes both supervision and `try...catch` error handling because it specifically needs to include the context of which job failed inside the supervision stuff, and unless actors:job match 1:1 in failure case the built in supervision info (which actor failed) needs extra info to get the task handled right. But that's specific to this particular case.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>666</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1994833359]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[1994877664]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>TDD / Unit Testing big list of learning resources from basics to advanced topics</title>
		<link>http://www.mfranc.com/unit-testing/tdd-unit-testing-big-list-of-learning-resources-from-basics-to-advanced-topics/</link>
		<pubDate>Fri, 08 May 2015 23:35:40 +0000</pubDate>
		<dc:creator>LaM</dc:creator>
		<guid isPermaLink="false">http://www.mfranc.com/?p=2654</guid>
		<description></description>
		<content:encoded><![CDATA[One of my fellow dev friends asked about a set of links, books, screen-casts related to TDD / Unit Testing. He wants to expand his knowledge. Instead of sending him a private message, I thought that it would be great to just create a blog post with all the resources, I used in the past to learn.
<h3>Basics</h3>
<blockquote><a href="http://osherove.com/videos/2013/10/16/video-unit-testing-and-tdd-ndash-why-you-should-care-and-how.html">Presentation - Video: Unit Testing and TDD – Why You Should Care and How to Make It Happen By Roy Osherove </a></blockquote>
If you are completely new to those concepts then this presentation will be a nice quick start.
<blockquote><a href=" http://www.manning.com/osherove/">Book - "The Art Of Unit Testing" by Roy Osherove</a></blockquote>
Start here if you want to get into TDD and Unit Testing. Where to start then ? I started with <a href="http://osherove.com/">Roy Osherove</a> book. <span style="line-height: 1.5;">It might be outdated know but I think this one is a nice and easy quick start guide on how to get to TDD and Unit Testing. </span>
<blockquote><a href="http://www.amazon.com/Professional-Test-Driven-Development-Applications/dp/047064320X/">Book - "Professional Test Driven Development with C#"  by </a><a href="http://www.amazon.com/James-Bender/e/B004W11KOS/ref=dp_byline_cont_book_1" data-asin="B004W11KOS">James Bender</a><a href="http://www.amazon.com/Professional-Test-Driven-Development-Applications/dp/047064320X/"> and </a><a href="http://www.amazon.com/Jeff-McWherter/e/B004D4FGQM/ref=dp_byline_cont_book_2" data-asin="B004D4FGQM">Jeff McWherter</a><a href="http://www.amazon.com/Professional-Test-Driven-Development-Applications/dp/047064320X/"> </a></blockquote>
Another good book to kick-start the learning process. It's a full course starting from why TDD might help you and then taking you through the journey from TDD beginner.
<blockquote><a href="http://www.mfranc.com/unit-testing/unit-test-code-with-static-method-console-write/">Blog Post - Unit Test code with static method Console.Write By Myself </a></blockquote>
If you ever asked a question on how to unit test static methods then my post shows one good approach to it.
<blockquote><a href="http://www.mfranc.com/unit-testing/good-unit-test-one-assert/ ">Blog Post - Good unit test – One Assert By Myself</a></blockquote>
An explanation why one assert per unit of logic is the way to go.
<blockquote>Blog Post Series - String Calculator Kata <a href="http://www.mfranc.com/tdd/tdd-commit-by-commit-string-calculator-i/">one </a><a href="http://www.mfranc.com/tdd/tdd-commit-by-commit-string-calculator-ii/">two</a> <a href="http://www.mfranc.com/tdd/tdd-commit-by-commit-string-calculator-kata-iii/">three</a> <a href="http://www.mfranc.com/tdd/tdd-commit-by-commit-string-calculator-kata-iv/">four </a>by Myself :)</blockquote>
Kata exercise step by step with a commentary.
<blockquote><a href="http://www.daedtech.com/tag/unit-testing">Blog Post Series - Chess TDD Kata By </a><a title="Posts by Erik Dietrich" href="http://www.daedtech.com/author/erik" rel="author">Erik Dietrich</a><a href="http://www.daedtech.com/tag/unit-testing"> </a></blockquote>
An awesome Kata with great commentary
<h3>Intermediate</h3>
Resources for developers that started using TDD practice and want to expand their knowledge.
<blockquote><a href="http://www.amazon.com/Test-Driven-Development-By-Example/dp/0321146530/">Book - "Test Driven Development: By Example" by Kent Beck </a></blockquote>
Yes maybe it would be best to start with Kent's book, but I think it is more suitable for developers that tried TDD, did some smaller projects with it. In order to get most of Kent's book, I think that you need prior experience. Kent's book is like the bible that you will get back to from time to time to get new "A-HA" moments. It's is really worth revisiting it wit more practical experience.
<blockquote><a href="http://www.pluralsight.com/courses/outside-in-tdd">Pluralisight - Outside In TDD by Mark Seemann</a></blockquote>
This course is a great way to learn about one approach to TDD. Mark Seemann is probably known to all the .NET developers thanks to his blog and DI in .NET book.
<blockquote><a href="http://martinfowler.com/articles/is-tdd-dead/">Discussions - Is TDD Dead Series </a></blockquote>
There was a huge debate about TDD and its future / relevance. This series of discussions is treasure trove of knowledge.
<blockquote><a href="https://vimeo.com/68375232">Presentation -  TDD, where did it all go wrong by </a><a href="https://vimeo.com/68375232">Ian Cooper </a><a href="https://vimeo.com/68375232"> </a></blockquote>
If you have watched the TDD discussions then you also can't miss Ian Cooper talk.
<blockquote><a href=" http://courses.osherove.com/courses/tddpairing">Course / Screen cast - TDD Pairing Sessions - Building a Go Game by Roy Osherove</a></blockquote>
I haven't checked this course yet, but its Roy and 8hrs of pair programming awesomnes!
<blockquote><a href=" http://codemanship.co.uk/parlezuml/blog/?postid=987">Blog Post -  'Classic' or the 'London school' of TDD by Jason Gorman</a></blockquote>
Explanation of two different approaches to TDD
<blockquote><a href=" http://www.davesquared.net/2011/03/why-learning-tdd-is-hard-and-what-to-do.html/">Blog Post - Why learning TDD is hard, and what to do about it by David Tchepak</a>

<a href="http://hoff2.com/2014/01/24/tdd_is_a_path.html">Blog Post - The TDD That Can be Spoken Is Not the Eternal TDD by Charles Hoffman</a>

<a href="http://stevenjackson.github.io/2014/01/26/tdd-is-a-path/">Blog Post - TDD is a path by Steve Jackson </a>

<a href="http://blog.testdouble.com/posts/2014-01-25-the-failures-of-intro-to-tdd.html">Blog Post - The Failures of "Intro to TDD" by  Justin Searls</a></blockquote>
Insights into why learning TDD is not that easy and needs a lot of practice and try / error approach.
<h3>Advanced</h3>
Topics that might be going out of TDD and sometimes into more philosophical issues.
<blockquote><a href=" http://www.amazon.com/Growing-Object-Oriented-Software-Guided-Tests/dp/0321503627">Book - Growing Object-Oriented Software, Guided by Tests by Steve Freeman  and Nat Pryce</a></blockquote>
With some proven war stories it is time to start thinking how Unit Tests and TDD fits into code design.
<blockquote> <a href=" http://www.pluralsight.com/courses/advanced-unit-testing">Pluralsight - Advanced Unit Testing by </a><a href="http://www.pluralsight.com/author/mark-seemann">Mark Seemann</a></blockquote>
Another great course by Mark with more advanced topics.
<blockquote><a href="http://www.pluralsight.com/courses/fsharp-property-based-testing-introduction"> Pluralsight - Introduction to Property-based Testing with F# by Mark Seemann </a></blockquote>
Property-based Testing is still a novelty for me, it is a topic worth exploring as it gets more traction currently.
<blockquote><a href="http://xunitpatterns.com/">Book - XUnit Test Patterns by Gerard Meszaros</a></blockquote>
If Kent's Beck book is a Bible then Gerard Meszaros book is a new Testament. Yes it has XUnit in its name but it really doesn't matter. Topics covered here are adaptable to all the technologies plus you need to read this book if you want to get a basic vocabulary around TDD and Unit Testing.
<blockquote><a href="http://simon-says-architecture.com/2012/06/27/if-you-are-not-doing-tdd/">Blog Post - If you are not doing TDD ... by Szymon Pobiega</a></blockquote>
Not doing TDD is not something bad, TDD is just another tool in your belt.
<blockquote><a href="http://blog.8thlight.com/uncle-bob/2013/03/06/ThePragmaticsOfTDD.html">Blog Post -The Pragmatics of TDD by Uncle Bob</a></blockquote>
Another great post explaining that there is a lot of pragmatism in TDD
<blockquote><a href=" http://blog.james-carr.org/2006/11/03/tdd-anti-patterns/ ">Blog Post - TDD Anti-Patterns by James Carr</a></blockquote>
Funny but knowledgeable list of anti patterns in TDD
<h3>Functional Flavour</h3>
If you are into functional programming then this might be also of interest to you.
<blockquote><a href="http://www.pluralsight.com/courses/fsharp-unit-testing">Pluralsight - F# Unit Testing by Mark Seemann</a>

<a href="http://www.pluralsight.com/courses/fsharp-test-driven-development">Pluralsight - Test-driven Development with F# by Mark Seemann</a>

<a href="http://www.infoq.com/presentations/mock-fsharp-tdd/">Presentation - Look, No Mocks! Functional TDD with F# by Mark Seemann</a></blockquote>
&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2654</wp:post_id>
		<wp:post_date>2015-05-09 00:35:40</wp:post_date>
		<wp:post_date_gmt>2015-05-08 23:35:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tdd-unit-testing-big-list-of-learning-resources-from-basics-to-advanced-topics</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tdd"><![CDATA[TDD]]></category>
		<category domain="category" nicename="unit-testing"><![CDATA[Unit Test]]></category>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_linkdex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_focuskw</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_title</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_metadesc</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-noindex</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-nofollow</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_meta-robots-adv</wp:meta_key>
			<wp:meta_value><![CDATA[none]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-include</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_sitemap-prio</wp:meta_key>
			<wp:meta_value><![CDATA[-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_canonical</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_redirect</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_opengraph-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_yoast_wpseo_google-plus-description</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[3748500755]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>757</wp:comment_id>
			<wp:comment_author><![CDATA[dotnetomaniak.pl]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://dotnetomaniak.pl/EN-TDD-Unit-Testing-big-list-of-learning-resources-from-basics-to-advanced-topics-Pragmatic-Developer</wp:comment_author_url>
			<wp:comment_author_IP>91.219.122.2</wp:comment_author_IP>
			<wp:comment_date>2015-05-09 00:38:24</wp:comment_date>
			<wp:comment_date_gmt>2015-05-08 23:38:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>[EN] TDD / Unit Testing big list of learning resources from basics to advanced topics | Pragmatic Developer...</strong>

Dziękujemy za dodanie artykułu - Trackback z dotnetomaniak.pl...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1431128304.7057";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:15:"1431202419.5598";s:7:"message";s:39:"LaM changed the comment status to trash";s:5:"event";s:12:"status-trash";s:4:"user";s:3:"LaM";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1431202419]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
</channel>
</rss>
